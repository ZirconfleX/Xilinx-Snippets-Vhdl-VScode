//-------------------------------------------------------------------------------------------
// VHDL Xilinx Library component snippets
// Device:               Spartan-6, Virtex-5, Virtex-6, 7-Series, All Ultrascale,
//                       All Zynq, Versal
// Author:               Zirconflex
// Purpose:              Snippets for VS-code editor created from the Xilinx
//                       component libraries.
// Tools:                Visual Studio Code Editor
// Limitations:          None
//
// Version:              0.01
// Filename:             Xilinx-Snippets
// Date Created:         11Mar20
// Date Last Modified:   12Mar20
//-------------------------------------------------------------------------------------------
// Disclaimer:
//		This file is delivered as is.
//      This file with snippets fror the Visual Studio Code editor is supplied as is.
//      Therefore, the supplier cannot be held accountable for any typo or other flaw
//      in this file. The supplier cannot be held accountable if Xilinx modifies
//      whatsoever to its components/primitives libraries.
//-------------------------------------------------------------------------------------------
//
{
    "BITSLICE_CONTROL": {
        "prefix": "BITSLICE_CONTROL",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Btslce_Ctrl_${2:0} : BITSLICE_CONTROL",
            "    generic map (",
            "        CTRL_CLK            => \"EXTERNAL\",-- string",
            "        DIV_MODE            => \"DIV2\",    -- string",
            "        EN_CLK_TO_EXT_NORTH => \"DISABLE\", -- string",
            "        EN_CLK_TO_EXT_SOUTH => \"DISABLE\", -- string",
            "        EN_DYN_ODLY_MODE    => \"FALSE\",   -- string",
            "        EN_OTHER_NCLK       => \"FALSE\",   -- string",
            "        EN_OTHER_PCLK       => \"FALSE\",   -- string",
            "        IDLY_VT_TRACK       => \"TRUE\",    -- string",
            "        INV_RXCLK           => \"FALSE\",   -- string",
            "        ODLY_VT_TRACK       => \"TRUE\",    -- string",
            "        QDLY_VT_TRACK       => \"TRUE\",    -- string",
            "        READ_IDLE_COUNT     => \"00\" & {:X\"0\"},-- std_logic_vector[5:0]",
            "        REFCLK_SRC          => \"PLLCLK\",  -- string",
            "        ROUNDING_FACTOR     => 16,          -- integer",
            "        RXGATE_EXTEND       => \"FALSE\",   -- string",
            "        RX_CLK_PHASE_N      => \"SHIFT_0\", -- string",
            "        RX_CLK_PHASE_P      => \"SHIFT_0\", -- string",
            "        RX_GATING           => \"DISABLE\", -- string",
            "        SELF_CALIBRATE      => \"ENABLE\",  -- string",
            "        SERIAL_MODE         => \"FALSE\",   -- string",
            "        TX_GATING           => \"DISABLE\", -- string",
            "        SIM_SPEEDUP         => \"FAST\",    -- string",
            "        SIM_VERSION         => 2.0          -- real",
            "    )",
            "    port map (",
            "        RIU_CLK             => ${3:RIU_CLK}           , -- in",
            "        RIU_WR_EN           => ${4:RIU_WR_EN}         , -- in",
            "        RIU_NIBBLE_SEL      => ${5:RIU_NIBBLE_SEL}    , -- in",
            "        RIU_ADDR            => ${6:RIU_ADDR}          , -- in [5:0]",
            "        RIU_WR_DATA         => ${7:RIU_WR_DATA}       , -- in [15:0]",
            "        RIU_RD_DATA         => ${8:RIU_RD_DATA}       , -- out [15:0]",
            "        RIU_VALID           => ${9:RIU_VALID}         , -- out",
            "        PLL_CLK             => ${10:PLL_CLK}           , -- in",
            "        REFCLK              => ${11:REFCLK}            , -- in",
            "        RST                 => ${12:RST}               , -- in",
            "        EN_VTC              => ${13:EN_VTC}            , -- in",
            "        VTC_RDY             => ${14:VTC_RDY}           , -- out",
            "        DLY_RDY             => ${15:DLY_RDY}           , -- out",
            "        DYN_DCI             => ${16:DYN_DCI}           , -- out [6:0]",
            "        TBYTE_IN            => ${17:TBYTE_IN}          , -- in [3:0]",
            "        PHY_RDEN            => ${18:PHY_RDEN}          , -- in [3:0]",
            "        PHY_RDCS0           => ${19:PHY_RDCS0}         , -- in [3:0]",
            "        PHY_RDCS1           => ${20:PHY_RDCS1}         , -- in [3:0]",
            "        PHY_WRCS0           => ${21:PHY_WRCS0}         , -- in [3:0]",
            "        PHY_WRCS1           => ${22:PHY_WRCS1}         , -- in [3:0]",
            "        CLK_FROM_EXT        => ${23:CLK_FROM_EXT}      , -- in",
            "        NCLK_NIBBLE_IN      => ${24:NCLK_NIBBLE_IN}    , -- in",
            "        PCLK_NIBBLE_IN      => ${25:PCLK_NIBBLE_IN}    , -- in",
            "        NCLK_NIBBLE_OUT     => ${26:NCLK_NIBBLE_OUT}   , -- out",
            "        PCLK_NIBBLE_OUT     => ${27:PCLK_NIBBLE_OUT}   , -- out",
            "        CLK_TO_EXT_NORTH    => ${28:CLK_TO_EXT_NORTH}  , -- out",
            "        CLK_TO_EXT_SOUTH    => ${29:CLK_TO_EXT_SOUTH}  , -- out",
            "        RX_BIT_CTRL_OUT0    => ${30:RX_BIT_CTRL_OUT0}  , -- out [39:0]",
            "        RX_BIT_CTRL_OUT1    => ${31:RX_BIT_CTRL_OUT1}  , -- out [39:0]",
            "        RX_BIT_CTRL_OUT2    => ${32:RX_BIT_CTRL_OUT2}  , -- out [39:0]",
            "        RX_BIT_CTRL_OUT3    => ${33:RX_BIT_CTRL_OUT3}  , -- out [39:0]",
            "        RX_BIT_CTRL_OUT4    => ${34:RX_BIT_CTRL_OUT4}  , -- out [39:0]",
            "        RX_BIT_CTRL_OUT5    => ${35:RX_BIT_CTRL_OUT5}  , -- out [39:0]",
            "        RX_BIT_CTRL_OUT6    => ${36:RX_BIT_CTRL_OUT6}  , -- out [39:0]",
            "        RX_BIT_CTRL_IN0     => ${37:RX_BIT_CTRL_IN0}   , -- in [39:0]",
            "        RX_BIT_CTRL_IN1     => ${38:RX_BIT_CTRL_IN1}   , -- in [39:0]",
            "        RX_BIT_CTRL_IN2     => ${39:RX_BIT_CTRL_IN2}   , -- in [39:0]",
            "        RX_BIT_CTRL_IN3     => ${40:RX_BIT_CTRL_IN3}   , -- in [39:0]",
            "        RX_BIT_CTRL_IN4     => ${41:RX_BIT_CTRL_IN4}   , -- in [39:0]",
            "        RX_BIT_CTRL_IN5     => ${42:RX_BIT_CTRL_IN5}   , -- in [39:0]",
            "        RX_BIT_CTRL_IN6     => ${43:RX_BIT_CTRL_IN6}   , -- in [39:0]",
            "        TX_BIT_CTRL_OUT0    => ${44:TX_BIT_CTRL_OUT0}  , -- out [39:0]",
            "        TX_BIT_CTRL_OUT1    => ${45:TX_BIT_CTRL_OUT1}  , -- out [39:0]",
            "        TX_BIT_CTRL_OUT2    => ${46:TX_BIT_CTRL_OUT2}  , -- out [39:0]",
            "        TX_BIT_CTRL_OUT3    => ${47:TX_BIT_CTRL_OUT3}  , -- out [39:0]",
            "        TX_BIT_CTRL_OUT4    => ${48:TX_BIT_CTRL_OUT4}  , -- out [39:0]",
            "        TX_BIT_CTRL_OUT5    => ${49:TX_BIT_CTRL_OUT5}  , -- out [39:0]",
            "        TX_BIT_CTRL_OUT6    => ${50:TX_BIT_CTRL_OUT6}  , -- out [39:0]",
            "        TX_BIT_CTRL_IN0     => ${51:TX_BIT_CTRL_IN0}   , -- in [39:0]",
            "        TX_BIT_CTRL_IN1     => ${52:TX_BIT_CTRL_IN1}   , -- in [39:0]",
            "        TX_BIT_CTRL_IN2     => ${53:TX_BIT_CTRL_IN2}   , -- in [39:0]",
            "        TX_BIT_CTRL_IN3     => ${54:TX_BIT_CTRL_IN3}   , -- in [39:0]",
            "        TX_BIT_CTRL_IN4     => ${55:TX_BIT_CTRL_IN4}   , -- in [39:0]",
            "        TX_BIT_CTRL_IN5     => ${56:TX_BIT_CTRL_IN5}   , -- in [39:0]",
            "        TX_BIT_CTRL_IN6     => ${57:TX_BIT_CTRL_IN6}   , -- in [39:0]",
            "        TX_BIT_CTRL_OUT_TRI => ${58:TX_BIT_CTRL_OUT_TRI}, -- out [39:0]",
            "        TX_BIT_CTRL_IN_TRI  => ${59:TX_BIT_CTRL_IN_TRI} -- in [39:0]",
            "    );",
            ""
        ],
        "description": "BITSLICE_CONTROL for control using Native Mode IO",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BOUNDARY_SCAN": {
        "prefix": "BSCANE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bscane2_${2:0} : BSCANE2",
            "    generic map (DISABLE_JTAG => \"FALSE\",JTAG_CHAIN => 1)",
            "    port map (",
            "        TDI     => ${3:TDI}       , -- out",
            "        TCK     => ${4:TCK}       , -- out",
            "        TMS     => ${5:TMS}       , -- out",
            "        TDO     => ${6:TDO}       , -- in",
            "        DRCK    => ${7:DRCK}      , -- out",
            "        SEL     => ${8:SEL}       , -- out",
            "        SHIFT   => ${9:SHIFT}     , -- out",
            "        CAPTURE => ${10:CAPTURE}   , -- out",
            "        RESET   => ${11:RESET}     , -- out",
            "        UPDATE  => ${12:UPDATE}    , -- out",
            "        RUNTEST => ${13:RUNTEST}   -- out",
            "    );",
            ""
        ],
        "description": "Boundary-Scan User Instruction",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFCE_LEAF": {
        "prefix": "BUFCE_LEAF",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufce_leaf_${2:0} : BUFCE_LEAF",
            "    generic map (",
            "        CE_TYPE         => \"SYNC\",-- string",
            "        IS_CE_INVERTED  => '0', -- std_ulogic",
            "        IS_I_INVERTED   => '0' -- std_ulogic",
            "    )",
            "    port map (",
            "        I   => ${3:I }, -- in",
            "        CE  => ${4:CE}, -- in",
            "        O   => ${5:O } -- out",
            "    );",
            ""
        ],
        "description": "Clock buffer with CE for leaf driving off horizontal HCS row.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFCE_ROW": {
        "prefix": "BUFCE_ROW",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufce_row_${2:0} : BUFCE_ROW",
            "    generic map (",
            "        CE_TYPE         => \"SYNC\",-- string",
            "        IS_CE_INVERTED  => '0', -- std_ulogic",
            "        IS_I_INVERTED   => '0' -- std_ulogic",
            "    )",
            "    port map (",
            "        I   => ${3:I }, -- in",
            "        CE  => ${4:CE}, -- in",
            "        O   => ${5:O } -- out",
            "    );",
            ""
        ],
        "description": "",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFG": {
        "prefix": "BUFG",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufg_${2:0} :  BUFG port map (I => ${3:I}, O => ${4:O});"
        ],
        "description": "Simple clock buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFG_GT": {
        "prefix": "BUFG_GT",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufg_gt_${2:0} : BUFG_GT",
            "    generic map (IS_CLR_INVERTED => '0') --",
            "    port map (",
            "        I       => ${3:I      }, -- in",
            "        CE      => ${4:CE     }, -- in",
            "        CEMASK  => ${5:CEMASK }, -- in",
            "        CLR     => ${6:CLR    }, -- in",
            "        CLRMASK => ${7:CLRMASK}, -- in",
            "        DIV     => ${8:DIV    }, -- in [2:0]",
            "        O       => ${9:O      } -- out",
            "    );",
            ""
        ],
        "description": "Clock buffer driven by gigabit transceiver.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFG_GT_SYNC": {
        "prefix": "BUFG_GT_SYNC",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Buf_gt_sync_${2:0} : BUFG_GT_SYNC",
            "    port map (",
            "        CLK     => ${3:CLK    }, -- in",
            "        CLR     => ${4:CLR    }, -- in",
            "        CE      => ${5:CE     }, -- in",
            "        CESYNC  => ${6:CESYNC }, -- out",
            "        CLRSYNC => ${7:CLRSYNC} -- out",
            "    );",
            ""
        ],
        "description": "Clock buffer driven by the gigabit transceivers (GTs) and the ADC/DAC blocks",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFG_PS": {
        "prefix": "BUFG_PS",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufg_ps_${2:0} : BUFG_PS",
            "    generic map (SIM_DEVICE => \"ULTRASCALE_PLUS\",STARTUP_SYNC => \"FALSE\");"
            "    port map (I => ${3:I}, O => ${4:O});"
        ],
        "description": "",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFGCE": {
        "prefix": "BUFGCE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufgce_${2:0} : BUFGCE",
            "generic map (",
            "    CE_TYPE        => \"SYNC\",-- string",
            "    IS_CE_INVERTED => '0', -- std_ukogic",
            "    IS_I_INVERTED  => '0' -- std_ulogic",
            ")",
            "port map (",
            "    I  => ${3:I }, -- in",
            "    CE => ${4:CE}, -- in",
            "    O  => ${5:O } -- out",
            ");"
        ],
        "description": "Clock buffer with enable",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFGCE_DIV": {
        "prefix": "BUFGCE_DIV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufgce_div_${2:0} : BUFGCE_DIV",
            "    generic map (",
            "        BUFGCE_DIVIDE   => ${3:1}, -- integer",
            "        IS_CE_INVERTED  => '0', -- std_ulogic",
            "        IS_CLR_INVERTED => '0', -- std_ulogic",
            "        IS_I_INVERTED   => '0' -- std_ulogic",
            "    )",
            "    port map (",
            "        I   => ${4:I  }, -- in",
            "        CE  => ${5:CE }, -- in",
            "        CLR => ${6:CLR}, -- in",
            "        O   => ${7:O  } -- out",
            "    );",
            ""
        ],
        "description": "Divider clock buffer with clear and enable",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFGCTRL": {
        "prefix": "BUFGCTRL",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufgctrl_${2:0} : BUFGCTRL",
            "    generic map (",
            "        CE_TYPE_CE0         => \"SYNC\",        -- string",
            "        CE_TYPE_CE1         => \"SYNC\",        -- string",
            "        INIT_OUT            => 0,               -- integer",
            "        IS_CE0_INVERTED     => '0',             -- std_ulogic",
            "        IS_CE1_INVERTED     => '0',             -- std_ulogic",
            "        IS_I0_INVERTED      => '0',             -- std_ulogic",
            "        IS_I1_INVERTED      => '0',             -- std_ulogic",
            "        IS_IGNORE0_INVERTED => '0',             -- std_ulogic",
            "        IS_IGNORE1_INVERTED => '0',             -- std_ulogic",
            "        IS_S0_INVERTED      => '0',             -- std_ulogic",
            "        IS_S1_INVERTED      => '0',             -- std_ulogic",
            "        PRESELECT_I0        => false,           -- boolean",
            "        PRESELECT_I1        => false,           -- boolean",
            "        SIM_DEVICE          => \"ULTRASCALE\",  -- string",
            "        STARTUP_SYNC        => \"FALSE\"          -- string",
            "    )",
            "    port map (",
            "        I0      => ${3:I0     }, -- in",
            "        I1      => ${4:I1     }, -- in",
            "        S0      => ${5:S0     }, -- in",
            "        S1      => ${6:S1     }, -- in",
            "        CE0     => ${7:CE0    }, -- in",
            "        CE1     => ${8:CE1    }, -- in",
            "        IGNORE0 => ${9:IGNORE0}, -- in",
            "        IGNORE1 => ${10:IGNORE1}, -- in",
            "        O       => ${11:O      } -- out",
            "    );",
            ""
        ],
        "description": "Global clock control buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFGP": {
        "prefix": "BUFGP",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufgp_${2:0} : BUFGP port map (I => ${3:I}, O => ${4:O});"
        ],
        "description": "",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFH": {
        "prefix": "BUFH",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufh_${2:0} : BUFH port map (I => ${3:I}, O => ${4:O});"
        ],
        "description": "Hoizontal clock buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFHCE": {
        "prefix": "BUFHCE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_bufhce_${2:0} : BUFHCE",
            "    generic map (CE_TYPE => \"SYNC\",INIT_OUT => 0)",
            "    port map (I => ${3:I}, CE => ${4:CE}, O => ${5:O});"
        ],
        "description": "Horizontal clock buffer with enable.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFIO": {
        "prefix": "BUFIO",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufio_${2:0} : BUFIO port map (I => ${3:I}, O => ${4:O});"
        ],
        "description": "Local Clock Buffer for I/O.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFMR": {
        "prefix": "BUFMR",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufmr_${2:0} : BUFMR port map (I => ${3:I}, O => ${4:O});"
        ],
        "description": "Multi-Region clock buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFMRCE": {
        "prefix": "BUFMRCE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufmrce_${2:0} ;BUFMRCE",
            "    generic map (",
            "        CE_TYPE        => \"SYNC\",-- string",
            "        INIT_OUT       => 0, -- integer",
            "        IS_CE_INVERTED => '0' -- std_ulogic",
            "    )",
            "    port map (",
            "        I  => ${3:I }, -- in",
            "        CE => ${4:CE}, -- in",
            "        O  => ${5:O } -- out",
            "    );",
            ""
        ],
        "description": "Multi-Region clock buffer with enable.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "BUFR": {
        "prefix": "BUFR",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Bufr_${2:0} : BUFR",
            "    generic map (BUFR_DIVIDE => ${3:\"BYPASS\"}, SIM_DEVICE => ${4:\"7SERIES\"})",
            "    port map (I => ${5:I}, CE => ${6:CE}, CLR => ${7:CLR}, O => ${8:O});"
        ],
        "description": "Regional clock buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "CARRY4": {
        "prefix": "CARRY4",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Carry4_${2:0} : CARRY4",
            "    port map (",
            "        DI      => ${3:DI    }, -- in [3:0]",
            "        S       => ${4:S     }, -- in [3:0]",
            "        CYINIT  => ${5:CYINIT}, -- in",
            "        CI      => ${6:CI    }, -- in",
            "        O       => ${7:O     }, -- out [3:0]",
            "        CO      => ${8:CO    } -- out [3:0]",
            "    );",
            "",
        ],
        "description": "Fast carry logic with look ahead.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "CARRY8": {
        "prefix": "CARRY8",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Carry8_${2:0} : CARRY8",
            "    generic map (CARRY_TYPE  => ${3:\"SINGLE_CY8\"})",
            "    port map (",
            "        CI      => ${4:CI    }, -- in",
            "        CI_TOP  => ${5:CI_TOP}, -- in",
            "        DI      => ${6:DI    }, -- in [7:0]",
            "        S       => ${7:S     }, -- in [7:0]",
            "        CO      => ${8:CO    }, -- out [7:0]",
            "        O       => ${9:O     } -- out [7:0]",
            "    );",
            ""
        ],
        "description": "Fast carry with look ahead.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "CFGLUT5": {
        "prefix": "CFGLUT5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Cfglut5_${2:0} : CFGLUT5",
            "    generic map (INIT => ${3:X\"00000000\"})",
            "    port map (",
            "        CDI => ${4:CDI}, -- in",
            "        I0  => ${5:I0 }, -- in",
            "        I1  => ${6:I1 }, -- in",
            "        I2  => ${7:I2 }, -- in",
            "        I3  => ${8:I3 }, -- in",
            "        I4  => ${9:I4 }, -- in",
            "        CE  => ${10:CE }, -- in",
            "        CLK => ${11:CLK}, -- in",
            "        O5  => ${12:O5 }, -- out",
            "        O6  => ${13:O6 }, -- out",
            "        CDO => ${14:CDO} -- out",
            "    );",
            ""
        ],
        "description": "Dynamically reconfigurable 5-input look-up table.",
        "scope": "source.vhdl, vhdl, vhd"
    }


    "DIFFINBUF": {
        "prefix": "DIFFINBUF",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Diffinbuf_${2:0} : DIFFINBUF",
            "    generic map (",
            "        DQS_BIAS        => \"FALSE\", -- string",
            "        IBUF_LOW_PWR    => TRUE,     -- boolean",
            "        ISTANDARD       => \"UNUSED\", -- string",
            "        SIM_INPUT_BUFFER_OFFSET => 0  -- integer",
            "    )",
            "    port map (",
            "        DIFF_IN_N   => ${3:DIFF_IN_N}, -- in",
            "        DIFF_IN_P   => ${4:DIFF_IN_P}, -- in",
            "        OSC         => ${5:OSC      }, -- in [3:0]",
            "        OSC_EN      => ${6:OSC_EN   }, -- in [1:0]",
            "        VREF        => ${7:VREF     }, -- in",
            "        O           => ${8:O        }, -- out",
            "        O_B         => ${9:O_B      } -- out",
            "    );",
            ""
        ],
        "description": "Differential input buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "DNA_PORT": {
        "prefix": "DNA_PORT",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Dna_port_${2:0} : DNA_PORT",
            "    generic map (SIM_DNA_VALUE => ${3:X\"000000000000000\"})",
            "    port map (",
            "        DIN     => ${4:DIN  }, -- in",
            "        READ    => ${5:READ }, -- in",
            "        SHIFT   => ${6:SHIFT}, -- in",
            "        CLK     => ${7:CLK  }, -- in",
            "        DOUT    => ${8:DOUT } -- out",
            "    );",
            ""
        ],
        "description": "Device DNA access port.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "DNA_PORTE2": {
        "prefix": "DNA_PORTE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Dna_port_${2:0} : DNA_PORT",
            "    generic map (SIM_DNA_VALUE => ${3:X\"000000000000000000000000\"})",
            "    port map (",
            "        DIN     => ${4:DIN  }, -- in",
            "        READ    => ${5:READ }, -- in",
            "        SHIFT   => ${6:SHIFT}, -- in",
            "        CLK     => ${7:CLK  }, -- in",
            "        DOUT    => ${8:DOUT } -- out",
            "    );",
            ""
        ],
        "description": "Ultrascale(+) device DNA access port.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "DPLL": {
        "prefix": "DPLL",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Dpll_${2:0} : DPLL",
            "    generic map (",
            "        CLKIN_PERIOD            => ${3:0.000 },  -- real",
            "        REF_JITTER              => ${4:0.010 },  -- real",
            "        DIVCLK_DIVIDE           => ${5:1     },  -- integer",
            "        CLKFBOUT_MULT           => ${6:42    },  -- integer",
            "        CLKFBOUT_FRACT          => ${7:0     },  -- integer",
            "        CLKOUT0_DIVIDE          => ${8:2     },  -- integer",
            "        CLKOUT0_PHASE           => ${9:0.000 },  -- real",
            "        CLKOUT0_PHASE_CTRL      => ${10:\"00\"  },  -- std_logic_vector[1:0]",
            "        CLKOUT1_DIVIDE          => ${11:2     },  -- integer",
            "        CLKOUT1_PHASE           => ${12:0.000 },  -- real",
            "        CLKOUT1_PHASE_CTRL      => ${13:\"00\"  },  -- std_logic_vector[1:0]",
            "        CLKOUT2_DIVIDE          => ${14:2     },  -- integer",
            "        CLKOUT2_PHASE           => ${15:0.000 },  -- real",
            "        CLKOUT2_PHASE_CTRL      => ${16:\"00\"  },  -- std_logic_vector[1:0]",
            "        CLKOUT3_DIVIDE          => ${17:2     },  -- integer",
            "        CLKOUT3_PHASE           => ${18:0.000 },  -- real",
            "        CLKOUT3_PHASE_CTRL      => ${19:\"00\"  },  -- std_logic_vector[1:0]",
            "        COMPENSATION            => \"AUTO\",  -- string",
            "        DESKEW_DELAY            => ${20:0     },  -- integer",
            "        DESKEW_DELAY_EN         => ${21:\"FALSE\"}, -- string",
            "        DESKEW_DELAY_PATH       => ${22:\"FALSE\"}, -- string",
            "        IS_CLKIN_INVERTED       => '0',     -- bit",
            "        IS_PSEN_INVERTED        => '0',     -- bit",
            "        IS_PSINCDEC_INVERTED    => '0',     -- bit",
            "        IS_PWRDWN_INVERTED      => '0',     -- bit",
            "        IS_RST_INVERTED         => '0',     -- bit",
            "        SEL_LOCKED_IN           => '1',     -- bit",
            "        SEL_REG_DELAY           => \"00\",    -- std_logic_vector[1:0]",
            "        USE_REG_VALID           => '1'      -- bit",
            "    )",
            "    port map (",
            "        CLKFB_DESKEW    => ${23:CLKFB_DESKEW}, -- in",
            "        CLKIN_DESKEW    => ${24:CLKIN_DESKEW}, -- in",
            "        CLKIN           => ${25:CLKIN       }, -- in",
            "        PWRDWN          => ${26:PWRDWN      }, -- in",
            "        RST             => ${27:RST         }, -- in",
            "        CLKOUT0         => ${28:CLKOUT0     }, -- out",
            "        CLKOUT1         => ${29:CLKOUT1     }, -- out",
            "        CLKOUT2         => ${30:CLKOUT2     }, -- out",
            "        CLKOUT3         => ${31:CLKOUT3     }, -- out",
            "        PSCLK           => ${32:PSCLK       }, -- in",
            "        PSEN            => ${33:PSEN        }, -- in",
            "        PSINCDEC        => ${34:PSINCDEC    }, -- in",
            "        PSDONE          => ${35:PSDONE      }, -- out",
            "        DCLK            => ${36:DCLK        }, -- in",
            "        DEN             => ${37:DEN         }, -- in",
            "        DWE             => ${38:DWE         }, -- in",
            "        DADDR           => ${39:DADDR       }, -- in [6:0]",
            "        DI              => ${40:DI          }, -- in [15:0]",
            "        DO              => ${41:DO          }, -- out 15:0]",
            "        DRDY            => ${42:DRDY        }, -- out",
            "        LOCKED          => ${43:LOCKED      }, -- out",
            "        LOCKED_DESKEW   => ${44:LOCKED_DESKE}, -- out",
            "        LOCKED_FB       => ${45:LOCKED_FB   } -- out",
            "    );",
            ""
        ],
        "description": "Digital Phase Locked Loop",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "DSP48E1": {
        "prefix": "DSP48E1",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Dsp48e1_${2:0} : DSP48E1",
            "    generic map (",
            "        B_INPUT             => \"DIRECT\",      -- string",
            "        A_INPUT             => \"DIRECT\",      -- string",
            "        AREG                => 1,               -- integer",
            "        BREG                => 1,               -- integer",
            "        CREG                => 1,               -- integer",
            "        DREG                => 1,               -- integer",
            "        ADREG               => 1,               -- integer",
            "        MREG                => 1,               -- integer",
            "        PREG                => 1,               -- integer",
            "        BCASCREG            => 1,               -- integer",
            "        ACASCREG            => 1,               -- integer",
            "        INMODEREG           => 1,               -- integer",
            "        ALUMODEREG          => 1,               -- integer",
            "        CARRYINREG          => 1,               -- integer",
            "        CARRYINSELREG       => 1,               -- integer",
            "        OPMODEREG           => 1,               -- integer",
            "        PATTERN             => {:X\"000000000000\"},-- bit_vector",
            "        MASK                => {:X\"3FFFFFFFFFFF\"},-- bit_vector",
            "        AUTORESET_PATDET    => \"NO_RESET\",    -- string",
            "        SEL_MASK            => \"MASK\",        -- string",
            "        SEL_PATTERN         => \"PATTERN\",     -- string",
            "        USE_DPORT           => FALSE,           -- boolean",
            "        USE_MULT            => \"MULTIPLY\",    -- string",
            "        USE_PATTERN_DETECT  => \"NO_PATDET\",   -- string",
            "        USE_SIMD            => \"ONE48\",       -- string",
            "        IS_ALUMODE_INVERTED => \"0000\",        -- std_logic_vector[3:0]",
            "        IS_CARRYIN_INVERTED => '0',             -- bit",
            "        IS_CLK_INVERTED     => '0',             -- bit",
            "        IS_INMODE_INVERTED  => \"00000\",       -- std_logic_vector[4:0]",
            "        IS_OPMODE_INVERTED  => \"0000000\"        -- std_logic_vector[6:0]",
            "    )",
            "    port map (",
            "        B               => ${3:B             }, -- in [17:0]",
            "        BCIN            => ${4:BCIN          }, -- in [17:0]",
            "        CEB1            => ${5:CEB1          }, -- in",
            "        CEB2            => ${6:CEB2          }, -- in",
            "        RSTB            => ${7:RSTB          }, -- in",
            "        BCOUT           => ${8:BCOUT         }, -- out [17:0]",
            "        A               => ${9:A             }, -- in [29:0]",
            "        ACIN            => ${10:ACIN          }, -- in [29:0]",
            "        CEA1            => ${11:CEA1          }, -- in",
            "        CEA2            => ${12:CEA2          }, -- in",
            "        RSTA            => ${13:RSTA          }, -- in",
            "        ACOUT           => ${14:ACOUT         }, -- out [29:0]",
            "        D               => ${15:D             }, -- in [24:0]",
            "        CED             => ${16:CED           }, -- in",
            "        RSTD            => ${17:RSTD          }, -- in",
            "        CEAD            => ${18:CEAD          }, -- in",
            "        ALUMODE         => ${19:ALUMODE       }, -- in [3:0]",
            "        CEALUMODE       => ${20:CEALUMODE     }, -- in",
            "        RSTALUMODE      => ${21:RSTALUMODE    }, -- in",
            "        INMODE          => ${22:INMODE        }, -- in [4:0]",
            "        CEINMODE        => ${23:CEINMODE      }, -- in",
            "        RSTINMODE       => ${24:RSTINMODE     }, -- in",
            "        C               => ${25:C             }, -- in [47:0]",
            "        CEC             => ${26:CEC           }, -- in",
            "        RSTC            => ${27:RSTC          }, -- in",
            "        CARRYIN         => ${28:CARRYIN       }, -- in",
            "        CECARRYIN       => ${29:CECARRYIN     }, -- in",
            "        RSTALLCARRYIN   => ${30:RSTALLCARRYIN }, -- in",
            "        CARRYCASCIN     => ${31:CARRYCASCIN   }, -- in",
            "        CARRYINSEL      => ${32:CARRYINSEL    }, -- in [2:0]",
            "        CARRYCASCOUT    => ${33:CARRYCASCOUT  }, -- out",
            "        CARRYOUT        => ${34:CARRYOUT      }, -- out [3:0]",
            "        PCIN            => ${35:PCIN          }, -- in [47:0]",
            "        PCOUT           => ${36:PCOUT         }, -- out [47:0]",
            "        OPMODE          => ${37:OPMODE        }, -- in [6:0]",
            "        CECTRL          => ${38:CECTRL        }, -- in",
            "        RSTCTRL         => ${39:RSTCTRL       }, -- in",
            "        MULTSIGNIN      => ${40:MULTSIGNIN    }, -- in",
            "        CEM             => ${41:CEM           }, -- in",
            "        RSTM            => ${42:RSTM          }, -- in",
            "        MULTSIGNOUT     => ${43:MULTSIGNOUT   }, -- out",
            "        CLK             => ${44:CLK           }, -- in",
            "        P               => ${45:P             }, -- out [47:0]",
            "        CEP             => ${46:CEP           }, -- in",
            "        RSTP            => ${47:RSTP          }, -- in",
            "        PATTERNBDETECT  => ${48:PATTERNBDETECT}, -- out",
            "        PATTERNDETECT   => ${49:PATTERNDETECT }, -- out",
            "        OVERFLOW        => ${50:OVERFLOW      }, -- out",
            "        UNDERFLOW       => ${51:UNDERFLOW     }, -- out",
            "    );",
            ""
        ],
        "description": "Multi-functional arithmetic block.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "DSP48E2": {
        "prefix": "DSP48E2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Dsp48e2_${2:0} : DSP48E2",
            "    generic map (",
            "        A_INPUT                 => \"DIRECT\",      -- string",
            "        B_INPUT                 => \"DIRECT\",      -- string",
            "        AREG                    => 1,               -- integer",
            "        BREG                    => 1,               -- integer",
            "        CREG                    => 1,               -- integer",
            "        DREG                    => 1,               -- integer",
            "        ADREG                   => 1,               -- integer",
            "        ACASCREG                => 1,               -- integer",
            "        BCASCREG                => 1,               -- integer",
            "        MREG                    => 1,               -- integer",
            "        PREG                    => 1,               -- integer",
            "        INMODEREG               => 1,               -- integer",
            "        CARRYINREG              => 1,               -- integer",
            "        CARRYINSELREG           => 1,               -- integer",
            "        ALUMODEREG              => 1,               -- integer",
            "        OPMODEREG               => 1,               -- integer",
            "        AMULTSEL                => \"A\",           -- string",
            "        BMULTSEL                => \"B\",           -- string",
            "        PREADDINSEL             => \"A\",           -- string",
            "        SEL_MASK                => \"MASK\",        -- string",
            "        SEL_PATTERN             => \"PATTERN\",     -- string",
            "        AUTORESET_PATDET        => \"NO_RESET\",    -- string",
            "        AUTORESET_PRIORITY      => \"RESET\",       -- string",
            "        USE_MULT                => \"MULTIPLY\",    -- string",
            "        USE_PATTERN_DETECT      => \"NO_PATDET\",   -- string",
            "        USE_SIMD                => \"ONE48\",       -- string",
            "        USE_WIDEXOR             => \"FALSE\",       -- string",
            "        XORSIMD                 => \"XOR24_48_96\"    -- string",
            "        MASK                    => {:X\"3FFFFFFFFFFF\"},-- std_logic_vector[47:0]",
            "        PATTERN                 => {:X\"000000000000\"},-- std_logic_vector[47:0]",
            "        RND                     => {:X\"000000000000\"},-- std_logic_vector[47:0]",
            "        IS_ALUMODE_INVERTED     => \"0000\",        -- std_logic_vector[3:0]",
            "        IS_CARRYIN_INVERTED     => '0',             -- bit",
            "        IS_CLK_INVERTED         => '0',             -- bit",
            "        IS_INMODE_INVERTED      => \"00000\",       -- std_logic_vector[4:0]",
            "        IS_OPMODE_INVERTED      => \"000000000\",   -- std_logic_vector[8:0]",
            "        IS_RSTALLCARRYIN_INVERTED => '0',           -- bit",
            "        IS_RSTALUMODE_INVERTED  => '0',             -- bit",
            "        IS_RSTA_INVERTED        => '0',             -- bit",
            "        IS_RSTB_INVERTED        => '0',             -- bit",
            "        IS_RSTCTRL_INVERTED     => '0',             -- bit",
            "        IS_RSTC_INVERTED        => '0',             -- bit",
            "        IS_RSTD_INVERTED        => '0',             -- bit",
            "        IS_RSTINMODE_INVERTED   => '0',             -- bit",
            "        IS_RSTM_INVERTED        => '0',             -- bit",
            "        IS_RSTP_INVERTED        => '0'              -- bit",
            "    )",
            "    port map (",
            "        B               => ${3:B              }, -- in [17:0]",
            "        BCIN            => ${4:BCIN           }, -- in [17:0]",
            "        CEB1            => ${5:CEB1           }, -- in",
            "        CEB2            => ${6:CEB2           }, -- in",
            "        RSTB            => ${7:RSTB           }, -- in",
            "        BCOUT           => ${8:BCOUT          }, -- out [17:0]",
            "        A               => ${9:A              }, -- in [29:0]",
            "        ACIN            => ${10:ACIN          } -- in [29:0]",
            "        CEA1            => ${11:CEA1          }, -- in",
            "        CEA2            => ${12:CEA2          }, -- in",
            "        RSTA            => ${13:RSTA          }, -- in",
            "        ACOUT           => ${14:ACOUT         }, -- out [29:0]",
            "        D               => ${15:D             }, -- in [26:0]",
            "        CED             => ${16:CED           }, -- in",
            "        RSTD            => ${17:RSTD          }, -- in",
            "        CEAD            => ${18:CEAD          }, -- in",
            "        ALUMODE         => ${19:ALUMODE       }, -- in [3:0)",
            "        CEALUMODE       => ${20:CEALUMODE     }, -- in",
            "        RSTALUMODE      => ${21:RSTALUMODE    }, -- in",
            "        INMODE          => ${22:INMODE        }, -- in [4:0]",
            "        CEINMODE        => ${23:CEINMODE      }, -- in",
            "        RSTINMODE       => ${24:RSTINMODE     }, -- in",
            "        C               => ${25:C             }, -- in [47:0)",
            "        CEC             => ${26:CEC           }, -- in",
            "        RSTC            => ${27:RSTC          }, -- in",
            "        CARRYIN         => ${28:CARRYIN       }, -- in",
            "        CECARRYIN       => ${29:CECARRYIN     }, -- in",
            "        RSTALLCARRYIN   => ${30:RSTALLCARRYIN }, -- in",
            "        CARRYCASCIN     => ${31:CARRYCASCIN   }, -- in",
            "        CARRYINSEL      => ${32:CARRYINSEL    }, -- in [2:0]",
            "        CARRYCASCOUT    => ${33:CARRYCASCOUT  }, -- out",
            "        CARRYOUT        => ${34:CARRYOUT      }, -- out [3:0]",
            "        PCIN            => ${35:PCIN          }, -- in [47:0]",
            "        PCOUT           => ${36:PCOUT         }, -- out [47:0]",
            "        OPMODE          => ${37:OPMODE        }, -- in (8:0]",
            "        CECTRL          => ${38:CECTRL        }, -- in",
            "        RSTCTRL         => ${39:RSTCTRL       }, -- in",
            "        MULTSIGNIN      => ${40:MULTSIGNIN    }, -- in",
            "        CEM             => ${41:CEM           }, -- in",
            "        RSTM            => ${42:RSTM          }, -- in",
            "        MULTSIGNOUT     => ${43:MULTSIGNOUT   }, -- out",
            "        CLK             => ${44:CLK           }, -- in",
            "        P               => ${45:P             }, -- out [47:0]",
            "        CEP             => ${46:CEP           }, -- in",
            "        RSTP            => ${47:RSTP          }, -- in",
            "        PATTERNBDETECT  => ${48:PATTERNBDETECT}, -- out",
            "        PATTERNDETECT   => ${49:PATTERNDETECT }, -- out",
            "        OVERFLOW        => ${50:OVERFLOW      }, -- out",
            "        UNDERFLOW       => ${51:UNDERFLOW     }, -- out",
            "        XOROUT          => ${52:XOROUT        } -- out [7:0]",
            "    );",
            ""
        ],
        "description": "Multi-functional arithmetic block.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "DSP48E5": {
        "prefix": "DSP48E5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Dsp48e5_${2:0} : DSP48E5",
            "    generic map (",
            "        A_INPUT                 => \"DIRECT\",      -- string",
            "        B_INPUT                 => \"DIRECT\",      -- string",
            "        AREG                    => 1,               -- integer",
            "        BREG                    => 1,               -- integer",
            "        CREG                    => 1,               -- integer",
            "        DREG                    => 1,               -- integer",
            "        ADREG                   => 1,               -- integer",
            "        ACASCREG                => 1,               -- integer",
            "        BCASCREG                => 1,               -- integer",
            "        MREG                    => 1,               -- integer",
            "        PREG                    => 1,               -- integer",
            "        INMODEREG               => 1,               -- integer",
            "        CARRYINREG              => 1,               -- integer",
            "        CARRYINSELREG           => 1,               -- integer",
            "        ALUMODEREG              => 1,               -- integer",
            "        OPMODEREG               => 1,               -- integer",
            "        AMULTSEL                => \"A\",           -- string",
            "        BMULTSEL                => \"B\",           -- string",
            "        PREADDINSEL             => \"A\",           -- string",
            "        SEL_MASK                => \"MASK\",        -- string",
            "        SEL_PATTERN             => \"PATTERN\",     -- string",
            "        AUTORESET_PATDET        => \"NO_RESET\",    -- string",
            "        AUTORESET_PRIORITY      => \"RESET\",       -- string",
            "        USE_MULT                => \"MULTIPLY\",    -- string",
            "        USE_PATTERN_DETECT      => \"NO_PATDET\",   -- string",
            "        USE_SIMD                => \"ONE48\",       -- string",
            "        USE_WIDEXOR             => \"FALSE\",       -- string",
            "        XORSIMD                 => \"XOR24_48_96\"    -- string",
            "        MASK                    => {:X\"3FFFFFFFFFFF\"},-- std_logic_vector[47:0]",
            "        PATTERN                 => {:X\"000000000000\"},-- std_logic_vector[47:0]",
            "        RND                     => {:X\"000000000000\"},-- std_logic_vector[47:0]",
            "        IS_ALUMODE_INVERTED     => \"0000\",        -- std_logic_vector[3:0]",
            "        IS_CARRYIN_INVERTED     => '0',             -- bit",
            "        IS_CLK_INVERTED         => '0',             -- bit",
            "        IS_INMODE_INVERTED      => \"00000\",       -- std_logic_vector[4:0]",
            "        IS_OPMODE_INVERTED      => \"000000000\",   -- std_logic_vector[8:0]",
            "        IS_RSTALLCARRYIN_INVERTED => '0',           -- bit",
            "        IS_RSTALUMODE_INVERTED  => '0',             -- bit",
            "        IS_RSTA_INVERTED        => '0',             -- bit",
            "        IS_RSTB_INVERTED        => '0',             -- bit",
            "        IS_RSTCTRL_INVERTED     => '0',             -- bit",
            "        IS_RSTC_INVERTED        => '0',             -- bit",
            "        IS_RSTD_INVERTED        => '0',             -- bit",
            "        IS_RSTINMODE_INVERTED   => '0',             -- bit",
            "        IS_RSTM_INVERTED        => '0',             -- bit",
            "        IS_RSTP_INVERTED        => '0'              -- bit",
            "    )",
            "    port map (",
            "        B               => ${3:B             }, -- in [17:0]",
            "        BCIN            => ${4:BCIN          }, -- in [17:0]",
            "        CEB1            => ${5:CEB1          }, -- in",
            "        CEB2            => ${6:CEB2          }, -- in",
            "        RSTB            => ${7:RSTB          }, -- in",
            "        BCOUT           => ${8:BCOUT         }, -- out [17:0]",
            "        A               => ${9:A             }, -- in [29:0]",
            "        ACIN            => ${10:ACIN          }, -- in [29:0]",
            "        CEA1            => ${11:CEA1          }, -- in",
            "        CEA2            => ${12:CEA2          }, -- in",
            "        RSTA            => ${13:RSTA          }, -- in",
            "        ACOUT           => ${14:ACOUT         }, -- out [29:0]",
            "        D               => ${15:D             }, -- in [26:0]",
            "        CED             => ${16:CED           }, -- in",
            "        RSTD            => ${17:RSTD          }, -- in",
            "        CEAD            => ${18:CEAD          }, -- in",
            "        ALUMODE         => ${19:ALUMODE       }, -- in [3:0)",
            "        CEALUMODE       => ${20:CEALUMODE     }, -- in",
            "        RSTALUMODE      => ${21:RSTALUMODE    }, -- in",
            "        INMODE          => ${22:INMODE        }, -- in [4:0]",
            "        CEINMODE        => ${23:CEINMODE      }, -- in",
            "        RSTINMODE       => ${24:RSTINMODE     }, -- in",
            "        C               => ${25:C             }, -- in [47:0)",
            "        CEC             => ${26:CEC           }, -- in",
            "        RSTC            => ${27:RSTC          }, -- in",
            "        CARRYIN         => ${28:CARRYIN       }, -- in",
            "        CECARRYIN       => ${29:CECARRYIN     }, -- in",
            "        RSTALLCARRYIN   => ${30:RSTALLCARRYIN }, -- in",
            "        CARRYCASCIN     => ${31:CARRYCASCIN   }, -- in",
            "        CARRYINSEL      => ${32:CARRYINSEL    }, -- in [2:0]",
            "        CARRYCASCOUT    => ${33:CARRYCASCOUT  }, -- out",
            "        CARRYOUT        => ${34:CARRYOUT      }, -- out [3:0]",
            "        PCIN            => ${35:PCIN          }, -- in [47:0]",
            "        PCOUT           => ${36:PCOUT         }, -- out [47:0]",
            "        OPMODE          => ${37:OPMODE        }, -- in (8:0]",
            "        CECTRL          => ${38:CECTRL        }, -- in",
            "        RSTCTRL         => ${39:RSTCTRL       }, -- in",
            "        MULTSIGNIN      => ${40:MULTSIGNIN    }, -- in",
            "        CEM             => ${41:CEM           }, -- in",
            "        RSTM            => ${42:RSTM          }, -- in",
            "        MULTSIGNOUT     => ${43:MULTSIGNOUT   }, -- out",
            "        CLK             => ${44:CLK           }, -- in",
            "        P               => ${45:P             }, -- out [47:0]",
            "        CEP             => ${46:CEP           }, -- in",
            "        RSTP            => ${47:RSTP          }, -- in",
            "        PATTERNBDETECT  => ${48:PATTERNBDETECT}, -- out",
            "        PATTERNDETECT   => ${49:PATTERNDETECT }, -- out",
            "        OVERFLOW        => ${50:OVERFLOW      }, -- out",
            "        UNDERFLOW       => ${51:UNDERFLOW     }, -- out",
            "        XOROUT          => ${52:XOROUT        } -- out [7:0]",
            "    );",
            ""
        ],
        "description": "Multi-functional arithmetic block.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "EFUSE_USR": {
        "prefix": "EFUSE_USR",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Efuse_usr_${2:0} : EFUSE_USR",
            "    generic map (",
            "        SIM_EFUSE_VALUE => ${3:X\"00000000\"} -- bit_vector",
            "    )",
            "    port map (",
            "        EFUSEUSR => ${4:EFUSEUSR} -- out [31:0]",
            "    );",
            ""
        ],
        "description": "32-bit Non-volatile design ID.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "FDCE": {
        "prefix": "FDCE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Fdce_${2:0} : FDCE",
            "    generic map (INIT => ${3:'0'}, IS_CLR_INVERTED => '0',",
            "            IS_C_INVERTED => '0', IS_D_INVERTED => '0')",
            "    port map (D => ${4:D  }, CE => ${5:CE }, C => ${6:C  }, CLR => ${7:CLR}, Q => ${8:Q  });"
        ],
        "description": "FlipFlop with enable and asynchronous clear.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "FDPE": {
        "prefix": "FDPE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_ZFdpe_${2:0} : FDPE",
            "    generic map (INIT => ${3:'0'}, IS_C_INVERTED => '0',",
            "            IS_D_INVERTED => '0', IS_PRE_INVERTED => '0')",
            "    port map (D => ${4:D  }, CE => ${5{CE }, C => ${6:C  }, PRE => ${7:PRE}, Q => ${8:Q  });"
        ],
        "description": "FlipFlop with enable and asynchronous preset.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "FDRE": {
        "prefix": "FDRE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Fdre_${2:0} : FDRE",
            "    generic map (INIT => ${3:'0'}, IS_C_INVERTED => '0',",
            "            IS_D_INVERTED => '0', IS_R_INVERTED => '0')",
            "    port map (D => ${4:D }, CE => ${5:CE}, C => ${6:C }, R => ${7:R }, Q => ${8:Q });"
        ],
        "description": "FlipFlop with enable and synchronous reset.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "FDSE": {
        "prefix": "FDSE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Fdse_${2:0} : FDSE",
            "    generic map (INIT => ${3:'0'}, IS_C_INVERTED => '0',",
            "            IS_D_INVERTED => '0', IS_S_INVERTED => '0')",
            "    port map (D => ${4:D }, CE => ${5:CE}, C => ${6:C }, S => ${7:S }, Q => ${8:Q });"
        ],
        "description": "FlipFlop with enable and synchronous set.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "FIFO36E2": {
        "prefix": "FIFO36E2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Fifo36e2_${2:0} : FIFO36E2",
            "    generic map (",
            "        INIT                    => {:X\"000000000000000000\"},-- [71:0]",
            "        SRVAL                   => {:X\"000000000000000000\"},-- [71:0]",
            "        CLOCK_DOMAINS           => \"INDEPENDENT\",",
            "        READ_WIDTH              => 4,",
            "        WRITE_WIDTH             => 4,",
            "        REGISTER_MODE           => \"UNREGISTERED\",",
            "        RDCOUNT_TYPE            => \"RAW_PNTR\",",
            "        WRCOUNT_TYPE            => \"RAW_PNTR\",",
            "        RSTREG_PRIORITY         => \"RSTREG\",",
            "        SLEEP_ASYNC             => \"FALSE\",",
            "        CASCADE_ORDER           => \"NONE\",",
            "        PROG_EMPTY_THRESH       => 256,",
            "        PROG_FULL_THRESH        => 256,",
            "        EN_ECC_PIPE             => \"FALSE\",",
            "        EN_ECC_READ             => \"FALSE\",",
            "        EN_ECC_WRITE            => \"FALSE\",",
            "        FIRST_WORD_FALL_THROUGH => \"FALSE\",",
            "        IS_RDCLK_INVERTED       => '0',",
            "        IS_RDEN_INVERTED        => '0',",
            "        IS_RSTREG_INVERTED      => '0',",
            "        IS_RST_INVERTED         => '0',",
            "        IS_WRCLK_INVERTED       => '0',",
            "        IS_WREN_INVERTED        => '0'",
            "    )",
            "    port map (",
            "        DIN             => ${3:DIN          }, -- in [63:0]",
            "        DINP            => ${4:DINP         }, -- in [7:0]",
            "        CASDIN          => ${5:CASDIN       }, -- in [63:0]",
            "        CASDINP         => ${6:CASDINP      }, -- in [7:0]",
            "        WRCLK           => ${7:WRCLK        }, -- in",
            "        WREN            => ${8:WREN         }, -- in",
            "        WRCOUNT         => ${9:WRCOUNT      }, -- out [13:0]",
            "        WRERR           => ${10:WRERR        }, -- out",
            "        WRRSTBUSY       => ${11:WRRSTBUSY    }, -- out",
            "        RDCLK           => ${12:RDCLK        }, -- in",
            "        RDEN            => ${13:RDEN         }, -- in",
            "        RDCOUNT         => ${14:RDCOUNT      }, -- out [13:0]",
            "        RDERR           => ${15:RDERR        }, -- out",
            "        RDRSTBUSY       => ${16:RDRSTBUSY    }, -- out",
            "        REGCE           => ${17:REGCE        }, -- in",
            "        RST             => ${18:RST          }, -- in",
            "        RSTREG          => ${19:RSTREG       }, -- in",
            "        SLEEP           => ${20:SLEEP        }, -- in",
            "        CASDOMUX        => ${21:CASDOMUX     }, -- in",
            "        CASDOMUXEN      => ${22:CASDOMUXEN   }, -- in",
            "        CASNXTRDEN      => ${23:CASNXTRDEN   }, -- in",
            "        CASOREGIMUX     => ${24:CASOREGIMUX  }, -- in",
            "        CASOREGIMUXEN   => ${25:CASOREGIMUXEN}, -- in",
            "        CASPRVEMPTY     => ${26:CASPRVEMPTY  }, -- in",
            "        INJECTDBITERR   => ${27:INJECTDBITERR}, -- in",
            "        INJECTSBITERR   => ${28:INJECTSBITERR}, -- in",
            "        CASNXTEMPTY     => ${29:CASNXTEMPTY  }, -- out",
            "        CASPRVRDEN      => ${30:CASPRVRDEN   }, -- out",
            "        CASDOUT         => ${31:CASDOUT      }, -- out [63:0]",
            "        CASDOUTP        => ${32:CASDOUTP     }, -- out [7:0]",
            "        DOUT            => ${33:DOUT         }, -- out [63:0]",
            "        DOUTP           => ${34:DOUTP        }, -- out [7:0]",
            "        ECCPARITY       => ${35:ECCPARITY    }, -- out [7:0]",
            "        EMPTY           => ${36:EMPTY        }, -- out",
            "        FULL            => ${37:FULL         }, -- out",
            "        PROGEMPTY       => ${38:PROGEMPTY    }, -- out",
            "        PROGFULL        => ${39:PROGFULL     }, -- out",
            "        DBITERR         => ${40:DBITERR      }, -- out",
            "        SBITERR         => ${41:SBITERR      } -- out",
            "    );",
            ""
        ],
        "description": "36kb first -in-first-out Block Ram memory.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "GLBL_VHD": {
        "prefix": "GLBL_VHD",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Glbl_vhd_${2:0} : GLBL_VHD",
            "    generic map (",
            "        ROC_WIDTH   => 100000, -- integer",
            "        TOC_WIDTH   => 0       -- integer",
            "    );",
            ""
        ],
        "description": "Global set and reset block.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "HARD_SYNC": {
        "prefix": "HARD_SYNC",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Hard_sync_${2:0} : HARD_SYNC",
            "    generic map (",
            "        INIT            => '0',",
            "        IS_CLK_INVERTED => '0',",
            "        LATENCY         => 2,",
            "    )",
            "    port map (",
            "        CLK     => ${3:CLK }, -- in",
            "        DIN     => ${4:DIN }, -- in",
            "        DOUT    => ${5:DOUT} -- out",
            "    );",
            ""
        ],
        "description": "Metastability hardened registers",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUF": {
        "prefix": "IBUF",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibuf_${2:0} : IBUF",
            "    generic map (CAPACITANCE => \"DONT_CARE\",IBUF_DELAY_VALUE => '0',",
            "                IFD_DELAY_VALUE => \"AUTO\",IBUF_LOW_PWR => TRUE,",
            "                IOSTANDARD => ${3:\"DEFAULT\"})",
            "    port map (I => ${4:I}, O => ${5:O});"
        ],
        "description": "Input buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFCTRL": {
        "prefix": "IBUFCTRL",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibufctrl_${2:0} : IBUFCTRL",
            "    generic map (",
            "        ISTANDARD       => \"UNUSED\",  -- string",
            "        USE_IBUFDISABLE => \"FALSE\"      -- string",
            "    )",
            "    port map (",
            "        T               => ${3:T            }, -- in",
            "        I               => ${4:I            }, -- in",
            "        IBUFDISABLE     => ${5:IBUFDISABLE  }, -- in",
            "        INTERMDISABLE   => ${6:INTERMDISABLE}, -- in",
            "        O               => ${7:O            } -- out",
            "    );",
            ""
        ],
        "description": "Controllable input buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS": {
        "prefix": "IBUFDS",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibufds_${2:0} : IBUFDS",
            "    generic map (DIFF_TERM => FALSE, IOSTANDARD => \"DEFAULT\",CAPACITANCE => \"DONT_CARE\",",
            "                DQS_BIAS => \"FALSE\",IBUF_DELAY_VALUE => '0', IBUF_LOW_PWR => TRUE,",
            "                IFD_DELAY_VALUE => \"AUTO\")",
            "    port map (I => ${3:I }, IB => ${4:IB}, O => ${5:O });"
        ],
        "description": "Differential input buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDSE3": {
        "prefix": "IBUFDSE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibufdse3_${2:0} : IBUFDSE3",
            "    generic (",
            "        DIFF_TERM       => \"FALSE\",   -- string",
            "        DQS_BIAS        => \"FALSE\",   -- string",
            "        IBUF_LOW_PWR    => \"TRUE\",    -- string",
            "        IOSTANDARD      => \"DEFAULT\", -- string",
            "        SIM_INPUT_BUFFER_OFFSET =: 0,   -- integer",
            "        USE_IBUFDISABLE => \"FALSE\"      -- string",
            "    )",
            "    port map (",
            "        I           => ${3:I          }, -- in",
            "        IB          => ${4:IB         }, -- in",
            "        IBUFDISABLE => ${5:IBUFDISABLE}, -- in",
            "        OSC         => ${6:OSC        }, -- in [3:0]",
            "        OSC_EN      => ${7:OSC_EN     }, -- in [1:0]",
            "        O           => ${8:O          }, -- out",
            "    );",
            ""
        ],
        "description": "Differential controllable input buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS_DIFF_OUT": {
        "prefix": "IBUFDS_DIFF_OUT",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibuf_diff_out_${2:0} : IBUFDS_DIFF_OUT",
            "    generic map (",
            "        DIFF_TERM       => FALSE,   -- boolean",
            "        IBUF_LOW_PWR    => TRUE,    -- boolean",
            "        DQS_BIAS        => \"FALSE\",-- string",
            "        IOSTANDARD      => \"DEFAULT\" -- string",
            "    )",
            "    port map (",
            "        I   => ${3:I }, -- in",
            "        IB  => ${4:IB}, -- in",
            "        O   => ${5:O }, -- out",
            "        OB  => ${6:OB} -- out",
            "    );",
            ""
        ],
        "description": "Differential input buffer with differental output.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS_DIFF_OUT_IBUFDISABLE": {
        "prefix": "IBUFDS_DIFF_OUT_IBUFDISABLE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibuf_diff_ibufdisable_${2:0} : IBUFDS_DIFF_OUT_IBUFDISABLE",
            "generic map (",
            "    DIFF_TERM       => \"FALSE\",   -- string",
            "    IBUF_LOW_PWR    => \"TRUE\",    -- string",
            "    IOSTANDARD      => \"DEFAULT\", -- string",
            "    USE_IBUFDISABLE => \"TRUE\",    -- string",
            "    DQS_BIAS        => \"FALSE\",   -- string",
            "    SIM_DEVICE      => \"7SERIES\"    -- string",
            ")",
            "port map (",
            "    I           => ${3:I          }, -- in",
            "    IB          => ${4:IB         }, -- in",
            "    IBUFDISABLE => ${5:IBUFDISABLE}, -- in",
            "    O           => ${6:O          }, -- out",
            "    OB          => ${7:OB         } -- out",
            ");"
        ],
        "description": "Differential controllable input buffer with differental output.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS_DIFF_OUT_INTERMDISABLE": {
        "prefix": "IBUFDS_DIFF_OUT_INTERMDISABLE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibufds_diff_out_ntrmdsbl_${2:0} : IBUFDS_DIFF_OUT_INTERMDISABLE",
            "    generic map (",
            "        DIFF_TERM       => \"FALSE\",   -- string",
            "        IBUF_LOW_PWR    => \"TRUE\",    -- string",
            "        IOSTANDARD      => \"DEFAULT\", -- string",
            "        DQS_BIAS        => \"FALSE\",   -- string",
            "        USE_IBUFDISABLE => \"TRUE\",    -- string",
            "        SIM_DEVICE      => \"7SERIES\"    -- string",
            "    )",
            "    port map (",
            "        I               => ${3:I            }, -- in",
            "        IB              => ${4:IB           }, -- in",
            "        IBUFDISABLE     => ${5:IBUFDISABLE  }, -- in",
            "        INTERMDISABLE   => ${6:INTERMDISABLE}, -- in",
            "        O               => ${7:O            }, -- out",
            "        OB              => ${8:OB           } -- out",
            "    );",
            ""
        ],
        "description": "Differential controllable input buffer with differental output.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS_GTE3": {
        "prefix": "IBUFDS_GTE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibufds_gte3_${2:0} : IBUFDS_GTE3",
            "    generic map (",
            "        REFCLK_EN_TX_PATH   => '0',  -- bit",
            "        REFCLK_HROW_CK_SEL  => \"00\",-- [1:0]",
            "        REFCLK_ICNTL_RX     => \"00\"  -- [1:0]",
            "    )",
            "    port map (",
            "        I       => ${3:I    }, -- in",
            "        IB      => ${4:IB   }, -- in",
            "        CEB     => ${5:CEB  }, -- in",
            "        O       => ${6:O    }, -- out",
            "        ODIV2   => ${7:ODIV2} -- out",
            "    );",
            ""
        ],
        "description": "Gigabit transceiver buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS_GTE4": {
        "prefix": "IBUFDS_GTE4",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibuf_gte4_${2:0} : IBUFDS_GTE4",
            "    generic map (",
            "        REFCLK_EN_TX_PATH   => '0',  -- bit",
            "        REFCLK_HROW_CK_SEL  => \"00\",-- [1:0]",
            "        REFCLK_ICNTL_RX     => \"00\"  -- [1:0]",
            "    )",
            "    port map (",
            "        I       => ${3:I    }, -- in",
            "        IB      => ${4:IB   }, -- in",
            "        CEB     => ${5:CEB  }, -- in",
            "        O       => ${6:O    }, -- out",
            "        ODIV2   => ${7:ODIV2} -- out",
            "    );",
            ""
        ],
        "description": "Gigabit transceiver buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS_GTE5": {
        "prefix": "IBUFDS_GTE5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibufds_gte5_${2:0} : IBUFDS_GTE5",
            "    generic map (",
            "        REFCLK_CTL_DRV_SWING    => \"000\", -- std_logic_vector[2:0]",
            "        REFCLK_EN_DRV           => '0',     -- bit",
            "        REFCLK_EN_TX_PATH       => '0',     -- bit",
            "        REFCLK_HROW_CK_SEL      => 0,       -- integer",
            "        REFCLK_ICNTL_RX         => 0        -- integer",
            "    )",
            "    port map (",
            "        I       => ${3:I    }, -- in",
            "        IB      => ${4:IB   }, -- in",
            "        CEB     => ${5:CEB  }, -- in",
            "        O       => ${6:O    }, -- out",
            "        ODIV2   => ${7:ODIV2} -- out",
            "    );",
            ""
        ],
        "description": "Gigabit transceiver buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS_IBUFDISABLE": {
        "prefix": "IBUFDS_IBUFDISABLE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibufds_ibufdsbl_${2:0} : IBUFDS_IBUFDISABLE",
            "    generic map (",
            "        DIFF_TERM       => \"FALSE\",   -- string",
            "        DQS_BIAS        => \"FALSE\",   -- string",
            "        IBUF_LOW_PWR    => \"TRUE\",    -- string",
            "        IOSTANDARD      => \"DEFAULT\", -- string",
            "        USE_IBUFDISABLE => \"TRUE\",    -- string",
            "        SIM_DEVICE      => \"7SERIES\"    -- string",
            "    )",
            "    port map (",
            "        I           => ${3:I          }, -- in",
            "        IB          => ${4:IB         }, -- in",
            "        IBUFDISABLE => ${5:IBUFDISABLE}, -- in",
            "        O           => ${6:O          } -- out",
            "    );",
            ""
        ],
        "description": "Controllable differential input buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IBUFDS_INTERMDISABLE": {
        "prefix": "IBUFDS_INTERMDISABLE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ibufds_ntrmdsbl_${2:0} : IBUFDS_INTERMDISABLE",
            "    generic map (",
            "        DIFF_TERM       => \"FALSE\",   -- string",
            "        DQS_BIAS        => \"FALSE\",   -- string",
            "        IBUF_LOW_PWR    => \"TRUE\",    -- string",
            "        IOSTANDARD      => \"DEFAULT\", -- string",
            "        USE_IBUFDISABLE => \"TRUE\",    -- string",
            "        SIM_DEVICE      => \"7SERIES\"    -- string",
            "    )",
            "    port map (",
            "        I               => ${3:I            }, -- in",
            "        IB              => ${4:IB           }, -- in",
            "        IBUFDISABLE     => ${5:IBUFDISABLE  }, -- in",
            "        INTERMDISABLE   => ${6:INTERMDISABLE}, -- in",
            "        O               => ${7:O            } -- out",
            "    );",
            ""
        ],
        "description": "Controllable differential input buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "ICAPE2": {
        "prefix": "ICAPE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Icape2_${2:0} : ICAPE2",
            "generic map (",
            "    DEVICE_ID           => ${3:X\"03651093\" }, -- bit_vector",
            "    ICAP_WIDTH          => \"X32\",     -- string",
            "    SIM_CFG_FILE_NAME   => \"NONE\"       -- string",
            ")",
            "port map (",
            "    I       => ${4:I    }, -- in [31:0]",
            "    RDWRB   => ${5:RDWRB}, -- in",
            "    CSIB    => ${6:CSIB }, -- in",
            "    CLK     => ${7:CLK  }, -- in",
            "    O       => ${8:O    } -- out [31:0]",
            ");"
        ],
        "description": "Internal Configuration Access Port",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "ICAPE3": {
        "prefix": "ICAPE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Icape3_${2:0} : ICAPE3",
            "    generic map (",
            "        DEVICE_ID           => ${3:X\"03628093\" }, -- bit_vector",
            "        ICAP_AUTO_SWITCH    => \"DISABLE\", -- string",
            "        SIM_CFG_FILE_NAME   => \"NONE\"       -- string",
            "    )",
            "    port map (",
            "        I       => ${4:I      }, -- in [31:0]",
            "        CLK     => ${5:CLK    }, -- in",
            "        CSIB    => ${6:CSIB   }, -- in",
            "        RDWRB   => ${7:RDWRB  }, -- in",
            "        PRDONE  => ${8:PRDONE }, -- out",
            "        PRERROR => ${9:PRERROR}, -- out",
            "        AVAIL   => ${10:AVAIL  }, -- out",
            "        O       => ${11:O      } -- out [31:0]",
            "    );",
            ""
        ],
        "description": "Internal Configuration Access Port",
        "scope": "source.vhdl, vhdl, vhd"
    }

    "IDDR": {
        "prefix": "IDDR",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iddr_${2:0} : IDDR",
            "generic map (",
            "    DDR_CLK_EDGE    => \"OPPOSITE_EDGE\",-- string",
            "    INIT_Q1         => '0',             -- bit",
            "    INIT_Q2         => '0',             -- bit",
            "    SRTYPE          => \"SYNC\",       -- string",
            "    IS_C_INVERTED   => '0',             -- std_ulogic",
            "    IS_D_INVERTED   => '0'              -- std_ulogic",
            ")",
            "port map (",
            "    D   => ${3:D }, -- in",
            "    CE  => ${4:CE}, -- in",
            "    C   => ${5:C }, -- in",
            "    S   => ${6:S }, -- in",
            "    R   => ${7:R }, -- in",
            "    Q1  => ${8:Q1}, -- out",
            "    Q2  => ${9:Q2} -- out",
            ");"
        ],
        "description": "Dedicated double data rate input register.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IDDR_2CLK": {
        "prefix": "IDDR_2CLK",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iddr_2clk_${2:0} : IDDR_2CLK",
            "    generic map (",
            "        DDR_CLK_EDGE    => \"OPPOSITE_EDGE\",-- string",
            "        INIT_Q1         => '0',             -- bit",
            "        INIT_Q2         => '0',             -- bit",
            "        SRTYPE          => \"SYNC\",         -- string",
            "        IS_CB_INVERTED  => '0',             -- std_ulogic",
            "        IS_C_INVERTED   => '0',             -- std_ulogic",
            "        IS_D_INVERTED   => '0'              -- std_ulogic",
            "    )",
            "    port map (",
            "        D   => ${3:D }, -- in",
            "        CE  => ${4:CE}, -- in",
            "        C   => ${5:C }, -- in",
            "        CB  => ${6:CB}, -- in",
            "        S   => ${7:S }, -- in",
            "        R   => ${8:R }, -- in",
            "        Q1  => ${9:Q1}, -- out",
            "        Q2  => ${10:Q2} -- out",
            "    );",
            ""
        ],
        "description": "Dual clock dedicated double data rate input register.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IDDRE1": {
        "prefix": "IDDRE1",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iddre1_${2:0} : IDDRE1",
            "    generic map (",
            "        DDR_CLK_EDGE    => \"OPPOSITE_EDGE\",-- string",
            "        IS_CB_INVERTED  => '0'  -- bit",
            "        IS_C_INVERTED   => '0'  -- bit",
            "    )",
            "    port map (",
            "        D   => ${3:D }, -- in",
            "        C   => ${4:C }, -- in",
            "        CB  => ${5:CB}, -- in",
            "        R   => ${6:R }, -- in",
            "        Q1  => ${7:Q1}, -- out",
            "        Q2  => ${8:Q2} -- out",
            "    );",
            ""
        ],
        "description": "Dedicated double data rate input register.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IDELAYCTRL": {
        "prefix": "IDELAYCTRL",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Idlyctrl_${2:0} : IDELAYCTRL",
            "    generic map (SIM_DEVICE => \"7SERIES")",
            "    port map(RDY => ${3:RDY   }, REFCLK => ${4:REFCLK}, RST => ${5:RST   });"
        ],
        "description": "Tap delay value control.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IDELAYE2": {
        "prefix": "IDELAYE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Idlye2_${2:0} : IDELAYE2",
            "    generic map (",
            "        SIGNAL_PATTERN         => \"DATA\",     -- string",
            "        REFCLK_FREQUENCY       => 200.0,       -- real",
            "        HIGH_PERFORMANCE_MODE  => \"FALSE\",    -- string",
            "        DELAY_SRC              => \"IDATAIN\",  -- string",
            "        CINVCTRL_SEL           => \"FALSE\",    -- string",
            "        IDELAY_TYPE            => \"FIXED\",    -- string",
            "        IDELAY_VALUE           => 0,           -- integer",
            "        PIPE_SEL               => \"FALSE\",    -- string",
            "        IS_C_INVERTED          => '0',         -- bit",
            "        IS_DATAIN_INVERTED     => '0',         -- bit",
            "        IS_IDATAIN_INVERTED    => '0'          -- bit",
            "    )",
            "    port map (",
            "        DATAIN          => ${3:DATAIN     }, -- in",
            "        IDATAIN         => ${4:IDATAIN    }, -- in",
            "        CE              => ${5:CE         }, -- in",
            "        INC             => ${6:INC        }, -- in",
            "        C               => ${7:C          }, -- in",
            "        CINVCTRL        => ${8:CINVCTRL   }, -- in",
            "        LD              => ${9:LD         }, -- in",
            "        LDPIPEEN        => ${10:LDPIPEEN   }, -- in",
            "        REGRST          => ${11:REGRST     }, -- in",
            "        CNTVALUEIN      => ${12:CNTVALUEIN }, -- in [4:0]",
            "        CNTVALUEOUT     => ${13:CNTVALUEOUT}, -- out [4:0]",
            "        DATAOUT         => ${14:DATAOUT    } -- out",
            "    );",
            ""
        ],
        "description": "Dedicated input fixed/variable delay line.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IDELAYE2_FINEDELAY": {
        "prefix": "IDELAYE2_FINEDELAY",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Idlye2_finedly_${2:0} : IDELAYE2_FINEDELAY",
            "    generic map (",
            "        SIGNAL_PATTERN          => \"DATA\",     -- string",
            "        REFCLK_FREQUENCY        => 200.0,       -- real",
            "        HIGH_PERFORMANCE_MODE   => \"FALSE\",    -- string",
            "        DELAY_SRC               => \"IDATAIN\",  -- string",
            "        CINVCTRL_SEL            => \"FALSE\",    -- string",
            "        FINEDELAY               => \"BYPASS\",   -- string",
            "        IDELAY_TYPE             => \"FIXED\",    -- string",
            "        IDELAY_VALUE            => 0,           -- integer",
            "        DELAY_SRC               => \"IDATAIN\",  -- string",
            "        IS_C_INVERTED           => '0',         -- bit",
            "        IS_DATAIN_INVERTED      => '0',         -- bit",
            "        IS_IDATAIN_INVERTED     => '0',         -- bit",
            "        PIPE_SEL                => \"FALSE"      -- string",
            "    )",
            "    port map (",
            "        DATAIN      => ${3:DATAIN     }, -- in",
            "        IDATAIN     => ${4:IDATAIN    }, -- in",
            "        IFDLY       => ${5:IFDLY      }, -- in [2:0]",
            "        CE          => ${6:CE         }, -- in",
            "        INC         => ${7:INC        }, -- in",
            "        C           => ${8:C          }, -- in",
            "        CINVCTRL    => ${9:CINVCTRL   }, -- in",
            "        LD          => ${10:LD         }, -- in",
            "        LDPIPEEN    => ${11:LDPIPEEN   }, -- in",
            "        REGRST      => ${12:REGRST     }, -- in",
            "        CNTVALUEIN  => ${13:CNTVALUEIN }, -- in [4:0]",
            "        CNTVALUEOUT => ${14:CNTVALUEOUT}, -- out [4:0]",
            "        DATAOUT     => ${15:DATAOUT    } -- out",
            "    );",
            ""
        ],
        "description": "Dedicated input fixed/variable delay line.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IDELAYE3": {
        "prefix": "IDELAYE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Idlye3_${2:0} : IDELAYE3",
            "    generic map (",
            "        CASCADE             => \"NONE\",         -- string",
            "        DELAY_FORMAT        => \"TIME\",         -- string",
            "        DELAY_SRC           => \"IDATAIN\",      -- string",
            "        DELAY_TYPE          => \"FIXED\",        -- string",
            "        DELAY_VALUE         => 0,               -- integer",
            "        LOOPBACK            => \"FALSE\",        -- string",
            "        IS_CLK_INVERTED     => '0',             -- std_ulogic",
            "        IS_RST_INVERTED     => '0',             -- std_ulogic",
            "        REFCLK_FREQUENCY    => 300.0,           -- real",
            "        UPDATE_MODE         => \"ASYNC\",        -- string",
            "        SIM_DEVICE          => \"ULTRASCALE\",   -- string",
            "        SIM_VERSION         => 2.0              -- real",
            "    )",
            "    port map (",
            "        IDATAIN        => ${3:IDATAIN    }, -- in",
            "        DATAIN         => ${4:DATAIN     }, -- in",
            "        CASC_IN        => ${5:CASC_IN    }, -- in",
            "        CASC_RETURN    => ${6:CASC_RETURN}, -- in",
            "        CLK            => ${7:CLK        }, -- in",
            "        CE             => ${8:CE         }, -- in",
            "        RST            => ${9:RST        }, -- in",
            "        INC            => ${10:INC        }, -- in",
            "        LOAD           => ${11:LOAD       }, -- in",
            "        EN_VTC         => ${12:EN_VTC     }, -- in",
            "        CNTVALUEIN     => ${13:CNTVALUEIN }, -- in [8:0]",
            "        CNTVALUEOUT    => ${14:CNTVALUEOUT}, -- out [8:0]",
            "        CASC_OUT       => ${15:CASC_OUT   }, -- out",
            "        DATAOUT        => ${16:DATAOUT    } -- out",
            "    );",
            ""
        ],
        "description": "Dedicated input fixed/variable delay line.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IDELAYE5": {
        "prefix": "IDELAYE5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Idlye5_${2:0} : IDELAYE5",
            "    generic map (",
            "        CASCADE         => \"FALSE\",-- string",
            "        IS_CLK_INVERTED => '0',     -- bit",
            "        IS_RST_INVERTED => '0'      -- bit",
            "    )",
            "    port map (",
            "        IDATAIN     => ${3:IDATAIN    }, -- in",
            "        CLK         => ${4:CLK        }, -- in",
            "        CE          => ${5:CE         }, -- in",
            "        RST         => ${6:RST        }, -- in",
            "        INC         => ${7:INC        }, -- in",
            "        LOAD        => ${8:LOAD       }, -- in",
            "        CASC_RETURN => ${9:CASC_RETURN}, -- in",
            "        CNTVALUEIN  => ${10:CNTVALUEIN }, -- in [4:0]",
            "        CNTVALUEOUT => ${11:CNTVALUEOUT}, -- out [4:0]",
            "        CASC_OUT    => ${12:CASC_OUT   }, -- out",
            "        DATAOUT     => ${13:DATAOUT    } -- out",
            "    );",
            ""
        ],
        "description": "Dedicated input fixed/variable delay line.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "INBUF": {
        "prefix": "INBUF",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Inbuf_${2:0} : INBUF",
            "    generic map (",
            "        IBUF_LOW_PWR    => \"TRUE\",     -- string",
            "        ISTANDARD       => \"UNUSED\",   -- string",
            "        SIM_INPUT_BUFFER_OFFSET => 0    -- integer",
            "    )",
            "    port map (",
            "        PAD     => ${3:PAD   }, -- in",
            "        VREF    => ${4:VREF  }, -- in",
            "        OSC     => ${5:OSC   }, -- in [3:0]",
            "        OSC_EN  => ${6:OSC_EN}, -- in",
            "        O       => ${7:O     } -- out",
            "    );",
            ""
        ],
        "description": "Input buffer with clock control.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IN_FIFO": {
        "prefix": "IN_FIFO",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_In_fifo_${2:0} : IN_FIFO",
            "    generic map (",
            "        SYNCHRONOUS_MODE    => \"FALSE\",            -- string",
            "        ARRAY_MODE          => \"ARRAY_MODE_4_X_8\", -- string",
            "        ALMOST_EMPTY_VALUE  => 1,                   -- integer",
            "        ALMOST_FULL_VALUE   => 1                    -- integer",
            "    )",
            "    port map (",
            "        D0          => ${3:D0         }, -- in [3:0]",
            "        D1          => ${4:D1         }, -- in [3:0]",
            "        D2          => ${5:D2         }, -- in [3:0]",
            "        D3          => ${6:D3         }, -- in [3:0]",
            "        D4          => ${7:D4         }, -- in [3:0]",
            "        D5          => ${8:D5         }, -- in [7:0]",
            "        D6          => ${9:D6         }, -- in [7:0]",
            "        D7          => ${10:D7         }, -- in [3:0]",
            "        D8          => ${11:D8         }, -- in [3:0]",
            "        D9          => ${12:D9         }, -- in [3:0]",
            "        WRCLK       => ${13:WRCLK      }, -- in",
            "        WREN        => ${14:WREN       }, -- in",
            "        RESET       => ${15:RESET      }, -- in",
            "        RDCLK       => ${16:RDCLK      }, -- in",
            "        RDEN        => ${17:RDEN       }, -- in",
            "        Q0          => ${18:Q0         }, -- out [7:0]",
            "        Q1          => ${19:Q1         }, -- out [7:0]",
            "        Q2          => ${20:Q2         }, -- out [7:0]",
            "        Q3          => ${21:Q3         }, -- out [7:0]",
            "        Q4          => ${22:Q4         }, -- out [7:0]",
            "        Q5          => ${23:Q5         }, -- out [7:0]",
            "        Q6          => ${24:Q6         }, -- out [7:0]",
            "        Q7          => ${25:Q7         }, -- out [7:0]",
            "        Q8          => ${26:Q8         }, -- out [7:0]",
            "        Q9          => ${27:Q9         }, -- out [7:0]",
            "        ALMOSTEMPTY => ${28:ALMOSTEMPTY}, -- out",
            "        ALMOSTFULL  => ${29:ALMOSTFULL }, -- out",
            "        EMPTY       => ${30:EMPTY      }, -- out",
            "        FULl        => ${31:FULl       } -- out",
            "    );",
            ""
        ],
        "description": "7-Series dedicated IO input FIFO.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IOBUF": {
        "prefix": "IOBUF",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iobuf_${2:0} : IOBUF",
            "    generic map (DRIVE => 12, IBUF_LOW_PWR => TRUE, IOSTANDARD => \"DEFAULT\",SLEW => \"SLOW\")",
            "    port map (I => ${3:I}, T => ${4:T}, O => ${5:O}, IO => ${6:IO});"
        ],
        "description": "Input-output buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IOBUFDS": {
        "prefix": "IOBUFDS",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iobufds_${2:0} : IOBUFDS",
            "    generic map (",
            "        DIFF_TERM   => FALSE,       -- Boolean",
            "        DQS_BIAS    => \"FALSE\",    -- string",
            "        IBUF_LOW_PWR => TRUE,       -- boolean",
            "        SLEW        => \"SLOW\",     -- string",
            "        IOSTANDARD  => \"DEFAULT"    -- string",
            "    )",
            "    port map (",
            "        I   => ${3:I  }, -- in",
            "        T   => ${4:T  }, -- in",
            "        O   => ${5:O  }, -- out",
            "        IO  => ${6:IO }, -- inout",
            "        IOB => ${7:IOB}, -- inout",
            "    );",
            ""
        ],
        "description": "Differential bidirectional IO buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IOBUFDSE3": {
        "prefix": "IOBUFDSE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iobufdse3_${2:0} : IOBUFDSE3",
            "    generic map (",
            "        DIFF_TERM       => \"FALSE\",    -- string",
            "        DQS_BIAS        => \"FALSE\",    -- string",
            "        IBUF_LOW_PWR    => \"TRUE\",     -- string",
            "        IOSTANDARD      => \"DEFAULT\",  -- string",
            "        SIM_INPUT_BUFFER_OFFSET => 0,   -- integer",
            "        USE_IBUFDISABLE => \"FALSE\"      -- string",
            "    )",
            "    port map (",
            "        IO             => ${3:IO            }, -- inout",
            "        IOB            => ${4:IOB           }, -- inout",
            "        I              => ${5:I             }, -- in",
            "        T              => ${6:T             }, -- in",
            "        O              => ${7:O             }, -- out",
            "        OSC            => ${8:OSC           }, -- in [3:0]",
            "        OSC_EN         => ${9:OSC_EN        }, -- in [1:0]",
            "        IBUFDISABLE    => ${10:IBUFDISABLE   }, -- in",
            "        DCITERMDISABLE => ${11:DCITERMDISABLE} -- in",
            "    );",
            ""
        ],
        "description": "Differential bidirectional controllable IO buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IOBUFDS_DIFF_OUT": {
        "prefix": "IOBUFDS_DIFF_OUT",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_ZIobuf_diff_out_${2:0} : IOBUFDS_DIFF_OUT",
            "    generic map (",
            "        DIFF_TERM       => FALSE,   -- boolean",
            "        DQS_BIAS        => \"FALSE\",-- string",
            "        IBUF_LOW_PWR    => TRUE,    -- boolean",
            "        IOSTANDARD      => \"DEFAULT"    -- stting",
            "    )",
            "    port map (",
            "        I   => ${3:I  }, -- in",
            "        TM  => ${4:TM }, -- in",
            "        TS  => ${5:TS }, -- in",
            "        O   => ${6:O  }, -- out",
            "        OB  => ${7:OB }, -- out",
            "        IO  => ${8:IO }, -- inout",
            "        IOB => ${9:IOB} -- inout",
            "    );",
            ""
        ],
        "description": "Differential bidirectional IO buffer with differential output.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IOBUFDS_DIFF_OUT_INTERMDISABLE": {
        "prefix": "IOBUFDS_DIFF_OUT_INTERMDISABLE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iobuff_diff_out_ntrmdsbl_${2:0} : IOBUFDS_DIFF_OUT_INTERMDISABLE",
            "generic map (",
            "    DIFF_TERM       => \"FALSE\",    -- string",
            "    DQS_BIAS        => \"FALSE\",    -- string",
            "    IBUF_LOW_PWR    => \"TRUE\",     -- string",
            "    IOSTANDARD      => \"DEFAULT\",  -- string",
            "    SIM_DEVICE      => \"7SERIES\",  -- string",
            "    USE_IBUFDISABLE => \"TRUE\"       -- string",
            ")",
            "port map (",
            "    IO             => ${3:IO           }, -- inout",
            "    IOB            => ${4:IOB          }, -- inout",
            "    I              => ${5:I            }, -- in",
            "    TM             => ${6:TM           }, -- in",
            "    TS             => ${7:TS           }, -- in",
            "    O              => ${8:O            }, -- out",
            "    OB             => ${9:OB           }, -- out",
            "    IBUFDISABLE    => ${10:IBUFDISABLE  }, -- in",
            "    INTERMDISABLE  => ${11:INTERMDISABLE} -- in",
            ");"
        ],
        "description": "Differential bidirectional controllable IO buffer with differential output.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IOBUFDS_INTERMDISABLE": {
        "prefix": "IOBUFDS_INTERMDISABLE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iobufds_ntrmdsbl_${2:0} : IOBUFDS_INTERMDISABLE",
            "    generic map (",
            "        DIFF_TERM       => \"FALSE\",    -- string",
            "        DQS_BIAS        => \"FALSE\",    -- string",
            "        IBUF_LOW_PWR    => \"TRUE\",     -- string",
            "        IOSTANDARD      => \"DEFAULT\",  -- string",
            "        SIM_DEVICE      => \"7SERIES\",  -- string",
            "        SLEW            => \"SLOW\",     -- string",
            "        USE_IBUFDISABLE => \"TRUE\"       -- string",
            "    )",
            "    port map (",
            "        IO             => ${3:IO           }, -- inout",
            "        IOB            => ${4:IOB          }, -- inout",
            "        I              => ${5:I            }, -- in",
            "        T              => ${6:T            }, -- in",
            "        O              => ${7:O            }, -- out",
            "        IBUFDISABLE    => ${8:IBUFDISABLE  }, -- in",
            "        INTERMDISABLE  => ${9:INTERMDISABLE} -- in",
            "    );",
            ""
        ],
        "description": "Differential bidirectional controllable IO buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "IOBUFE3": {
        "prefix": "IOBUFE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Iobufe3_${2:0} : IOBUFE3",
            "    generic map (",
            "        DRIVE           => 12,          -- integer",
            "        IBUF_LOW_PWR    => \"TRUE\",     -- string",
            "        IOSTANDARD      => \"DEFAULT\",  -- string",
            "        SIM_INPUT_BUFFER_OFFSET => 0,   -- integer",
            "        USE_IBUFDISABLE => \"FALSE\"      -- string",
            "    )",
            "    port map (",
            "        IO             => ${3:IO            }, -- inout",
            "        I              => ${4:I             }, -- in",
            "        T              => ${5:T             }, -- in",
            "        O              => ${6:O             }, -- out",
            "        OSC            => ${7:OSC           }, -- in [3:0]",
            "        OSC_EN         => ${8:OSC_EN        }, -- in",
            "        VREF           => ${9:VREF          }, -- in",
            "        DCITERMDISABLE => ${10:DCITERMDISABLE}, -- in",
            "        IBUFDISABLE    => ${11:IBUFDISABLE   } -- in",
            "    );",
            ""
        ],
        "description": "Differential bidirectional IO buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ISERDES": {
        "prefix": "ISERDES",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Isrds_${2:0} : ISERDES",
            "    generic map (",
            "        BITSLIP_ENABLE  => false,       -- boolean",
            "        DATA_RATE       => \"DDR\",      -- string",
            "        DATA_WIDTH      => 4,           -- integer",
            "        INIT_Q1         => '0',         -- bit",
            "        INIT_Q2         => '0',         -- bit",
            "        INIT_Q3         => '0',         -- bit",
            "        INIT_Q4         => '0',         -- bit",
            "        INTERFACE_TYPE  => \"MEMORY\",   -- string",
            "        IOBDELAY        => \"NONE\",     -- string",
            "        IOBDELAY_TYPE   => \"DEFAULT\",  -- string",
            "        IOBDELAY_VALUE  => 0,           -- integer",
            "        NUM_CE          => 2,           -- integer",
            "        SERDES_MODE     => \"MASTER\",   -- string",
            "        SRVAL_Q1        => '0',         -- bit",
            "        SRVAL_Q2        => '0',         -- bit",
            "        SRVAL_Q3        => '0',         -- bit",
            "        SRVAL_Q4        => '0'          -- bit",
            "    )",
            "    port map (",
            "        D          => ${3:D        }, -- in",
            "        CE1        => ${4:CE1      }, -- in",
            "        CE2        => ${5:CE2      }, -- in",
            "        SR         => ${6:SR       }, -- in",
            "        REV        => ${7:REV      }, -- in",
            "        DLYCE      => ${8:DLYCE    }, -- in",
            "        DLYINC     => ${9:DLYINC   }, -- in",
            "        DLYRST     => ${10:DLYRST   }, -- in",
            "        BITSLIP    => ${11:BITSLIP  }, -- in",
            "        O          => ${12:O        }, -- out",
            "        Q1         => ${13:Q1       }, -- out",
            "        Q2         => ${14:Q2       }, -- out",
            "        Q3         => ${15:Q3       }, -- out",
            "        Q4         => ${16:Q4       }, -- out",
            "        Q5         => ${17:Q5       }, -- out",
            "        Q6         => ${18:Q6       }, -- out",
            "        CLK        => ${19:CLK      }, -- in",
            "        CLKDIV     => ${20:CLKDIV   }, -- in",
            "        OCLK       => ${21:OCLK     }, -- in",
            "        SHIFTIN1   => ${22:SHIFTIN1 }, -- in",
            "        SHIFTIN2   => ${23:SHIFTIN2 }, -- in",
            "        SHIFTOUT1  => ${24:SHIFTOUT1}, -- out",
            "        SHIFTOUT2  => ${25:SHIFTOUT2}, -- out",
            "    );",
            ""
        ],
        "description": "Dedicated serial input deserializer with bitslip.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ISERDESE2": {
        "prefix": "ISERDESE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Isrdse2_${2:0} : ISERDESE2",
            "    generic map (",
            "        SERDES_MODE         => \"MASTER\",   -- string",
            "        INTERFACE_TYPE      => \"MEMORY\",   -- string",
            "        IOBDELAY            => \"NONE\",     -- string",
            "        DATA_RATE           => \"DDR\",      -- string",
            "        DATA_WIDTH          => 4,           -- integer",
            "        DYN_CLKDIV_INV_EN   => \"FALSE\",    -- string",
            "        DYN_CLK_INV_EN      => \"FALSE\",    -- string",
            "        NUM_CE              => 2,           -- integer",
            "        OFB_USED            => \"FALSE\",    -- string",
            "        INIT_Q1             => '0',         -- bit;"
            "        INIT_Q2             => '0',         -- bit;"
            "        INIT_Q3             => '0',         -- bit;"
            "        INIT_Q4             => '0',         -- bit;"
            "        SRVAL_Q1            => '0',         -- bit;"
            "        SRVAL_Q2            => '0',         -- bit;"
            "        SRVAL_Q3            => '0',         -- bit;"
            "        SRVAL_Q4            => '0',         -- bit",
            "        IS_CLKB_INVERTED    => '0',         -- bit",
            "        IS_CLKDIVP_INVERTED => '0',         -- bit",
            "        IS_CLKDIV_INVERTED  => '0',         -- bit",
            "        IS_CLK_INVERTED     => '0',         -- bit",
            "        IS_D_INVERTED       => '0',         -- bit",
            "        IS_OCLKB_INVERTED   => '0',         -- bit",
            "        IS_OCLK_INVERTED    => '0'          -- bit",
            "    )",
            "    port map (",
            "        D                   => ${3:D           }, -- in",
            "        DDLY                => ${4:DDLY        }, -- in",
            "        OFB                 => ${5:OFB         }, -- in",
            "        BITSLIP             => ${6:BITSLIP     }, -- in",
            "        CE1                 => ${7:CE1         }, -- in",
            "        CE2                 => ${8:CE2         }, -- in",
            "        RST                 => ${9:RST         }, -- in",
            "        CLK                 => ${10:CLK         }, -- in",
            "        CLKB                => ${11:CLKB        }, -- in",
            "        CLKDIV              => ${12:CLKDIV      }, -- in",
            "        CLKDIVP             => ${13:CLKDIVP     }, -- in",
            "        OCLK                => ${14:OCLK        }, -- in",
            "        OCLKB               => ${15:OCLKB       }, -- in",
            "        DYNCLKDIVSEL        => ${16:DYNCLKDIVSEL}, -- in",
            "        DYNCLKSEL           => ${17:DYNCLKSEL   }, -- in",
            "        SHIFTOUT1           => ${18:SHIFTOUT1   }, -- out",
            "        SHIFTOUT2           => ${19:SHIFTOUT2   }, -- out",
            "        O                   => ${20:O           }, -- out",
            "        Q1                  => ${21:Q1          }, -- out",
            "        Q2                  => ${22:Q2          }, -- out",
            "        Q3                  => ${23:Q3          }, -- out",
            "        Q4                  => ${24:Q4          }, -- out",
            "        Q5                  => ${25:Q5          }, -- out",
            "        Q6                  => ${26:Q6          }, -- out",
            "        Q7                  => ${27:Q7          }, -- out",
            "        Q8                  => ${28:Q8          }, -- out",
            "        SHIFTIN1            => ${29:SHIFTIN1    }, -- in",
            "        SHIFTIN2            => ${30:SHIFTIN2    } -- in",
            "    );",
            ""
        ],
        "description": "Dedicated serial input deserializer with bitslip.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ISERDESE3": {
        "prefix": "ISERDESE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Isrdse3_${2:0} : ISERDESE3",
            "    generic map (",
            "        DATA_WIDTH          => 8,               -- integer",
            "        DDR_CLK_EDGE        => \"OPPOSITE_EDGE\",-- string",
            "        FIFO_ENABLE         => \"FALSE\",        -- string",
            "        FIFO_SYNC_MODE      => \"FALSE\",        -- string",
            "        IDDR_MODE           => \"FALSE\",        -- string",
            "        IS_CLK_B_INVERTED   => '0',             -- std_ulogic",
            "        IS_CLK_INVERTED     => '0',             -- std_ulogic",
            "        IS_RST_INVERTED     => '0',             -- std_ulogic",
            "        SIM_DEVICE          => \"ULTRASCALE\",   -- string",
            "        SIM_VERSIOM         => 2.0              -- real",
            "    )",
            "    port map (",
            "        D               => ${3:D              }, -- in",
            "        CLK             => ${4:CLK            }, -- in",
            "        CLKDIV          => ${5:CLKDIV         }, -- in",
            "        CLK_B           => ${6:CLK_B          }, -- in",
            "        RST             => ${7:RST            }, -- in",
            "        FIFO_RD_CLK     => ${8:FIFO_RD_CLK    }, -- in",
            "        FIFO_RD_EN      => ${9:FIFO_RD_EN     }, -- in",
            "        INTERNAL_DIVCLK => ${10:INTERNAL_DIVCLK}, -- out",
            "        FIFO_EMPTY      => ${11:FIFO_EMPTY     }, -- out",
            "        Q               => ${12:Q              } -- out[7:0]",
            "    );",
            ""
        ],
        "description": "Dedicated serial input deserializer with bitslip.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "LUT5": {
        "prefix": "LUT5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Lut5_${2:0} : LUT5",
            "    generic map (",
            "        INIT => ${3:X\"00000000"}",
            "    )",
            "    port map (",
            "        I0  => ${4:I0}, -- in",
            "        I1  => ${5:I1}, -- in",
            "        I2  => ${6:I2}, -- in",
            "        I3  => ${7:I3}, -- in",
            "        I4  => ${8:I4}, -- in",
            "        O   => ${9:O } -- out",
            "    );",
            ""
        ],
        "description": "5 Input Look-up table.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "LUT6_2": {
        "prefix": "LUT6_2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Lut6_2_${2:0} : LUT6_2",
            "    generic map (",
            "        INIT => ${3:X\"0000000000000000"}  -- bit_vector",
            "    )",
            "    port map (",
            "        I0 => ${4:I0}, -- in",
            "        I1 => ${5:I1}, -- in",
            "        I2 => ${6:I2}, -- in",
            "        I3 => ${7:I3}, -- in",
            "        I4 => ${8:I4}, -- in",
            "        I5 => ${9:I5}, -- in",
            "        O5 => ${10:O5}, -- out",
            "        O6 => ${11:O6} -- out",
            "    );",
            ""
        ],
        "description": "6 Input, 2 output Look-up table.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MASTER_JTAG": {
        "prefix": "MASTER_JTAG",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Mstr_jtag_${2:0} : MASTER_JTAG",
            "    port map (",
            "        TDO => ${3:TDO}, -- out",
            "        TCK => ${4:TCK}, -- in",
            "        TDI => ${5:TDI}, -- in",
            "        TMS => ${6:TMS} -- in",
            "    );",
            ""
        ],
        "description": "Master JTAG controller.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MMCME2_ADV": {
        "prefix": "MMCME2_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Mmcme2_adv_${2:0} : MMCME2_ADV",
            "        generic map (",
            "            BANDWIDTH               => \"OPTIMIZED\", -- string",
            "            CLKIN1_PERIOD           => 0.000,        -- real",
            "            CLKIN2_PERIOD           => 0.000,        -- real",
            "            REF_JITTER1             => 0.0,          -- real",
            "            REF_JITTER2             => 0.0,          -- real",
            "            COMPENSATION            => \"ZHOLD\",     -- string",
            "            DIVCLK_DIVIDE           => 1,            -- integer",
            "            CLKFBOUT_MULT_F         => 5.000,        -- real",
            "            CLKFBOUT_PHASE          => 0.000,        - real",
            "            CLKFBOUT_USE_FINE_PS    => FALSE,        -- boolean",
            "            CLKOUT0_DIVIDE_F        => 1.000,        -- real",
            "            CLKOUT0_DUTY_CYCLE      => 0.500,        -- real",
            "            CLKOUT0_PHASE           => 0.000,        -- real",
            "            CLKOUT0_USE_FINE_PS     => FALSE,        -- boolean",
            "            CLKOUT1_DIVIDE          => 1,            -- integer",
            "            CLKOUT1_DUTY_CYCLE      => 0.500,        -- real",
            "            CLKOUT1_PHASE           => 0.000,        -- real",
            "            CLKOUT1_USE_FINE_PS     => FALSE,        -- boolean",
            "            CLKOUT2_DIVIDE          => 1,            -- integer",
            "            CLKOUT2_DUTY_CYCLE      => 0.500,        -- real",
            "            CLKOUT2_PHASE           => 0.000,        -- real",
            "            CLKOUT2_USE_FINE_PS     => FALSE,        -- boolean",
            "            CLKOUT3_DIVIDE          => 1,            -- integer",
            "            CLKOUT3_DUTY_CYCLE      => 0.500,        -- real",
            "            CLKOUT3_PHASE           => 0.000,        -- real",
            "            CLKOUT3_USE_FINE_PS     => FALSE,        -- boolean",
            "            CLKOUT4_CASCADE         => FALSE,        -- boolean",
            "            CLKOUT4_DIVIDE          => 1,            -- integer",
            "            CLKOUT4_DUTY_CYCLE      => 0.500,        -- real",
            "            CLKOUT4_PHASE           => 0.000,        -- real",
            "            CLKOUT4_USE_FINE_PS     => FALSE,        -- boolean",
            "            CLKOUT5_DIVIDE          => 1,            -- integer",
            "            CLKOUT5_DUTY_CYCLE      => 0.500,        -- real",
            "            CLKOUT5_PHASE           => 0.000,        -- real",
            "            CLKOUT5_USE_FINE_PS     => FALSE,        -- boolean",
            "            CLKOUT6_DIVIDE          => 1,            -- integer",
            "            CLKOUT6_DUTY_CYCLE      => 0.500,        -- real",
            "            CLKOUT6_PHASE           => 0.000,        -- real",
            "            CLKOUT6_USE_FINE_PS     => FALSE,        -- boolean",
            "            SS_EN                   => \"FALSE\",     -- string",
            "            SS_MODE                 => \"CENTER_HIGH",-- string",
            "            SS_MOD_PERIOD           => 10000,        -- integer",
            "            STARTUP_WAIT            => FALSE         -- boolean",
            "        )",
            "        port map (",
            "            CLKIN1          => ${3:CLKIN1      }, -- in",
            "            CLKIN2          => ${4:CLKIN2      }, -- in",
            "            CLKINSEL        => ${5:CLKINSEL    }, -- in",
            "            CLKFBIN         => ${6:CLKFBIN     }, -- in",
            "            CLKFBOUT        => ${7:CLKFBOUT    }, -- out",
            "            CLKFBOUTB       => ${8:CLKFBOUTB   }, -- out",
            "            CLKFBSTOPPED    => ${9:CLKFBSTOPPED}, -- out",
            "            CLKINSTOPPED    => ${10:CLKINSTOPPED}, -- out",
            "            RST             => ${11:RST         }, -- in",
            "            PWRDWN          => ${12:PWRDWN      }, -- in",
            "            LOCKED          => ${13:LOCKED      }, -- out",
            "            CLKOUT0         => ${14:CLKOUT0     }, -- out",
            "            CLKOUT0B        => ${15:CLKOUT0B    }, -- out",
            "            CLKOUT1         => ${16:CLKOUT1     }, -- out",
            "            CLKOUT1B        => ${17:CLKOUT1B    }, -- out",
            "            CLKOUT2         => ${18:CLKOUT2     }, -- out",
            "            CLKOUT2B        => ${19:CLKOUT2B    }, -- out",
            "            CLKOUT3         => ${20:CLKOUT3     }, -- out",
            "            CLKOUT3B        => ${21:CLKOUT3B    }, -- out",
            "            CLKOUT4         => ${22:CLKOUT4     }, -- out",
            "            CLKOUT5         => ${23:CLKOUT5     }, -- out",
            "            CLKOUT6         => ${24:CLKOUT6     }, -- out",
            "            DI              => ${25:DI          }, -- in [15:0]",
            "            DADDR           => ${26:DADDR       }, -- in [6:0]",
            "            DEN             => ${27:DEN         }, -- in",
            "            DWE             => ${28:DWE         }, -- in",
            "            DCLK            => ${29:DCLK        }, -- in",
            "            DO              => ${30:DO          }, -- out [15:0]",
            "            DRDY            => ${31:DRDY        }, -- out",
            "            PSCLK           => ${32:PSCLK       }, -- in",
            "            PSEN            => ${33:PSEN        }, -- in",
            "            PSINCDEC        => ${34:PSINCDEC    }, -- in",
            "            PSDONE          => ${35:PSDONE      } -- out",
            "        );"
        ],
        "description": "Mixed Mode Clock Manager.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MMCME3_ADV": {
        "prefix": "MMCME3_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Mmcme3_adv_${2:0} : MMCME3_ADV",
            "        generic map (",
            "            BANDWIDTH               => \"OPTIMIZED\",    -- string",
            "            REF_JITTER1             => 0.010,           -- real",
            "            REF_JITTER2             => 0.010,           -- real",
            "            DIVCLK_DIVIDE           => 1,               -- integer",
            "            CLKIN1_PERIOD           => 0.000,           -- real",
            "            CLKIN2_PERIOD           => 0.000,           -- real",
            "            IS_CLKIN1_INVERTED      => '0',             -- std_ulogic",
            "            IS_CLKIN2_INVERTED      => '0',             -- std_ulogic",
            "            IS_CLKINSEL_INVERTED    => '0',             -- std_ulogic",
            "            IS_CLKFBIN_INVERTED     => '0',             -- std_ulogic",
            "            CLKFBOUT_MULT_F         => 5.000,           -- real",
            "            CLKFBOUT_PHASE          => 0.000,           -- real",
            "            CLKFBOUT_USE_FINE_PS    => \"FALSE\",        -- string",
            "            CLKOUT0_DIVIDE_F        => 1.000,           -- real",
            "            CLKOUT0_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT0_PHASE           => 0.000,           -- real",
            "            CLKOUT0_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT1_DIVIDE          => 1,               -- integer",
            "            CLKOUT1_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT1_PHASE           => 0.000,           -- real",
            "            CLKOUT1_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT2_DIVIDE          => 1,               -- integer",
            "            CLKOUT2_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT2_PHASE           => 0.000,           -- real",
            "            CLKOUT2_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT3_DIVIDE          => 1,               -- integer",
            "            CLKOUT3_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT3_PHASE           => 0.000,           -- real",
            "            CLKOUT3_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT4_CASCADE         => \"FALSE\",        -- string",
            "            CLKOUT4_DIVIDE          => 1,               -- integer",
            "            CLKOUT4_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT4_PHASE           => 0.000,           -- real",
            "            CLKOUT4_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT5_DIVIDE          => 1,               -- integer",
            "            CLKOUT5_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT5_PHASE           => 0.000,           -- real",
            "            CLKOUT5_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT6_DIVIDE          => 1,               -- integer",
            "            CLKOUT6_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT6_PHASE           => 0.000,           -- real",
            "            CLKOUT6_USE_FINE_PS     => \"FALSE\",        -- string",
            "            COMPENSATION            => \"AUTO\",         -- string",
            "            IS_PSEN_INVERTED        => '0',             -- std_ulogic",
            "            IS_PSINCDEC_INVERTED    => '0',             -- std_ulogic",
            "            IS_PWRDWN_INVERTED      => '0',             -- std_ulogic",
            "            IS_RST_INVERTED         => '0',             -- std_ulogic",
            "            SS_EN                   => \"FALSE\",        -- string",
            "            SS_MODE                 => \"CENTER_HIGH\",  -- string",
            "            SS_MOD_PERIOD           => 10000,           -- integer",
            "            STARTUP_WAIT            => \"FALSE\"          -- string",
            "        )",
            "        port map (",
            "            CLKIN1          => ${3:CLKIN1      }, -- in",
            "            CLKIN2          => ${4:CLKIN2      }, -- in",
            "            CLKINSEL        => ${5:CLKINSEL    }, -- in",
            "            CLKFBIN         => ${6:CLKFBIN     }, -- in",
            "            RST             => ${7:RST         }, -- in",
            "            PWRDWN          => ${8:PWRDWN      }, -- in",
            "            CLKFBOUT        => ${9:CLKFBOUT    }, -- out",
            "            CLKFBOUTB       => ${10:CLKFBOUTB   }, -- out",
            "            CLKOUT0         => ${11:CLKOUT0     }, -- out",
            "            CLKOUT0B        => ${12:CLKOUT0B    }, -- out",
            "            CLKOUT1         => ${13:CLKOUT1     }, -- out",
            "            CLKOUT1B        => ${14:CLKOUT1B    }, -- out",
            "            CLKOUT2         => ${15:CLKOUT2     }, -- out",
            "            CLKOUT2B        => ${16:CLKOUT2B    }, -- out",
            "            CLKOUT3         => ${17:CLKOUT3     }, -- out",
            "            CLKOUT3B        => ${18:CLKOUT3B    }, -- out",
            "            CLKOUT4         => ${19:CLKOUT4     }, -- out",
            "            CLKOUT5         => ${20:CLKOUT5     }, -- out",
            "            CLKOUT6         => ${21:CLKOUT6     }, -- out",
            "            CDDCREQ         => ${22:CDDCREQ     }, -- in",
            "            CDDCDONE        => ${23:CDDCDONE    }, -- out",
            "            PSCLK           => ${24:PSCLK       }, -- in",
            "            PSEN            => ${25:PSEN        }, -- in",
            "            PSINCDEC        => ${26:PSINCDEC    }, -- in",
            "            PSDONE          => ${27:PSDONE      }, -- out",
            "            DCLK            => ${28:DCLK        }, -- in",
            "            DI              => ${29:DI          }, -- in [15:0]",
            "            DADDR           => ${30:DADDR       }, -- in [6:0]",
            "            DEN             => ${31:DEN         }, -- in",
            "            DWE             => ${32:DWE         }, -- in",
            "            DO              => ${33:DO          }, -- out [15:0]",
            "            DRDY            => ${34:DRDY        }, -- out",
            "            CLKFBSTOPPED    => ${35:CLKFBSTOPPED}, -- out",
            "            CLKINSTOPPED    => ${36:CLKINSTOPPED}, -- out",
            "            LOCKED          => ${37:LOCKED      } -- out",
            "        );"
        ],
        "description": "Mixed Mode Clock Manager.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MMCME4_ADV": {
        "prefix": "MMCME4_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Mmcme4_adv_${2:0} : MMCME4_ADV",
            "        generic map (",
            "            BANDWIDTH               => \"OPTIMIZED\",    -- string",
            "            REF_JITTER1             => 0.010,           -- real",
            "            REF_JITTER2             => 0.010,           -- real",
            "            DIVCLK_DIVIDE           => 1,               -- integer",
            "            CLKIN1_PERIOD           => 0.000,           -- real",
            "            CLKIN2_PERIOD           => 0.000,           -- real",
            "            IS_CLKIN1_INVERTED      => '0',             -- bit",
            "            IS_CLKIN2_INVERTED      => '0',             -- bit",
            "            IS_CLKINSEL_INVERTED    => '0',             -- bit",
            "            IS_CLKFBIN_INVERTED     => '0',             -- bit",
            "            CLKFBOUT_MULT_F         => 5.000,           -- real",
            "            CLKFBOUT_PHASE          => 0.000,           -- real",
            "            CLKFBOUT_USE_FINE_PS    => \"FALSE\",        -- string",
            "            CLKOUT0_DIVIDE_F        => 1.000,           -- real",
            "            CLKOUT0_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT0_PHASE           => 0.000,           -- real",
            "            CLKOUT0_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT1_DIVIDE          => 1,               -- integer",
            "            CLKOUT1_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT1_PHASE           => 0.000,           -- real",
            "            CLKOUT1_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT2_DIVIDE          => 1,               -- integer",
            "            CLKOUT2_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT2_PHASE           => 0.000,           -- real",
            "            CLKOUT2_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT3_DIVIDE          => 1,               -- integer",
            "            CLKOUT3_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT3_PHASE           => 0.000,           -- real",
            "            CLKOUT3_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT4_CASCADE         => \"FALSE\",        -- string",
            "            CLKOUT4_DIVIDE          => 1,               -- integer",
            "            CLKOUT4_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT4_PHASE           => 0.000,           -- real",
            "            CLKOUT4_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT5_DIVIDE          => 1,               -- integer",
            "            CLKOUT5_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT5_PHASE           => 0.000,           -- real",
            "            CLKOUT5_USE_FINE_PS     => \"FALSE\",        -- string",
            "            CLKOUT6_DIVIDE          => 1,               -- integer",
            "            CLKOUT6_DUTY_CYCLE      => 0.500,           -- real",
            "            CLKOUT6_PHASE           => 0.000,           -- real",
            "            CLKOUT6_USE_FINE_PS     => \"FALSE\",        -- string",
            "            COMPENSATION            => \"AUTO\",         -- string",
            "            IS_PSEN_INVERTED        => '0',             -- bit",
            "            IS_PSINCDEC_INVERTED    => '0',             -- bit",
            "            IS_PWRDWN_INVERTED      => '0',             -- bit",
            "            IS_RST_INVERTED         => '0',             -- bit",
            "            SS_EN                   => \"FALSE\",        -- string",
            "            SS_MODE                 => \"CENTER_HIGH\",  -- string",
            "            SS_MOD_PERIOD           => 10000,           -- integer",
            "            STARTUP_WAIT            => \"FALSE\"          -- string",
            "        )",
            "        port map (",
            "            CLKIN1          => ${3:CLKIN1      }, -- in",
            "            CLKIN2          => ${4:CLKIN2      }, -- in",
            "            CLKINSEL        => ${5:CLKINSEL    }, -- in",
            "            CLKFBIN         => ${6:CLKFBIN     }, -- in",
            "            RST             => ${7:RST         }, -- in",
            "            PWRDWN          => ${8:PWRDWN      }, -- in",
            "            CLKFBOUT        => ${9:CLKFBOUT    }, -- out",
            "            CLKFBOUTB       => ${10:CLKFBOUTB   }, -- out",
            "            CLKOUT0         => ${11:CLKOUT0     }, -- out",
            "            CLKOUT0B        => ${12:CLKOUT0B    }, -- out",
            "            CLKOUT1         => ${13:CLKOUT1     }, -- out",
            "            CLKOUT1B        => ${14:CLKOUT1B    }, -- out",
            "            CLKOUT2         => ${15:CLKOUT2     }, -- out",
            "            CLKOUT2B        => ${16:CLKOUT2B    }, -- out",
            "            CLKOUT3         => ${17:CLKOUT3     }, -- out",
            "            CLKOUT3B        => ${18:CLKOUT3B    }, -- out",
            "            CLKOUT4         => ${19:CLKOUT4     }, -- out",
            "            CLKOUT5         => ${20:CLKOUT5     }, -- out",
            "            CLKOUT6         => ${21:CLKOUT6     }, -- out",
            "            CDDCREQ         => ${22:CDDCREQ     }, -- in",
            "            CDDCDONE        => ${23:CDDCDONE    }, -- out",
            "            PSCLK           => ${24:PSCLK       }, -- in",
            "            PSEN            => ${25:PSEN        }, -- in",
            "            PSINCDEC        => ${26:PSINCDEC    }, -- in",
            "            PSDONE          => ${27:PSDONE      }, -- out",
            "            DCLK            => ${28:DCLK        }, -- in",
            "            DI              => ${29:DI          }, -- in [15:0]",
            "            DADDR           => ${30:DADDR       }, -- in [6:0]",
            "            DEN             => ${31:DEN         }, -- in",
            "            DWE             => ${32:DWE         }, -- in",
            "            DO              => ${33:DO          }, -- out([15:0]",
            "            DRDY            => ${34:DRDY        }, -- out",
            "            CLKFBSTOPPED    => ${35:CLKFBSTOPPED}, -- out",
            "            CLKINSTOPPED    => ${36:CLKINSTOPPED}, -- out",
            "            LOCKED          => ${37:LOCKED      }, -- out",
            "        );"
        ],
        "description": "Mixed Mode Clock Manager.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MMCME5": {
        "prefix": "MMCME5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Mmcme5_${2:0} : MMCME5",
            "        generic map (",
            "            BANDWIDTH              => \"OPTIMIZED\",    -- string",
            "            COMPENSATION           => \"AUTO\",         -- string",
            "            REF_JITTER1            => 0.010,           -- real",
            "            REF_JITTER2            => 0.010,           -- real",
            "            CLKIN1_PERIOD          => 0.000,           -- real",
            "            CLKIN2_PERIOD          => 0.000,           -- real",
            "            DIVCLK_DIVIDE          => 1,               -- integer",
            "            CLKFBOUT_FRACT         => 0,               -- integer",
            "            CLKFBOUT_MULT          => 42,              -- integer",
            "            CLKFBOUT_PHASE         => 0.000,           -- real",
            "            CLKOUT0_DIVIDE         => 2,               -- integer",
            "            CLKOUT0_DUTY_CYCLE     => 0.500,           -- real",
            "            CLKOUT0_PHASE          => 0.000,           -- real",
            "            CLKOUT0_PHASE_CTRL     => \"00\",           -- std_logic_vector[1:0]",
            "            CLKOUT1_DIVIDE         => 2,               -- integer",
            "            CLKOUT1_DUTY_CYCLE     => 0.500,           -- real",
            "            CLKOUT1_PHASE          => 0.000,           -- real",
            "            CLKOUT1_PHASE_CTRL     => \"00\",           -- std_logic_vector[1:0]",
            "            CLKOUT2_DIVIDE         => 2,               -- integer",
            "            CLKOUT2_DUTY_CYCLE     => 0.500,           -- real",
            "            CLKOUT2_PHASE          => 0.000,           -- real",
            "            CLKOUT2_PHASE_CTRL     => \"00\",           -- std_logic_vector[1:0]",
            "            CLKOUT3_DIVIDE         => 2,               -- integer",
            "            CLKOUT3_DUTY_CYCLE     => 0.500,           -- real",
            "            CLKOUT3_PHASE          => 0.000,           -- real",
            "            CLKOUT3_PHASE_CTRL     => \"00\",           -- std_logic_vector[1:0]",
            "            CLKOUT4_DIVIDE         => 2,               -- integer",
            "            CLKOUT4_DUTY_CYCLE     => 0.500,           -- real",
            "            CLKOUT4_PHASE          => 0.000,           -- real",
            "            CLKOUT4_PHASE_CTRL     => \"00\",           -- std_logic_vector[1:0]",
            "            CLKOUT5_DIVIDE         => 2,               -- integer",
            "            CLKOUT5_DUTY_CYCLE     => 0.500,           -- real",
            "            CLKOUT5_PHASE          => 0.000,           -- real",
            "            CLKOUT5_PHASE_CTRL     => \"00\",           -- std_logic_vector[1:0]",
            "            CLKOUT6_DIVIDE         => 2,               -- integer",
            "            CLKOUT6_DUTY_CYCLE     => 0.500,           -- real",
            "            CLKOUT6_PHASE          => 0.000,           -- real",
            "            CLKOUT6_PHASE_CTRL     => \"00\",           -- std_logic_vector[1:0]",
            "            CLKOUTFB_PHASE_CTRL    => \"00\",           -- std_logic_vector[1:0]",
            "            DESKEW_DELAY1          => 0,               -- integer",
            "            DESKEW_DELAY2          => 0,               -- integer",
            "            DESKEW_DELAY_EN1       => \"FALSE\",        -- string",
            "            DESKEW_DELAY_EN2       => \"FALSE\",        -- string",
            "            DESKEW_DELAY_PATH1     => \"FALSE\",        -- string",
            "            DESKEW_DELAY_PATH2     => \"FALSE\",        -- string",
            "            IS_CLKFBIN_INVERTED    => '0',             -- bit",
            "            IS_CLKIN1_INVERTED     => '0',             -- bit",
            "            IS_CLKIN2_INVERTED     => '0',             -- bit",
            "            IS_CLKINSEL_INVERTED   => '0',             -- bit",
            "            IS_PSEN_INVERTED       => '0',             -- bit",
            "            IS_PSINCDEC_INVERTED   => '0',             -- bit",
            "            IS_PWRDWN_INVERTED     => '0',             -- bit",
            "            IS_RST_INVERTED        => '0',             -- bit",
            "            SS_EN                  => \"FALSE\",        -- string",
            "            SS_MODE                => \"CENTER_HIGH\",  -- string",
            "            SS_MOD_PERIOD          => 10000            -- integer",
            "        )",
            "        port map (",
            "            CLKIN1_DESKEW  => ${3:CLKIN1_DESKEW }, -- in",
            "            CLKFB1_DESKEW  => ${4:CLKFB1_DESKEW }, -- in",
            "            CLKIN2_DESKEW  => ${5:CLKIN2_DESKEW }, -- in",
            "            CLKFB2_DESKEW  => ${6:CLKFB2_DESKEW }, -- in",
            "            CLKIN1         => ${7:CLKIN1        }, -- in",
            "            CLKIN2         => ${8:CLKIN2        }, -- in",
            "            CLKINSEL       => ${9:CLKINSEL      }, -- in",
            "            CLKFBIN        => ${10:CLKFBIN       }, -- in",
            "            CLKFBOUT       => ${11:CLKFBOUT      }, -- out",
            "            CLKOUT0        => ${12:CLKOUT0       }, -- out",
            "            CLKOUT1        => ${13:CLKOUT1       }, -- out",
            "            CLKOUT2        => ${14:CLKOUT2       }, -- out",
            "            CLKOUT3        => ${15:CLKOUT3       }, -- out",
            "            CLKOUT4        => ${16:CLKOUT4       }, -- out",
            "            CLKOUT5        => ${17:CLKOUT5       }, -- out",
            "            CLKOUT6        => ${18:CLKOUT6       }, -- out",
            "            PWRDWN         => ${19:PWRDWN        }, -- in",
            "            RST            => ${20:RST           }, -- in",
            "            PSCLK          => ${21:PSCLK         }, -- in",
            "            PSEN           => ${22:PSEN          }, -- in",
            "            PSINCDEC       => ${23:PSINCDEC      }, -- in",
            "            PSDONE         => ${24:PSDONE        }, -- out",
            "            DCLK           => ${25:DCLK          }, -- in",
            "            DEN            => ${26:DEN           }, -- in",
            "            DWE            => ${27:DWE           }, -- in",
            "            DADDR          => ${28:DADDR         }, -- in [6:0]",
            "            DI             => ${29:DI            }, -- in [15:0]",
            "            DO             => ${30:DO            }, -- out [15:0]",
            "            DRDY           => ${31:DRDY          }, -- out",
            "            CLKFBSTOPPED   => ${32:CLKFBSTOPPED  }, -- out",
            "            CLKINSTOPPED   => ${33:CLKINSTOPPED  }, -- out",
            "            LOCKED1_DESKEW => ${34:LOCKED1_DESKEW}, -- out",
            "            LOCKED2_DESKEW => ${35:LOCKED2_DESKEW}, -- out",
            "            LOCKED_FB      => ${36:LOCKED_FB     }, -- out",
            "            LOCKED         => ${37:LOCKED        } -- out",
            "        );"
        ],
        "description": "Mixed Mode Clock Manager.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MUXCY": {
        "prefix": "MUXCY",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Muxcy_${2:0} : MUXCY",
            "    port map (",
            "        CI  => ${3:CI}, -- in",
            "        DI  => ${4:DI}, -- in",
            "        S   => ${5:S }, -- in",
            "        O   => ${6:O } -- out",
            "    );",
            ""
        ],
        "description": "2-to-1 Multiplexer for Carry Logic with General Output.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MUXF7": {
        "prefix": "MUXF7",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Muxf7_${2:0} : MUXF7",
            "    port map (",
            "        I0  => ${3:I0}, -- in",
            "        I1  => ${4:I1}, -- in",
            "        S   => ${5:S }, -- in",
            "        O   => ${6:O } -- out",
            "    );",
            ""
        ],
        "description": "CLB MUX to connect two LUT6's together.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MUXF8": {
        "prefix": "MUXF8",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Muxf8_${2:0} : MUXF8",
            "    port map (",
            "        I0  => ${3:I0}, -- in",
            "        I1  => ${4:I1}, -- in",
            "        S   => ${5:S }, -- in",
            "        O   => ${6:O } -- out",
            "    );",
            ""
        ],
        "description": "CLB MUX to connect two MUXF7's together.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "MUXF9": {
        "prefix": "MUXF9",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Muxf9_${2:0} : MUXF9",
            "    port map (",
            "        I0  => ${3:I0}, -- in",
            "        I1  => ${4:I1}, -- in",
            "        S   => ${5:S }, -- in",
            "        O   => ${6:O } -- out",
            "    );",
            ""
        ],
        "description": "CLB MUX to connect two MUXF8's together.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OBUF": {
        "prefix": "OBUF",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Obuf_${2:0} : OBUF",
            "    generic map (DRIVE => 12, IOSTANDARD => \"DEFAULT\",SLEW => \"SLOW\")",
            "    port map (I => ${3:I}, O => ${4:O});"
        ],
        "description": "Output buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OBUFDS": {
        "prefix": "OBUFDS",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Obufds_${2:0} : OBUFDS",
            "    generic map (IOSTANDARD => \"DEFAULT\",SLEW => \"SLOW\")",
            "    port map (I => ${4:I}, O => ${5:O}, OB => ${6:OB});"
        ],
        "description": "Differential output buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OBUFDS_DPHY": {
        "prefix": "OBUFDS_DPHY",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Obufds_dphy_${2:0} : OBUFDS_DPHY",
            "    generic map (",
            "        IOSTANDARD => \"DEFAULT\" -- string",
            "    )",
            "    port map (",
            "        HSTX_I      => ${3:HSTX_I  }, -- in",
            "        HSTX_T      => ${4:HSTX_T  }, -- in",
            "        LPTX_I_N    => ${5:LPTX_I_N}, -- in",
            "        LPTX_I_P    => ${6:LPTX_I_P}, -- in",
            "        LPTX_T      => ${7:LPTX_T  }, -- in",
            "        O           => ${8:O       }, -- out",
            "        OB          => ${9:OB      } -- out",
            "    );",
            ""
        ],
        "description": "Differential output buffer with MIPI support.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OBUFDS_GTE3_ADV": {
        "prefix": "OBUFDS_GTE3_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Obufds_gte3_adv_${2:0} : OBUFDS_GTE3_ADV",
            "    generic map (",
            "        REFCLK_EN_TX_PATH : bit := '0';"
            "        REFCLK_ICNTL_TX : std_logic_vector(4 downto 0) := \"00000\"",
            "    )",
            "    port map (",
            "        I              => ${3:I           }, -- in [3:0]",
            "        CEB            => ${4:CEB         }, -- in",
            "        RXRECCLK_SEL   => ${5:RXRECCLK_SEL}, -- in [1:0]",
            "        O              => ${6:O           }, -- out",
            "        OB             => ${7:OB          } -- out",
            "    );",
            ""
        ],
        "description": "Gigabit transceiver buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OBUFDS_GTE4_ADV": {
        "prefix": "OBUFDS_GTE4_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Obufds_gte4_adv_${2:0} : OBUFDS_GTE4_ADV",
            "    generic map (",
            "        REFCLK_EN_TX_PATH   => '0',     -- bit",
            "        REFCLK_ICNTL_TX     => \"00000\"  -- [4:0]",
            "    )",
            "    port map (",
            "        I              => ${3:I           }, -- in [3:0]",
            "        CEB            => ${4:CEB         }, -- in",
            "        RXRECCLK_SEL   => ${5:RXRECCLK_SEL}, -- in [1:0]",
            "        O              => ${6:O           }, -- out",
            "        OB             => ${7:OB          } -- out",
            "    );",
            ""
        ],
        "description": "Gigabit transceiver buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OBUFDS_GTE5_ADV": {
        "prefix": "OBUFDS_GTE5_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Obufds_gte5_adv_${2:0} : OBUFDS_GTE5_ADV",
            "    generic map (",
            "        REFCLK_EN_TX_PATH   => '0', -- bit",
            "        RXRECCLK_SEL        => \"00\" -- [1:0]",
            "    )",
            "    port map (",
            "        I   => ${3:I  }, -- in [3:0]",
            "        CEB => ${4:CEB}, -- in",
            "        O   => ${5:O  }, -- out",
            "        OB  => ${6:OB } -- out",
            "    );",
            ""
        ],
        "description": "Gigabit transceiver buffer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OBUFT": {
        "prefix": "OBUFT",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Obuft_${2:0} : OBUFT",
            "    generic map (",
            "        CAPACITANCE => \"DONT_CARE\",-- string",
            "        DRIVE       => 12,          -- integer",
            "        IOSTANDARD  => \"DEFAULT\",  -- string",
            "        SLEW        => \"SLOW\"       -- string",
            "    )",
            "    port map (",
            "        I => ${3:I }, -- in",
            "        T => ${4:T }, -- in",
            "        O => ${5:O } -- out",
            "    );",
            ""
        ],
        "description": "Output buffer with tri-state.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OBUFTDS": {
        "prefix": "OBUFTDS",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Obuftds_${2:0} : OBUFTDS",
            "    generic map (",
            "        CAPACITANCE => \"DONT_CARE\",-- string",
            "        IOSTANDARD  => \"DEFAULT\",  -- string",
            "        SLEW        => \"SLOW\"       -- string",
            "    )",
            "    port map (",
            "        I   => ${3:I }, -- in",
            "        T   => ${4:T }, -- in",
            "        O   => ${5:O }, -- out",
            "        OB  => ${6:OB} -- out",
            "    );",
            ""
        ],
        "description": "Differential output buffer with tri-state.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ODDR": {
        "prefix": "ODDR",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Oddr_${2:0} : ODDR",
            "    generic map (",
            "        DDR_CLK_EDGE    => \"OPPOSITE_EDGE\",-- string",
            "        INIT            => '0',             -- bit",
            "        SRTYPE          => \"SYNC\"           -- string",
            "        IS_C_INVERTED   => '0',     -- bit",
            "        IS_D1_INVERTED  => '0',     -- bit",
            "        IS_D2_INVERTED  => '0'      -- bit",
            "    )",
            "    port map (",
            "        D1  => ${3:D1}, -- in",
            "        D2  => ${4:D2}, -- in",
            "        CE  => ${5:CE}, -- in",
            "        C   => ${6:C }, -- in",
            "        S   => ${7:S }, -- in",
            "        R   => ${8:R }, -- in",
            "        Q   => ${9:Q } -- out",
            "    );",
            ""
        ],
        "description": "Dedicated double data rate output register.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ODDRE1": {
        "prefix": "ODDRE1",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Oddre1_${2:0} : ODDRE1",
            "    generic map (",
            "        IS_C_INVERTED   => '0', -- bit",
            "        IS_D1_INVERTED  => '0', -- bit",
            "        IS_D2_INVERTED  => '0', -- bit",
            "        SRVAL           => '0', -- bit",
            "        SIM_DEVICE      => \"ULTRASCALE\"  -- string",
            "    )",
            "    port map (",
            "        D1  => ${3:D1}, -- in",
            "        D2  => ${4:D2}, -- in",
            "        C   => ${5:C }, -- in",
            "        SR  => ${6:SR}, -- in",
            "        Q   => ${7:Q } -- out",
            "    );",
            ""
        ],
        "description": "Dedicated double data rate output register.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ODELAYE2": {
        "prefix": "ODELAYE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Odlye2_${2:0} : ODELAYE2",
            "    generic map (",
            "        CINVCTRL_SEL            => \"FALSE\",    -- string",
            "        DELAY_SRC               => \"ODATAIN\",  -- string",
            "        HIGH_PERFORMANCE_MODE   => \"FALSE\",    -- string",
            "        ODELAY_TYPE             => \"FIXED\",    -- string",
            "        ODELAY_VALUE            => 0,           -- integer",
            "        PIPE_SEL                => \"FALSE\",    -- string",
            "        REFCLK_FREQUENCY        => 200.0,       -- real",
            "        SIGNAL_PATTERN          => \"DATA\",     -- string",
            "        IS_C_INVERTED           => '0',         -- bit",
            "        IS_ODATAIN_INVERTED     => '0'          -- bit",
            "    )",
            "    port map (",
            "        ODATAIN     => ${3:ODATAIN    }, -- in",
            "        CLKIN       => ${4:CLKIN      }, -- in",
            "        CE          => ${5:CE         }, -- in",
            "        INC         => ${6:INC        }, -- in",
            "        C           => ${7:C          }, -- in",
            "        CINVCTRL    => ${8:CINVCTRL   }, -- in",
            "        LD          => ${9:LD         }, -- in",
            "        LDPIPEEN    => ${10:LDPIPEEN   }, -- in",
            "        REGRST      => ${11:REGRST     }, -- in",
            "        DATAOUT     => ${12:DATAOUT    }, -- out",
            "        CNTVALUEOUT => ${13:CNTVALUEOUT}, -- out [4:0]",
            "        CNTVALUEIN  => ${14:CNTVALUEIN } -- in [4:0]",
            "    );",
            ""
        ],
        "description": "Fixed/variable output delay.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ODELAYE2_FINEDELAY": {
        "prefix": "ODELAYE2_FINEDELAY",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Odlye2_finedly_${2:0} : ODELAYE2_FINEDELAY",
            "    generic map (",
            "        CINVCTRL_SEL        => \"FALSE\",    -- string",
            "        DELAY_SRC           => \"ODATAIN\",  -- string",
            "        FINEDELAY           => \"BYPASS\",   -- string",
            "        HIGH_PERFORMANCE_MODE => \"FALSE\",  -- string",
            "        ODELAY_TYPE         => \"FIXED\",    -- string",
            "        ODELAY_VALUE        => 0,           -- integer",
            "        PIPE_SEL            => \"FALSE\",    -- string",
            "        REFCLK_FREQUENCY    => 200.0,       -- real",
            "        SIGNAL_PATTERN      => \"DATA\",     -- string",
            "        IS_C_INVERTED       => '0',         -- bit",
            "        IS_ODATAIN_INVERTED => '0'          -- bit",
            "    )",
            "    port map (",
            "        ODATAIN     => ${3:ODATAIN    }, -- in",
            "        CLKIN       => ${4:CLKIN      }, -- in",
            "        CE          => ${5:CE         }, -- in",
            "        INC         => ${6:INC        }, -- in",
            "        LD          => ${7:LD         }, -- in",
            "        LDPIPEEN    => ${8:LDPIPEEN   }, -- in",
            "        OFDLY       => ${9:OFDLY      }, -- in [2:0]",
            "        REGRST      => ${10:REGRST     }, -- in",
            "        C           => ${11:C          }, -- in",
            "        CINVCTRL    => ${12:CINVCTRL   }, -- in",
            "        CNTVALUEIN  => ${13:CNTVALUEIN }, -- in [4:0]",
            "        CNTVALUEOUT => ${14:CNTVALUEOUT}, -- out [4:0]",
            "        DATAOUT     => ${15:DATAOUT    } -- out",
            "    );",
            ""
        ],
        "description": "Fixed/variable output delay.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ODELAYE3": {
        "prefix": "ODELAYE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Odlye3_${2:0} : ODELAYE3",
            "    generic map (",
            "        CASCADE             => \"NONE\",     -- string",
            "        DELAY_FORMAT        => \"TIME\",     -- string",
            "        DELAY_TYPE          => \"FIXED\",    -- string",
            "        DELAY_VALUE         => 0,           -- integer",
            "        IS_CLK_INVERTED     => '0',         -- std_ulogic",
            "        IS_RST_INVERTED     => '0',         -- std_ulogic",
            "        REFCLK_FREQUENCY    => 300.0,       -- real",
            "        UPDATE_MODE         => \"ASYNC\",    -- string",
            "        SIM_DEVICE          => \"ULTRASCALE\",-- string",
            "        SIM_VERSION         => 2.0          -- real",
            "    )",
            "    port map (",
            "        ODATAIN     => ${3:ODATAIN    }, -- in",
            "        CASC_IN     => ${4:CASC_IN    }, -- in",
            "        CASC_RETURN => ${5:CASC_RETURN}, -- in",
            "        CLK         => ${6:CLK        }, -- in",
            "        CE          => ${7:CE         }, -- in",
            "        RST         => ${8:RST        }, -- in",
            "        INC         => ${9:INC        }, -- in",
            "        LOAD        => ${10:LOAD       }, -- in",
            "        EN_VTC      => ${11:EN_VTC     }, -- in",
            "        CNTVALUEIN  => ${12:CNTVALUEIN }, -- in [8:0]",
            "        CNTVALUEOUT => ${13:CNTVALUEOUT}, -- out [8:0]",
            "        CASC_OUT    => ${14:CASC_OUT   }, -- out",
            "        DATAOUT     => ${15:DATAOUT    } -- out",
            "    );",
            ""
        ],
        "description": "Fixed/variable output delay.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ODELAYE5": {
        "prefix": "ODELAYE5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Odlye5_${2:0} : ODELAYE5",
            "    generic map (",
            "        CASCADE         => \"FALSE\",-- string",
            "        IS_CLK_INVERTED => '0',     -- bit",
            "        IS_RST_INVERTED => '0'      -- bit",
            "    )",
            "    port map (",
            "        ODATAIN     => ${3:ODATAIN    }, -- in",
            "        CASC_IN     => ${4:CASC_IN    }, -- in",
            "        CE          => ${5:CE         }, -- in",
            "        INC         => ${6:INC        }, -- in",
            "        LOAD        => ${7:LOAD       }, -- in",
            "        RST         => ${8:RST        }, -- in",
            "        CLK         => ${9:CLK        }, -- in",
            "        CNTVALUEIN  => ${10:CNTVALUEIN }, -- in [4:0]",
            "        CNTVALUEOUT => ${11:CNTVALUEOUT}, -- out [4:0]",
            "        DATAOUT     => ${12:DATAOUT    } -- out",
            "    );",
            ""
        ],
        "description": "Fixed/variable output delay.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OSERDES": {
        "prefix": "OSERDES",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Osrds_${2:0} : OSERDES",
            "    generic map (",
            "        DATA_RATE_OQ    => \"DDR\",   -- string",
            "        DATA_RATE_TQ    => \"DDR\",   -- string",
            "        DATA_WIDTH      => 4,        -- integer",
            "        INIT_OQ         => '0',      -- bit",
            "        INIT_TQ         => '0',      -- bit",
            "        SERDES_MODE     => \"MASTER\",-- string",
            "        SRVAL_OQ        => '0',      -- bit",
            "        SRVAL_TQ        => '0',      -- bit",
            "        TRISTATE_WIDTH  => 4         -- integer",
            "    )",
            "    port map (",
            "        SHIFTIN1    => ${3:SHIFTIN1 }, -- in",
            "        SHIFTIN2    => ${4:SHIFTIN2 }, -- in",
            "        D1          => ${5:D1       }, -- in",
            "        D2          => ${6:D2       }, -- in",
            "        D3          => ${7:D3       }, -- in",
            "        D4          => ${8:D4       }, -- in",
            "        D5          => ${9:D5       }, -- in",
            "        D6          => ${10:D6       }, -- in",
            "        OCE         => ${11:OCE      }, -- in",
            "        REV         => ${12:REV      }, -- in",
            "        SR          => ${13:SR       }, -- in",
            "        CLK         => ${14:CLK      }, -- in",
            "        CLKDIV      => ${15:CLKDIV   }, -- in",
            "        T1          => ${16:T1       }, -- in",
            "        T2          => ${17:T2       }, -- in",
            "        T3          => ${18:T3       }, -- in",
            "        T4          => ${19:T4       }, -- in",
            "        TCE         => ${20:TCE      }, -- in",
            "        SHIFTOUT1   => ${21:SHIFTOUT1}, -- out;"
            "        SHIFTOUT2   => ${22:SHIFTOUT2}, -- out;"
            "        OQ          => ${23:OQ       }, -- out;"
            "        TQ          => ${24:TQ       } -- out;"
            "    );",
            ""
        ],
        "description": "Output serializer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OSERDESE2": {
        "prefix": "OSERDESE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Osrdse2_${2:0} : OSERDESE2",
            "    generic map (",
            "        SERDES_MODE     => \"MASTER\",-- string",
            "        DATA_RATE_TQ    => \"DDR\",  -- string",
            "        TRISTATE_WIDTH  => 4,        -- integer",
            "        INIT_TQ         => '0',     -- bit",
            "        SRVAL_TQ        => '0',     -- bit",
            "        DATA_RATE_OQ    => \"DDR\",  -- string",
            "        DATA_WIDTH      => 4,       -- integer",
            "        INIT_OQ         => '0',     -- bit",
            "        SRVAL_OQ        => '0',     -- bit",
            "        TBYTE_CTL       => \"FALSE\",-- string",
            "        TBYTE_SRC       => \"FALSE\",-- string",
            "        IS_CLKDIV_INVERTED  => '0', -- bit",
            "        IS_CLK_INVERTED     => '0', -- bit",
            "        IS_D1_INVERTED      => '0', -- bit",
            "        IS_D2_INVERTED      => '0', -- bit",
            "        IS_D3_INVERTED      => '0', -- bit",
            "        IS_D4_INVERTED      => '0', -- bit",
            "        IS_D5_INVERTED      => '0', -- bit",
            "        IS_D6_INVERTED      => '0', -- bit",
            "        IS_D7_INVERTED      => '0', -- bit",
            "        IS_D8_INVERTED      => '0', -- bit",
            "        IS_T1_INVERTED      => '0', -- bit",
            "        IS_T2_INVERTED      => '0', -- bit",
            "        IS_T3_INVERTED      => '0', -- bit",
            "        IS_T4_INVERTED      => '0', -- bit",
            "    )",
            "    port map (",
            "        SHIFTOUT1   => ${3:SHIFTOUT1}, -- out",
            "        SHIFTOUT2   => ${4:SHIFTOUT2}, -- out",
            "        D1          => ${5:D1       }, -- in",
            "        D2          => ${6:D2       }, -- in",
            "        D3          => ${7:D3       }, -- in",
            "        D4          => ${8:D4       }, -- in",
            "        D5          => ${9:D5       }, -- in",
            "        D6          => ${10:D6       }, -- in",
            "        D7          => ${11:D7       }, -- in",
            "        D8          => ${12:D8       }, -- in",
            "        SHIFTIN1    => ${13:SHIFTIN1 }, -- in",
            "        SHIFTIN2    => ${14:SHIFTIN2 }, -- in",
            "        OCE         => ${15:OCE      }, -- in",
            "        RST         => ${16:RST      }, -- in",
            "        CLK         => ${17:CLK      }, -- in",
            "        CLKDIV      => ${18:CLKDIV   }, -- in",
            "        OFB         => ${19:OFB      }, -- out",
            "        OQ          => ${20:OQ       }, -- out",
            "        TBYTEOUT    => ${21:TBYTEOUT }, -- out",
            "        T1          => ${22:T1       }, -- in",
            "        T2          => ${23:T2       }, -- in",
            "        T3          => ${24:T3       }, -- in",
            "        T4          => ${25:T4       }, -- in",
            "        TBYTEIN     => ${26:TBYTEIN  }, -- in",
            "        TCE         => ${27:TCE      }, -- in",
            "        TFB         => ${28:TFB      }, -- out",
            "        TQ          => ${29:TQ       } -- out",
            "    );",
            ""
        ],
        "description": "Output serializer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OSERDESE3": {
        "prefix": "OSERDESE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Osrdse3_${2:0} : OSERDESE3",
            "    generic map (",
            "        DATA_WIDTH          => 8, -- 8",
            "        INIT                => '0', -- std_ulogic",
            "        IS_CLKDIV_INVERTED  => '0', -- std_ulogic",
            "        IS_CLK_INVERTED     => '0', -- std_ulogic",
            "        IS_RST_INVERTED     => '0', -- std_ulogic",
            "        ODDR_MODE           => \"FASLE\",-- string",
            "        OSERDES_D_BYPASS    => \"FASLE\",-- string",
            "        OSERDES_T_BYPASS    => \"FASLE\",-- string",
            "        SIM_DEVICE          => \"ULTRASCALE\",-- string",
            "        SIM_VERSION         => 2.0  -- real",
            "    )",
            "    port map (",
            "        D       => ${3:D     }, -- in [7:0]",
            "        CLK     => ${4:CLK   }, -- in",
            "        CLKDIV  => ${5:CLKDIV}, -- in",
            "        RST     => ${6:RST   }, -- in",
            "        T       => ${7:T     }, -- in",
            "        T_OUT   => ${8:T_OUT }, -- out",
            "        OQ      => ${9:OQ    } -- out",
            "    );",
            ""
        ],
        "description": "Output serializer.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "OUT_FIFO": {
        "prefix": "OUT_FIFO",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Out_fifo_${2:0} : OUT_FIFO",
            "    generic map (",
            "        SYNCHRONOUS_MODE    => \"FALSE\",            -- string",
            "        ARRAY_MODE          => \"ARRAY_MODE_8_X_4\", -- string",
            "        ALMOST_EMPTY_VALUE  => 1,                   -- integer",
            "        ALMOST_FULL_VALUE   => 1,                   -- integer",
            "        OUTPUT_DISABLE      => \"FALSE\"              -- string",
            "    )",
            "    port map (",
            "        D0          => ${3:D0         }, -- in [7:0}",
            "        D1          => ${4:D1         }, -- in [7:0}",
            "        D2          => ${5:D2         }, -- in [7:0}",
            "        D3          => ${6:D3         }, -- in [7:0}",
            "        D4          => ${7:D4         }, -- in [7:0}",
            "        D5          => ${8:D5         }, -- in [7:0}",
            "        D6          => ${9:D6         }, -- in [7:0}",
            "        D7          => ${10:D7         }, -- in [7:0}",
            "        D8          => ${11:D8         }, -- in [7:0}",
            "        D9          => ${12:D9         }, -- in [7:0}",
            "        WRCLK       => ${13:WRCLK      }, -- in",
            "        WREN        => ${14:WREN       }, -- in",
            "        RESET       => ${15:RESET      }, -- in",
            "        RDCLK       => ${16:RDCLK      }, -- in",
            "        RDEN        => ${17:RDEN       }, -- in",
            "        Q0          => ${18:Q0         }, -- out [3:0]",
            "        Q1          => ${19:Q1         }, -- out [3:0]",
            "        Q2          => ${20:Q2         }, -- out [3:0]",
            "        Q3          => ${21:Q3         }, -- out [3:0]",
            "        Q4          => ${22:Q4         }, -- out [3:0]",
            "        Q5          => ${23:Q5         }, -- out [7:0]",
            "        Q6          => ${24:Q6         }, -- out [7:0]",
            "        Q7          => ${25:Q7         }, -- out [3:0]",
            "        Q8          => ${26:Q8         }, -- out [3:0]",
            "        Q9          => ${27:Q9         }, -- out [3:0]",
            "        ALMOSTEMPTY => ${28:ALMOSTEMPTY}, -- out",
            "        ALMOSTFULL  => ${29:ALMOSTFULL }, -- out",
            "        EMPTY       => ${30:EMPTY      }, -- out",
            "        FULL        => ${31:FULL       } -- out",
            "    );",
            ""
        ],
        "description": "7-Series dedicted output FIFO.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "PLLE2_ADV": {
        "prefix": "PLLE2_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Plle2_adv_${2:0} : PLLE2_ADV",
            "    generic map(",
            "        BANDWIDTH           => \"OPTIMIZED\",-- string",
            "        CLKFBOUT_MULT       => 5,           -- integer",
            "        CLKFBOUT_PHASE      => 0.0,         -- real",
            "        CLKIN1_PERIOD       => 0.0,         -- real",
            "        CLKIN2_PERIOD       => 0.0,         -- real",
            "        CLKOUT0_DIVIDE      => 1,           -- integer",
            "        CLKOUT0_DUTY_CYCLE  => 0.5,         -- real",
            "        CLKOUT0_PHASE       => 0.0,         -- real",
            "        CLKOUT1_DIVIDE      => 1,           -- integer",
            "        CLKOUT1_DUTY_CYCLE  => 0.5,         -- real",
            "        CLKOUT1_PHASE       => 0.0,         -- real",
            "        CLKOUT2_DIVIDE      => 1,           -- integer",
            "        CLKOUT2_DUTY_CYCLE  => 0.5,         -- real",
            "        CLKOUT2_PHASE       => 0.0,         -- real",
            "        CLKOUT3_DIVIDE      => 1,           -- integer",
            "        CLKOUT3_DUTY_CYCLE  => 0.5,         -- real",
            "        CLKOUT3_PHASE       => 0.0,         -- real",
            "        CLKOUT4_DIVIDE      => 1,           -- integer",
            "        CLKOUT4_DUTY_CYCLE  => 0.5,         -- real",
            "        CLKOUT4_PHASE       => 0.0,         -- real",
            "        CLKOUT5_DIVIDE      => 1,           -- integer",
            "        CLKOUT5_DUTY_CYCLE  => 0.5,         -- real",
            "        CLKOUT5_PHASE       => 0.0,         -- real",
            "        COMPENSATION        => \"ZHOLD\",    -- string",
            "        DIVCLK_DIVIDE       => 1,           -- integer",
            "        REF_JITTER1         => 0.0,         -- real",
            "        REF_JITTER2         => 0.0,         -- real",
            "        STARTUP_WAIT        => \"FALSE\",    -- string",
            "        IS_CLKINSEL_INVERTED    => '0',     -- bit",
            "        IS_PWRDWN_INVERTED      => '0',     -- bit",
            "        IS_RST_INVERTED         => '0'      -- bit",
            "    )",
            "    port map (",
            "        CLKIN1      => ${3:CLKIN1  }, -- in",
            "        CLKIN2      => ${4:CLKIN2  }, -- in",
            "        CLKINSEL    => ${5:CLKINSEL}, -- in",
            "        CLKFBIN     => ${6:CLKFBIN }, -- in",
            "        CLKFBOUT    => ${7:CLKFBOUT}, -- out",
            "        CLKOUT0     => ${8:CLKOUT0 }, -- out",
            "        CLKOUT1     => ${9:CLKOUT1 }, -- out",
            "        CLKOUT2     => ${10:CLKOUT2 }, -- out",
            "        CLKOUT3     => ${11:CLKOUT3 }, -- out",
            "        CLKOUT4     => ${12:CLKOUT4 }, -- out",
            "        CLKOUT5     => ${13:CLKOUT5 }, -- out",
            "        RST         => ${14:RST     }, -- in",
            "        PWRDWN      => ${15:PWRDWN  }, -- in",
            "        LOCKED      => ${16:LOCKED  }, -- out",
            "        DI          => ${17:DI      }, -- in [15:0]",
            "        DADDR       => ${18:DADDR   }, -- in [6:0]",
            "        DEN         => ${19:DEN     }, -- in",
            "        DWE         => ${20:DWE     }, -- in",
            "        DCLK        => ${21:DCLK    }, -- in",
            "        DO          => ${22:DO      }, -- out [15:0]",
            "        DRDY        => ${23:DRDY    } -- out",
            "    );",
            ""
        ],
        "description": "Phase Locked Loop.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "PLLE3_ADV": {
        "prefix": "PLLE3_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Plle3_adv_${2:0} : PLLE3_ADV",
            "    generic map (",
            "        CLKFBOUT_MULT       => 5,       -- integer",
            "        CLKFBOUT_PHASE      => 0.000,    -- real",
            "        CLKIN_PERIOD        => 0.000,    -- real",
            "        CLKOUT0_DIVIDE      => 1,        -- integer",
            "        CLKOUT0_DUTY_CYCLE  => 0.500,    -- real",
            "        CLKOUT0_PHASE       => 0.000,    -- real",
            "        CLKOUT1_DIVIDE      => 1,        -- integer",
            "        CLKOUT1_DUTY_CYCLE  => 0.500,    -- real",
            "        CLKOUT1_PHASE       => 0.000,    -- real",
            "        CLKOUTPHY_MODE      => \"VCO_2X\",-- string",
            "        COMPENSATION        => \"AUTO\",  -- string",
            "        DIVCLK_DIVIDE       => 1,        -- integer",
            "        IS_CLKFBIN_INVERTED => '0',      -- std_ulogic",
            "        IS_CLKIN_INVERTED   => '0',      -- std_ulogic",
            "        IS_PWRDWN_INVERTED  => '0',      -- std_ulogic",
            "        IS_RST_INVERTED     => '0',      -- std_ulogic",
            "        REF_JITTER          => 0.010,    -- real",
            "        STARTUP_WAIT        => \"FALSE\"  -- string",
            "    )",
            "    port map (",
            "        CLKIN       => ${3:CLKIN      }, -- in",
            "        CLKFBIN     => ${4:CLKFBIN    }, -- in",
            "        RST         => ${5:RST        }, -- in",
            "        PWRDWN      => ${6:PWRDWN     }, -- in",
            "        CLKOUTPHYEN => ${7:CLKOUTPHYEN}, -- in",
            "        CLKFBOUT    => ${8:CLKFBOUT   }, -- out",
            "        CLKOUT0     => ${9:CLKOUT0    }, -- out",
            "        CLKOUT0B    => ${10:CLKOUT0B   }, -- out",
            "        CLKOUT1     => ${11:CLKOUT1    }, -- out",
            "        CLKOUT1B    => ${12:CLKOUT1B   }, -- out",
            "        CLKOUTPHY   => ${13:CLKOUTPHY  }, -- out",
            "        DCLK        => ${14:DCLK       }, -- in",
            "        DI          => ${15:DI         }, -- in [15:0]",
            "        DADDR       => ${16:DADDR      }, -- in [6:0]",
            "        DEN         => ${17:DEN        }, -- in",
            "        DWE         => ${18:DWE        }, -- in",
            "        DO          => ${19:DO         }, -- out [15:0]",
            "        DRDY        => ${20:DRDY       }, -- out",
            "        LOCKED      => ${21:LOCKED     } -- out",
            "    );",
            ""
        ],
        "description": "Phase Locked Loop.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "PLLE4_ADV": {
        "prefix": "PLLE4_ADV",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Plle4_adv_${2:0} :PLLE4_ADV",
            "    generic map (",
            "        CLKFBOUT_MULT       => 5,       -- integer",
            "        CLKFBOUT_PHASE      => 0.000,    -- real",
            "        CLKIN_PERIOD        => 0.000,    -- real",
            "        CLKOUT0_DIVIDE      => 1,        -- integer",
            "        CLKOUT0_DUTY_CYCLE  => 0.500,    -- real",
            "        CLKOUT0_PHASE       => 0.000,    -- real",
            "        CLKOUT1_DIVIDE      => 1,        -- integer",
            "        CLKOUT1_DUTY_CYCLE  => 0.500,    -- real",
            "        CLKOUT1_PHASE       => 0.000,    -- real",
            "        CLKOUTPHY_MODE      => \"VCO_2X\",-- string",
            "        COMPENSATION        => \"AUTO\",  -- string",
            "        DIVCLK_DIVIDE       => 1,        -- integer",
            "        IS_CLKFBIN_INVERTED => '0',      -- std_ulogic",
            "        IS_CLKIN_INVERTED   => '0',      -- std_ulogic",
            "        IS_PWRDWN_INVERTED  => '0',      -- std_ulogic",
            "        IS_RST_INVERTED     => '0',      -- std_ulogic",
            "        REF_JITTER          => 0.010,    -- real",
            "        STARTUP_WAIT        => \"FALSE\"  -- string",
            "    )",
            "    port map (",
            "        CLKIN       => ${3:CLKIN      }, -- in",
            "        CLKFBIN     => ${4:CLKFBIN    }, -- in",
            "        RST         => ${5:RST        }, -- in",
            "        PWRDWN      => ${6:PWRDWN     }, -- in",
            "        CLKOUTPHYEN => ${7:CLKOUTPHYEN}, -- in",
            "        CLKFBOUT    => ${8:CLKFBOUT   }, -- out",
            "        CLKOUT0     => ${9:CLKOUT0    }, -- out",
            "        CLKOUT0B    => ${10:CLKOUT0B   }, -- out",
            "        CLKOUT1     => ${11:CLKOUT1    }, -- out",
            "        CLKOUT1B    => ${12:CLKOUT1B   }, -- out",
            "        CLKOUTPHY   => ${13:CLKOUTPHY  }, -- out",
            "        DCLK        => ${14:DCLK       }, -- in",
            "        DI          => ${15:DI         }, -- in [15:0]",
            "        DADDR       => ${16:DADDR      }, -- in [6:0]",
            "        DEN         => ${17:DEN        }, -- in",
            "        DWE         => ${18:DWE        }, -- in",
            "        DO          => ${19:DO         }, -- out [15:0]",
            "        DRDY        => ${20:DRDY       }, -- out",
            "        LOCKED      => ${21:LOCKED     } -- out",
            "    );",
            ""
        ],
        "description": "Phase Locked Loop.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAM256X1D": {
        "prefix": "RAM256X1D",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ram256x1d_${2:0} : RAM256X1D",
            "    generic map (",
            "        INIT => ${3:X\"0000000000000000000000000000000000000000000000000000000000000000\"},-- [255:0]",
            "        IS_WCLK_INVERTED => '0' -- bit",
            "    )",
            "    port map (",
            "        D       => ${4:D   }, -- in",
            "        A       => ${5:A   }, -- in [7:0]",
            "        WE      => ${6:WE  }, -- in",
            "        DPRA    => ${7:DPRA}, -- in [7:0]",
            "        WCLK    => ${8:WCLK}, -- in",
            "        DPO     => ${9:DPO }, -- out",
            "        SPO     => ${10:SPO }, -- out",
            "    );",
            ""
        ],
        "description": "1-bit, 256 deep dual port select RAM.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAM32M": {
        "prefix": "RAM32M",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ram32m_${2:0} : RAM32M",
            "    generic map (",
            "        INIT_A => ${3:X\"0000000000000000\"}, -- [63:0]",
            "        INIT_B => ${4:X\"0000000000000000\"}, -- [63:0]",
            "        INIT_C => ${5:X\"0000000000000000\"}, -- [63:0]",
            "        INIT_D => ${6:X\"0000000000000000\"}, -- [63:0]",
            "        IS_WCLK_INVERTED => '0'         -- bit",
            "    )",
            "    port map (",
            "        DIA     => ${7:DIA  }, -- in [1:0]",
            "        DIB     => ${8:DIB  }, -- in [1:0]",
            "        DIC     => ${9:DIC  }, -- in [1:0]",
            "        DID     => ${10:DID  }, -- in [1:0]",
            "        ADDRA   => ${11:ADDRA}, -- in [4:0]",
            "        ADDRB   => ${12:ADDRB}, -- in [4:0]",
            "        ADDRC   => ${13:ADDRC}, -- in [4:0]",
            "        ADDRD   => ${14:ADDRD}, -- in [4:0]",
            "        WE      => ${15:WE   }, -- in",
            "        WCLK    => ${16:WCLK }, -- in",
            "        DOA     => ${17:DOA  }, -- out [1:0]",
            "        DOB     => ${18:DOB  }, -- out [1:0]",
            "        DOC     => ${19:DOC  }, -- out [1:0]",
            "        DOD     => ${20:DOD  } -- out [1:0]",
            "    );",
            ""
        ],
        "description": "8-bit, 32 deeep select RAM.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAM32X1D": {
        "prefix": "RAM32X1D",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ram32x1d_${2:0} : RAM32X1D",
            "    generic map (",
            "        INIT => ${3:X\"00000000\"},   -- [31:0]",
            "        IS_WCLK_INVERTED => '0' -- bit",
            "    )",
            "    port map (",
            "        D       => ${4:D    }, -- in",
            "        A0      => ${5:A0   }, -- in",
            "        A1      => ${6:A1   }, -- in",
            "        A2      => ${7:A2   }, -- in",
            "        A3      => ${8:A3   }, -- in",
            "        A4      => ${9:A4   }, -- in",
            "        DPRA0   => ${10:DPRA0}, -- in",
            "        DPRA1   => ${11:DPRA1}, -- in",
            "        DPRA2   => ${12:DPRA2}, -- in",
            "        DPRA3   => ${13:DPRA3}, -- in",
            "        DPRA4   => ${14:DPRA4}, -- in",
            "        WE      => ${15:WE   }, -- in",
            "        WCLK    => ${16:WCLK }, -- in",
            "        DPO     => ${17:DPO  }, -- out",
            "        SPO     => ${18:SPO  } -- out",
            "    );",
            ""
        ],
        "description": "1-bit, 32 deep dual port select RAM.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAM64M": {
        "prefix": "RAM64M",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ram64m_${2:0} : RAM64M",
            "    generic map (",
            "        INIT_A => ${3:X\"0000000000000000\"}, -- [63:0]",
            "        INIT_B => ${4:X\"0000000000000000\"}, -- [63:0]",
            "        INIT_C => ${5:X\"0000000000000000\"}, -- [63:0]",
            "        INIT_D => ${6:X\"0000000000000000\"}, -- [63:0]",
            "        IS_WCLK_INVERTED => '0'         -- bit",
            "    )",
            "    port map (",
            "        DIA     => ${7:DIA  }, -- in",
            "        DIB     => ${8:DIB  }, -- in",
            "        DIC     => ${9:DIC  }, -- in",
            "        DID     => ${10:DID  }, -- in",
            "        ADDRA   => ${11:ADDRA}, -- in [5:0]",
            "        ADDRB   => ${12:ADDRB}, -- in [5:0]",
            "        ADDRC   => ${13:ADDRC}, -- in [5:0]",
            "        ADDRD   => ${14:ADDRD}, -- in [5:0]",
            "        WE      => ${15:WE   }, -- in",
            "        WCLK    => ${16:WCLK }, -- in",
            "        DOA     => ${17:DOA  }, -- out",
            "        DOB     => ${18:DOB  }, -- out",
            "        DOC     => ${19:DOC  }, -- out",
            "        DOD     => ${20:DOD  } -- out",
            "    );",
            ""
        ],
        "description": "4-bit, 64 deep multi-port select RAM.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAM64X1D": {
        "prefix": "RAM64X1D",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ram64x1d_${2:0} : RAM64X1D",
            "    generic map (",
            "        INIT => ${3:X\"0000000000000000\"},   -- [63:0]",
            "        IS_WCLK_INVERTED => '0'         -- bit",
            "    )",
            "    port map (",
            "        D       => ${4:D    }, -- in",
            "        A0      => ${5:A0   }, -- in",
            "        A1      => ${6:A1   }, -- in",
            "        A2      => ${7:A2   }, -- in",
            "        A3      => ${8:A3   }, -- in",
            "        A4      => ${9:A4   }, -- in",
            "        A5      => ${10:A5   }, -- in",
            "        DPRA0   => ${11:DPRA0}, -- in",
            "        DPRA1   => ${12:DPRA1}, -- in",
            "        DPRA2   => ${13:DPRA2}, -- in",
            "        DPRA3   => ${14:DPRA3}, -- in",
            "        DPRA4   => ${15:DPRA4}, -- in",
            "        DPRA5   => ${16:DPRA5}, -- in",
            "        WE      => ${17:WE   }, -- in",
            "        WCLK    => ${18:WCLK }, -- in",
            "        DPO     => ${19:DPO  }, -- out",
            "        SPO     => ${20:SPO  } -- out",
            "    );",
            ""
        ],
        "description": "Single bit, 64 deep dual port select RAM.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAMB36E1": {
        "prefix": "RAMB36E1",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_ramb36e1_${2:0} : RAMB36E1",
            "    generic map (",
            "        INIT_FILE           => \"NONE\",         -- string",
            "        RAM_MODE            => \"TDP\",          -- string",
            "        WRITE_MODE_A        => \"WRITE_FIRST\",  -- string",
            "        WRITE_MODE_B        => \"WRITE_FIRST\",  -- string",
            "        READ_WIDTH_A        => 0,               -- integer",
            "        READ_WIDTH_B        => 0,               -- integer",
            "        WRITE_WIDTH_A       => 0,               -- integer",
            "        WRITE_WIDTH_B       => 0,               -- integer",
            "        RAM_EXTENSION_A     => \"NONE\",         -- string",
            "        RAM_EXTENSION_B     => \"NONE\",         -- string",
            "        DOA_REG             => 0,               -- integer",
            "        DOB_REG             => 0,               -- integer",
            "        INIT_A              => ${3:X\"000000000\"},   -- bit_vector",
            "        INIT_B              => ${4:X\"000000000\"},   -- bit_vector",
            "        RSTREG_PRIORITY_A   => \"RSTREG\",       -- string",
            "        RSTREG_PRIORITY_B   => \"RSTREG\",       -- string",
            "        SRVAL_A             => ${5:X\"000000000\"},   -- bit_vector",
            "        SRVAL_B             => ${6:X\"000000000\"},   -- bit_vector",
            "        EN_ECC_READ         => FALSE,           -- boolean",
            "        EN_ECC_WRITE        => FALSE,           -- boolean",
            "        RDADDR_COLLISION_HWCONFIG => \"DELAYED_WRITE\",-- string",
            "        SIM_COLLISION_CHECK => \"ALL\",          -- string",
            "        SIM_DEVICE          => \"VIRTEX6\",      -- string",
            "        IS_CLKARDCLK_INVERTED       => '0',     -- bit",
            "        IS_CLKBWRCLK_INVERTED       => '0',     -- bit",
            "        IS_ENARDEN_INVERTED         => '0',     -- bit",
            "        IS_ENBWREN_INVERTED         => '0',     -- bit",
            "        IS_RSTRAMARSTRAM_INVERTED   => '0',     -- bit",
            "        IS_RSTRAMB_INVERTED         => '0',     -- bit",
            "        IS_RSTREGARSTREG_INVERTED   => '0',     -- bit",
            "        IS_RSTREGB_INVERTED         => '0'     -- bit",
            "    )",
            "    port map (",
            "        CASCADEINA          => ${7:CASCADEINA   }, -- in",
            "        DIPADIP             => ${8:DIPADIP      }, -- in [3:0]",
            "        DIADI               => ${9:DIADI        }, -- in [31:0]",
            "        DOPADOP             => ${10:DOPADOP      }, -- out [3:0]",
            "        DOADO               => ${11:DOADO        }, -- out [31:0]",
            "        CASCADEOUTA         => ${12:CASCADEOUTA  }, -- out",
            "        ADDRARDADDR         => ${13:ADDRARDADDR  }, -- in [15:0]",
            "        ENARDEN             => ${14:ENARDEN      }, -- in",
            "        REGCEAREGCE         => ${15:REGCEAREGCE  }, -- in",
            "        WEA                 => ${16:WEA          }, -- in [3:0]",
            "        CLKARDCLK           => ${17:CLKARDCLK    }, -- in",
            "        RSTREGARSTREG       => ${18:RSTREGARSTREG}, -- in",
            "        RSTRAMARSTRAM       => ${19:RSTRAMARSTRAM}, -- in",
            "        CASCADEINB          => ${20:CASCADEINB   }, -- in",
            "        DIPBDIP             => ${21:DIPBDIP      }, -- in [3:0]",
            "        DIBDI               => ${22:DIBDI        }, -- in [31:0]",
            "        DOPBDOP             => ${23:DOPBDOP      }, -- out [3:0]",
            "        DOBDO               => ${24:DOBDO        }, -- out [31:0]",
            "        CASCADEOUTB         => ${25:CASCADEOUTB  }, -- out",
            "        ADDRBWRADDR         => ${26:ADDRBWRADDR  }, -- in [15:0]",
            "        ENBWREN             => ${27:ENBWREN      }, -- in",
            "        REGCEB              => ${28:REGCEB       }, -- in",
            "        WEBWE               => ${29:WEBWE        }, -- in [7:0]",
            "        CLKBWRCLK           => ${30:CLKBWRCLK    }, -- in",
            "        RSTREGB             => ${31:RSTREGB      }, -- in",
            "        RSTRAMB             => ${32:RSTRAMB      }, -- in",
            "        INJECTDBITERR       => ${33:INJECTDBITERR}, -- in",
            "        INJECTSBITERR       => ${34:INJECTSBITERR}, -- in",
            "        DBITERR             => ${35:DBITERR      }, -- out",
            "        ECCPARITY           => ${36:ECCPARITY    }, -- out [7:0]",
            "        RDADDRECC           => ${37:RDADDRECC    }, -- out [8:0]",
            "        SBITERR             => ${38:SBITERR      }  -- out",
            "    );",
            ""
        ],
        "description": "36K-bit Configurable Synchronous Block RAM",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAMB36E2": {
        "prefix": "RAMB36E2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ramb36e2_${2:0} : RAMB36E2",
            "    generic map [",
            "        INIT_FILE           => \"NONE\",         -- string",
            "        CLOCK_DOMAINS       => \"INDEPENDENT\",  -- string",
            "        WRITE_MODE_A        => \"NO_CHANGE\",    -- string",
            "        WRITE_MODE_B        => \"NO_CHANGE\",    -- string",
            "        READ_WIDTH_A        => 0,               -- integer",
            "        READ_WIDTH_B        => 0,               -- integer",
            "        WRITE_WIDTH_A       => 0,               -- integer",
            "        WRITE_WIDTH_B       => 0,               -- integer",
            "        CASCADE_ORDER_A     => \"NONE\",         -- string",
            "        CASCADE_ORDER_B     => \"NONE\",         -- string",
            "        ENADDRENA           => \"FALSE\",        -- string",
            "        ENADDRENB           => \"FALSE\",        -- string",
            "        RDADDRCHANGEA       => \"FALSE\",        -- string",
            "        RDADDRCHANGEB       => \"FALSE\",        -- string",
            "        DOA_REG             => 1,               -- integer",
            "        DOB_REG             => 1,               -- integer",
            "        INIT_A              => ${3:X\"000000000\"},   -- [35:0]",
            "        INIT_B              => ${4:X\"000000000\"},   -- [35:0]",
            "        RSTREG_PRIORITY_A   => \"RSTREG\",       -- string",
            "        RSTREG_PRIORITY_B   => \"RSTREG\",       -- string",
            "        SRVAL_A             => ${5:X\"000000000\"},   -- [35:0]",
            "        SRVAL_B             => ${6:X\"000000000\"},   -- [35:0]",
            "        EN_ECC_PIPE         => \"FALSE\",        -- string",
            "        EN_ECC_READ         => \"FALSE\",        -- string",
            "        EN_ECC_WRITE        => \"FALSE\",        -- string",
            "        SLEEP_ASYNC         => \"FALSE\",        -- string",
            "        SIM_COLLISION_CHECK => \"ALL\",          -- string",
            "        IS_CLKARDCLK_INVERTED       => '0',     -- bit",
            "        IS_CLKBWRCLK_INVERTED       => '0',     -- bit",
            "        IS_ENARDEN_INVERTED         => '0',     -- bit",
            "        IS_ENBWREN_INVERTED         => '0',     -- bit",
            "        IS_RSTRAMARSTRAM_INVERTED   => '0',     -- bit",
            "        IS_RSTRAMB_INVERTED         => '0',     -- bit",
            "        IS_RSTREGARSTREG_INVERTED   => '0',     -- bit",
            "        IS_RSTREGB_INVERTED         => '0'      -- bit",
            "    )",
            "    port map [",
            "        ADDRARDADDR     => ${7:ADDRARDADDR    }, -- in [14:0],",
            "        ADDRBWRADDR     => ${8:ADDRBWRADDR    }, -- in [14:0],",
            "        ADDRENA         => ${9:ADDRENA        }, -- in",
            "        ADDRENB         => ${10:ADDRENB        }, -- in",
            "        CASDIMUXA       => ${11:CASDIMUXA      }, -- in",
            "        CASDIMUXB       => ${12:CASDIMUXB      }, -- in",
            "        CASDINA         => ${13:CASDINA        }, -- in [31:0],",
            "        CASDINB         => ${14:CASDINB        }, -- in [31:0],",
            "        CASDINPA        => ${15:CASDINPA       }, -- in [3:0],",
            "        CASDINPB        => ${16:CASDINPB       }, -- in [3:0],",
            "        CASDOMUXA       => ${17:CASDOMUXA      }, -- in",
            "        CASDOMUXB       => ${18:CASDOMUXB      }, -- in",
            "        CASDOMUXEN_A    => ${19:CASDOMUXEN_A   }, -- in",
            "        CASDOMUXEN_B    => ${20:CASDOMUXEN_B   }, -- in",
            "        CASINDBITERR    => ${21:CASINDBITERR   }, -- in",
            "        CASINSBITERR    => ${22:CASINSBITERR   }, -- in",
            "        CASOREGIMUXA    => ${23:CASOREGIMUXA   }, -- in",
            "        CASOREGIMUXB    => ${24:CASOREGIMUXB   }, -- in",
            "        CASOREGIMUXEN_A => ${25:CASOREGIMUXEN_A}, -- in",
            "        CASOREGIMUXEN_B => ${26:CASOREGIMUXEN_B}, -- in",
            "        CLKARDCLK       => ${27:CLKARDCLK      }, -- in",
            "        CLKBWRCLK       => ${28:CLKBWRCLK      }, -- in",
            "        DINADIN         => ${29:DINADIN        }, -- in [31:0],",
            "        DINBDIN         => ${30:DINBDIN        }, -- in [31:0],",
            "        DINPADINP       => ${31:DINPADINP      }, -- in [3:0],",
            "        DINPBDINP       => ${32:DINPBDINP      }, -- in [3:0],",
            "        ECCPIPECE       => ${33:ECCPIPECE      }, -- in",
            "        ENARDEN         => ${34:ENARDEN        }, -- in",
            "        ENBWREN         => ${35:ENBWREN        }, -- in",
            "        INJECTDBITERR   => ${36:INJECTDBITERR  }, -- in",
            "        INJECTSBITERR   => ${37:INJECTSBITERR  }, -- in",
            "        REGCEAREGCE     => ${38:REGCEAREGCE    }, -- in",
            "        REGCEB          => ${39:REGCEB         }, -- in",
            "        RSTRAMARSTRAM   => ${40:RSTRAMARSTRAM  }, -- in",
            "        RSTRAMB         => ${41:RSTRAMB        }, -- in",
            "        RSTREGARSTREG   => ${42:RSTREGARSTREG  }, -- in",
            "        RSTREGB         => ${43:RSTREGB        }, -- in",
            "        SLEEP           => ${44:SLEEP          }, -- in",
            "        WEA             => ${45:WEA            }, -- in [3:0],",
            "        WEBWE           => ${46:WEBWE          }, -- in [7:0]",
            "        CASDOUTA        => ${47:CASDOUTA       }, -- out [31:0],",
            "        CASDOUTB        => ${48:CASDOUTB       }, -- out [31:0],",
            "        CASDOUTPA       => ${49:CASDOUTPA      }, -- out [3:0],",
            "        CASDOUTPB       => ${50:CASDOUTPB      }, -- out [3:0],",
            "        CASOUTDBITERR   => ${51:CASOUTDBITERR  }, -- out",
            "        CASOUTSBITERR   => ${52:CASOUTSBITERR  }, -- out",
            "        DBITERR         => ${53:DBITERR        }, -- out",
            "        DOUTADOUT       => ${54:DOUTADOUT      }, -- out [31:0],",
            "        DOUTBDOUT       => ${55:DOUTBDOUT      }, -- out [31:0],",
            "        DOUTPADOUTP     => ${56:DOUTPADOUTP    }, -- out [3:0],",
            "        DOUTPBDOUTP     => ${57:DOUTPBDOUTP    }, -- out [3:0],",
            "        ECCPARITY       => ${58:ECCPARITY      }, -- out [7:0],",
            "        RDADDRECC       => ${59:RDADDRECC      }, -- out [8:0],",
            "        SBITERR         => ${60:SBITERR        } -- out",
            "    );",
            ""
        ],
        "description": "36K-bit Configurable Synchronous Block RAM",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAMB36E5": {
        "prefix": "RAMB36E5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ramb36e5_${2:0} : RAMB36E5",
            "    generic map (",
            "        INIT_FILE           => \"NONE\",         -- string",
            "        CLOCK_DOMAINS       => \"INDEPENDENT\",  -- string",
            "        WRITE_MODE_A        => \"NO_CHANGE\",    -- string",
            "        WRITE_MODE_B        => \"NO_CHANGE\",    -- string",
            "        READ_WIDTH_A        => 72,              -- integer",
            "        READ_WIDTH_B        => 36,              -- integer",
            "        WRITE_WIDTH_A       => 36,              -- integer",
            "        WRITE_WIDTH_B       => 72               -- integer",
            "        CASCADE_ORDER_A     => \"NONE\",         -- string",
            "        CASCADE_ORDER_B     => \"NONE\",         -- string",
            "        DOA_REG             => 1,               -- integer",
            "        DOB_REG             => 1,               -- integer",
            "        RST_MODE_A          => \"SYNC\",         -- string",
            "        RST_MODE_B          => \"SYNC\",         -- string",
            "        RSTREG_PRIORITY_A   => \"RSTREG\",       -- string",
            "        RSTREG_PRIORITY_B   => \"RSTREG\",       -- string",
            "        SRVAL_A             => ${3:X\"000000000\"},   -- [35:0]",
            "        SRVAL_B             => ${4:X\"000000000\"},   -- [35:0]",
            "        EN_ECC_PIPE         => \"FALSE\",        -- string",
            "        EN_ECC_READ         => \"FALSE\",        -- string",
            "        EN_ECC_WRITE        => \"FALSE\",        -- string",
            "        BWE_MODE_B          => \"PARITY_INTERLEAVED\",-- string",
            "        PR_SAVE_DATA        => \"FALSE\",        -- string",
            "        SIM_COLLISION_CHECK => \"ALL\",          -- string",
            "        SLEEP_ASYNC         => \"FALSE\",        -- string",
            "        IS_ARST_A_INVERTED          => '0',     -- bit",
            "        IS_ARST_B_INVERTED          => '0',     -- bit",
            "        IS_CLKARDCLK_INVERTED       => '0',     -- bit",
            "        IS_CLKBWRCLK_INVERTED       => '0',     -- bit",
            "        IS_ENARDEN_INVERTED         => '0',     -- bit",
            "        IS_ENBWREN_INVERTED         => '0',     -- bit",
            "        IS_RSTRAMARSTRAM_INVERTED   => '0',     -- bit",
            "        IS_RSTRAMB_INVERTED         => '0',     -- bit",
            "        IS_RSTREGARSTREG_INVERTED   => '0',     -- bit",
            "        IS_RSTREGB_INVERTED         => '0'      -- bit",
            "    )",
            "    port map (",
            "        ADDRARDADDR     => ${5:ADDRARDADDR    }, -- in [11:0]",
            "        ADDRBWRADDR     => ${6:ADDRBWRADDR    }, -- in [11:0]",
            "        ARST_A          => ${7:ARST_A         }, -- in",
            "        ARST_B          => ${8:ARST_B         }, -- in",
            "        CASDINA         => ${9:CASDINA        }, -- in [31:0]",
            "        CASDINB         => ${10:CASDINB        }, -- in [31:0]",
            "        CASDINPA        => ${11:CASDINPA       }, -- in [3:0]",
            "        CASDINPB        => ${12:CASDINPB       }, -- in [3:0]",
            "        CASDOMUXA       => ${13:CASDOMUXA      }, -- in",
            "        CASDOMUXB       => ${14:CASDOMUXB      }, -- in",
            "        CASDOMUXEN_A    => ${15:CASDOMUXEN_A   }, -- in",
            "        CASDOMUXEN_B    => ${16:CASDOMUXEN_B   }, -- in",
            "        CASINDBITERR    => ${17:CASINDBITERR   }, -- in",
            "        CASINSBITERR    => ${18:CASINSBITERR   }, -- in",
            "        CASOREGIMUXA    => ${19:CASOREGIMUXA   }, -- in",
            "        CASOREGIMUXB    => ${20:CASOREGIMUXB   }, -- in",
            "        CASOREGIMUXEN_A => ${21:CASOREGIMUXEN_A}, -- in",
            "        CASOREGIMUXEN_B => ${22:CASOREGIMUXEN_B}, -- in",
            "        CLKARDCLK       => ${23:CLKARDCLK      }, -- in",
            "        CLKBWRCLK       => ${24:CLKBWRCLK      }, -- in",
            "        DINADIN         => ${25:DINADIN        }, -- in [31:0]",
            "        DINBDIN         => ${26:DINBDIN        }, -- in [31:0]",
            "        DINPADINP       => ${27:DINPADINP      }, -- in [3:0]",
            "        DINPBDINP       => ${28:DINPBDINP      }, -- in [3:0]",
            "        ECCPIPECE       => ${29:ECCPIPECE      }, -- in",
            "        ENARDEN         => ${30:ENARDEN        }, -- in",
            "        ENBWREN         => ${31:ENBWREN        }, -- in",
            "        INJECTDBITERR   => ${32:INJECTDBITERR  }, -- in",
            "        INJECTSBITERR   => ${33:INJECTSBITERR  }, -- in",
            "        REGCEAREGCE     => ${34:REGCEAREGCE    }, -- in",
            "        REGCEB          => ${35:REGCEB         }, -- in",
            "        RSTRAMARSTRAM   => ${36:RSTRAMARSTRAM  }, -- in",
            "        RSTRAMB         => ${37:RSTRAMB        }, -- in",
            "        RSTREGARSTREG   => ${38:RSTREGARSTREG  }, -- in",
            "        RSTREGB         => ${39:RSTREGB        }, -- in",
            "        SLEEP           => ${40:SLEEP          }, -- in",
            "        WEA             => ${41:WEA            }, -- in [3:0]",
            "        WEBWE           => ${42:WEBWE          }, -- in [8:0]",
            "        CASDOUTA        => ${43:CASDOUTA       }, -- out [31:0]",
            "        CASDOUTB        => ${44:CASDOUTB       }, -- out [31:0]",
            "        CASDOUTPA       => ${45:CASDOUTPA      }, -- out [3:0]",
            "        CASDOUTPB       => ${46:CASDOUTPB      }, -- out [3:0]",
            "        CASOUTDBITERR   => ${47:CASOUTDBITERR  }, -- out",
            "        CASOUTSBITERR   => ${48:CASOUTSBITERR  }, -- out",
            "        DBITERR         => ${49:DBITERR        }, -- out",
            "        DOUTADOUT       => ${50:DOUTADOUT      }, -- out [31:0]",
            "        DOUTBDOUT       => ${51:DOUTBDOUT      }, -- out [31:0]",
            "        DOUTPADOUTP     => ${52:DOUTPADOUTP    }, -- out [3:0]",
            "        DOUTPBDOUTP     => ${53:DOUTPBDOUTP    }, -- out [3:0]",
            "        SBITERR         => ${54:SBITERR        } -- out",
            "    ),",
        ],
        "description": "36K-bit Configurable Synchronous Block RAM",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RAMD32": {
        "prefix": "RAMD32",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Ramd32_${2:0} : RAMD32",
            "    generic map (",
            "        INIT            => ${3:X\"00000000\"},-- [31:0]",
            "        IS_CLK_INVERTED => '0'          -- bit",
            "    )",
            "    port map (",
            "        I       => ${4:I    }, -- in",
            "        WE      => ${5:WE   }, -- in",
            "        CLK     => ${6:CLK  }, -- in",
            "        RADR0   => ${7:RADR0}, -- in",
            "        RADR1   => ${8:RADR1}, -- in",
            "        RADR2   => ${9:RADR2}, -- in",
            "        RADR3   => ${10:RADR3}, -- in",
            "        RADR4   => ${11:RADR4}, -- in",
            "        WADR0   => ${12:WADR0}, -- in",
            "        WADR1   => ${13:WADR1}, -- in",
            "        WADR2   => ${14:WADR2}, -- in",
            "        WADR3   => ${15:WADR3}, -- in",
            "        WADR4   => ${16:WADR4}, -- in",
            "        O       => ${17:O    } -- out",
            "    );",
            ""
        ],
        "description": "Single input, 32 deep dual port select RAM.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RIU_OR": {
        "prefix": "RIU_OR",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Riu_or_${2:0} : RIU_OR",
            "    generic map (",
            "        SIM_DEVICE  => \"ULTRASCALE\",-- string",
            "        SIM_VERSION => 2.0           -- real",
            "    )",
            "    port map (",
            "        RIU_RD_DATA_LOW     => ${3:RIU_RD_DATA_LOW }, -- in [15:0]",
            "        RIU_RD_DATA_UPP     => ${4:RIU_RD_DATA_UPP }, -- in [15:0]",
            "        RIU_RD_VALID_LOW    => ${5:RIU_RD_VALID_LOW}, -- in",
            "        RIU_RD_VALID_UPP    => ${6:RIU_RD_VALID_UPP}, -- in",
            "        RIU_RD_DATA         => ${7:RIU_RD_DATA     }, -- out [15:0]",
            "        RIU_RD_VALID        => ${8:RIU_RD_VALID    } -- out",
            "    );",
            ""
        ],
        "description": "Register interface unit selection block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RXTX_BITSLICE": {
        "prefix": "RXTX_BITSLICE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Rxtx_btslce_${2:0} : RXTX_BITSLICE",
            "    generic map (",
            "        RX_DATA_TYPE            => \"NONE\",     -- string",
            "        RX_DATA_WIDTH           => 8,           -- integer",
            "        RX_DELAY_FORMAT         => \"TIME\",     -- string",
            "        RX_DELAY_TYPE           => \"FIXED\",    -- string",
            "        RX_DELAY_VALUE          => 0,           -- integer",
            "        TX_DATA_WIDTH           => 8,           -- integer",
            "        TX_DELAY_FORMAT         => \"TIME\",     -- string",
            "        TX_DELAY_TYPE           => \"FIXED\",    -- string",
            "        TX_DELAY_VALUE          => 0,           -- integer",
            "        RX_REFCLK_FREQUENCY     => 300.0,       -- real",
            "        TX_REFCLK_FREQUENCY     => 300.0,       -- real",
            "        RX_UPDATE_MODE          => \"ASYNC\",    -- string",
            "        TX_UPDATE_MODE          => \"ASYNC\",    -- string",
            "        FIFO_SYNC_MODE          => \"FALSE\",    -- string",
            "        INIT                    => '1',         -- bit",
            "        LOOPBACK                => \"FALSE\",    -- string",
            "        NATIVE_ODELAY_BYPASS    => \"FALSE\",    -- string",
            "        TBYTE_CTL               => \"TBYTE_IN\", -- string",
            "        TX_OUTPUT_PHASE_90      => \"FALSE\",    -- string",
            "        ENABLE_PRE_EMPHASIS     => \"FALSE\",    -- string",
            "        IS_RX_CLK_INVERTED      => '0',         -- bit",
            "        IS_RX_RST_DLY_INVERTED  => '0',         -- bit",
            "        IS_RX_RST_INVERTED      => '0',         -- bit",
            "        IS_TX_CLK_INVERTED      => '0',         -- bit",
            "        IS_TX_RST_DLY_INVERTED  => '0',         -- bit",
            "        IS_TX_RST_INVERTED      => '0',         -- bit",
            "        SIM_DEVICE              => \"ULTRASCALE\" -- string",
            "        SIM_VERSION             => 2.0          -- real",
            "    )",
            "    port map (",
            "        DATAIN          => ${3:DATAIN        }, -- in",
            "        Q               => ${4:Q             }, -- out [7:0]",
            "        RX_RST          => ${5:RX_RST        }, -- in",
            "        RX_CLK          => ${6:RX_CLK        }, -- in",
            "        RX_CE           => ${7:RX_CE         }, -- in",
            "        RX_RST_DLY      => ${8:RX_RST_DLY    }, -- in",
            "        RX_INC          => ${9:RX_INC        }, -- in",
            "        RX_LOAD         => ${10:RX_LOAD       }, -- in",
            "        RX_EN_VTC       => ${11:RX_EN_VTC     }, -- in",
            "        RX_CNTVALUEIN   => ${12:RX_CNTVALUEIN }, -- in [8:0]",
            "        RX_CNTVALUEOUT  => ${13:RX_CNTVALUEOUT}, -- out [8:0]",
            "        FIFO_RD_CLK     => ${14:FIFO_RD_CLK   }, -- in",
            "        FIFO_RD_EN      => ${15:FIFO_RD_EN    }, -- in",
            "        FIFO_EMPTY      => ${16:FIFO_EMPTY    }, -- out",
            "        FIFO_WRCLK_OUT  => ${17:FIFO_WRCLK_OUT}, -- out",
            "        RX_BIT_CTRL_IN  => ${18:RX_BIT_CTRL_IN}, -- in [39:0]",
            "        TX_BIT_CTRL_IN  => ${19:TX_BIT_CTRL_IN}, -- in [39:0]",
            "        RX_BIT_CTRL_OUT => ${20:RX_BIT_CTRL_OU}, -- out [39:0]",
            "        TX_BIT_CTRL_OUT => ${21:TX_BIT_CTRL_OU}, -- out [39:0]",
            "        D               => ${22:D             }, -- in [7:0]",
            "        T               => ${23:T             }, -- in",
            "        TBYTE_IN        => ${24:TBYTE_IN      }, -- in",
            "        O               => ${25:O             }, -- out",
            "        T_OUT           => ${26:T_OUT         }, -- out",
            "        TX_RST          => ${27:TX_RST        }, -- in",
            "        TX_CLK          => ${28:TX_CLK        }, -- in",
            "        TX_CE           => ${29:TX_CE         }, -- in",
            "        TX_RST_DLY      => ${30:TX_RST_DLY    }, -- in",
            "        TX_INC          => ${31:TX_INC        }, -- in",
            "        TX_LOAD         => ${32:TX_LOAD       }, -- in",
            "        TX_EN_VTC       => ${33:TX_EN_VTC     }, -- in",
            "        TX_CNTVALUEIN   => ${34:TX_CNTVALUEIN }, -- in [8:0]",
            "        TX_CNTVALUEOUT  => ${35:TX_CNTVALUEOUT} -- out [8:0]",
            "    );",
            ""
        ],
        "description": "Native bidirectional serial-parallel/parallel-serial IO block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "RX_BITSLICE": {
        "prefix": "RX_BITSLICE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Rx_btslce_${2:0} : RX_BITSLICE",
            "    generic map(",
            "        CASCADE                 => \"FALSE\",    -- string",
            "        DATA_TYPE               => \"NONE\",     -- string",
            "        DATA_WIDTH              => 8,           -- integer",
            "        DELAY_FORMAT            => \"TIME\",     -- string",
            "        DELAY_TYPE              => \"FIXED\",    -- string",
            "        DELAY_VALUE             => 0,           -- integer",
            "        DELAY_VALUE_EXT         => 0,           -- integer",
            "        FIFO_SYNC_MODE          => \"FALSE\",    -- string",
            "        IS_CLK_EXT_INVERTED     => '0',         -- bit",
            "        IS_CLK_INVERTED         => '0',         -- bit",
            "        IS_RST_DLY_EXT_INVERTED => '0',         -- bit",
            "        IS_RST_DLY_INVERTED     => '0',         -- bit",
            "        IS_RST_INVERTED         => '0',         -- bit",
            "        REFCLK_FREQUENCY        => 300.0,       -- real",
            "        UPDATE_MODE             => \"ASYNC\",    -- string",
            "        UPDATE_MODE_EXT         => \"ASYNC\",    -- string",
            "        SIM_DEVICE              => \"ULTRASCALE\" -- string",
            "        SIM_VERSION             => 2.0          -- real",
            "    )",
            "    port map (",
            "        DATAIN              => ${3:DATAIN          }, -- in",
            "        FIFO_RD_CLK         => ${4:FIFO_RD_CLK     }, -- in",
            "        FIFO_RD_EN          => ${5:FIFO_RD_EN      }, -- in",
            "        RX_BIT_CTRL_IN      => ${6:RX_BIT_CTRL_IN  }, -- in [39:0]",
            "        TX_BIT_CTRL_IN      => ${7:TX_BIT_CTRL_IN  }, -- in [39:0]",
            "        RX_BIT_CTRL_OUT     => ${8:RX_BIT_CTRL_OUT }, -- out [39:0]",
            "        TX_BIT_CTRL_OUT     => ${9:TX_BIT_CTRL_OUT }, -- out [39:0]",
            "        RST                 => ${10:RST             }, -- in",
            "        CLK                 => ${11:CLK             }, -- in",
            "        CE                  => ${12:CE              }, -- in",
            "        RST_DLY             => ${13:RST_DLY         }, -- in",
            "        INC                 => ${14:INC             }, -- in",
            "        LOAD                => ${15:LOAD            }, -- in",
            "        EN_VTC              => ${16:EN_VTC          }, -- in",
            "        CNTVALUEIN          => ${17:CNTVALUEIN      }, -- in [8:0]",
            "        CNTVALUEOUT         => ${18:CNTVALUEOUT     }, -- out [8:0]",
            "        CLK_EXT             => ${19:CLK_EXT         }, -- in",
            "        CE_EXT              => ${20:CE_EXT          }, -- in",
            "        RST_DLY_EXT         => ${21:RST_DLY_EXT     }, -- in",
            "        INC_EXT             => ${22:INC_EXT         }, -- in",
            "        LOAD_EXT            => ${23:LOAD_EXT        }, -- in",
            "        EN_VTC_EXT          => ${24:EN_VTC_EXT      }, -- in",
            "        CNTVALUEIN_EXT      => ${25:CNTVALUEIN_EXT  }, -- in [8:0]",
            "        CNTVALUEOUT_EXT     => ${26:CNTVALUEOUT_EXT }, -- out [8:0]",
            "        BIT_CTRL_OUT_EXT    => ${27:BIT_CTRL_OUT_EXT}, -- out [28:0]",
            "        FIFO_EMPTY          => ${28:FIFO_EMPTY      }, -- out",
            "        FIFO_WRCLK_OUT      => ${29:FIFO_WRCLK_OUT  }, -- out",
            "        Q                   => ${30:Q               } -- out [7:0]",
            "    );",
            ""
        ],
        "description": "Native input serial-parallel IO block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
    "SRLC32E": {
        "prefix": "SRLC32E",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Srlc32e_${2:0} SRLC32E",
            "    generic map (",
            "        INIT            => ${3:X\"00000000\"},",
            "        IS_CLK_INVERTED => '0'",
            "    )",
            "    port map (",
            "        D   => ${4:D  }, -- in",
            "        A   => ${5:A  }, -- in [4:0]",
            "        CE  => ${6:CE }, -- in",
            "        CLK => ${7:CLK}, -- in",
            "        Q   => ${8:Q  }, -- out",
            "        Q31 => ${9:Q31} -- out",
            "    );",
            ""
        ],
        "description": "32-Bit shift register look-up table.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "STARTUPE2": {
        "prefix": "STARTUPE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Strtupe2_${2:0} STARTUPE2",
            "    generic map (",
            "        PROG_USR        => \"FALSE\",-- string",
            "        SIM_CCLK_FREQ   => 0.0      -- real",
            "    )",
            "    port map (",
            "        USRDONEO    => ${3:USRDONEO }, -- in",
            "        USRDONETS   => ${4:USRDONETS}, -- in",
            "        KEYCLEARB   => ${5:KEYCLEARB}, -- in",
            "        PACK        => ${6:PACK     }, -- in",
            "        USRCCLKO    => ${7:USRCCLKO }, -- in",
            "        USRCCLKTS   => ${8:USRCCLKTS}, -- in",
            "        CLK         => ${9:CLK      }, -- in",
            "        GSR         => ${10:GSR      }, -- in",
            "        GTS         => ${11:GTS      }, -- in",
            "        CFGCLK      => ${12:CFGCLK   }, -- out",
            "        CFGMCLK     => ${13:CFGMCLK  }, -- out",
            "        EOS         => ${14:EOS      }, -- out",
            "        PREQ        => ${15:PREQ     } -- out",
            "    );",
            ""
        ],
        "description": "Startup controller block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "STARTUPE3": {
        "prefix": "STARTUPE3",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Strtupe3_${2:0} STARTUPE3",
            "    generic map : (",
            "        PROG_USR        => \"FALSE\",-- string",
            "        SIM_CCLK_FREQ   => 0.0      -- real",
            "    )",
            "    port map (",
            "        USRDONEO    => ${3:USRDONEO }, -- in",
            "        USRDONETS   => ${4:USRDONETS}, -- in",
            "        KEYCLEARB   => ${5:KEYCLEARB}, -- in",
            "        PACK        => ${6:PACK     }, -- in",
            "        USRCCLKO    => ${7:USRCCLKO }, -- in",
            "        USRCCLKTS   => ${8:USRCCLKTS}, -- in",
            "        GSR         => ${9:GSR      }, -- in",
            "        GTS         => ${10:GTS      }, -- in",
            "        DTS         => ${11:DTS      }, -- in [3:0]",
            "        FCSBO       => ${12:FCSBO    }, -- in",
            "        FCSBTS      => ${13:FCSBTS   }, -- in",
            "        DO          => ${14:DO       }, -- in [3:0]",
            "        DI          => ${15:DI       }, -- out [3:0]",
            "        CFGCLK      => ${16:CFGCLK   }, -- out",
            "        CFGMCLK     => ${17:CFGMCLK  }, -- out",
            "        EOS         => ${18:EOS      }, -- out",
            "        PREQ        => ${19:PREQ     } -- out",
            "    );",
            ""
        ],
        "description": "Startup controller block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "TX_BITSLICE": {
        "prefix": "TX_BITSLICE",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Tx-btslce_${2:0} TX_BITSLICE",
            "    generic map (",
            "        DATA_WIDTH              => 8,           -- integer",
            "        DELAY_FORMAT            => \"TIME\",     -- string",
            "        DELAY_TYPE              => \"FIXED\",    -- string",
            "        DELAY_VALUE             => 0,           -- integer",
            "        INIT                    => '1',         -- bit",
            "        IS_CLK_INVERTED         => '0',         -- bit",
            "        IS_RST_DLY_INVERTED     => '0',         -- bit",
            "        IS_RST_INVERTED         => '0',         -- bit",
            "        NATIVE_ODELAY_BYPASS    => \"FALSE\",    -- string",
            "        OUTPUT_PHASE_90         => \"FALSE\",    -- string",
            "        ENABLE_PRE_EMPHASIS     => \"OFF\",      -- string",
            "        REFCLK_FREQUENCY        => 300.0,       -- real",
            "        TBYTE_CTL               => \"TBYTE_IN\", -- string",
            "        UPDATE_MODE             => \"ASYNC\",    -- string",
            "        SIM_DEVICE : string     => \"ULTRASCALE\" -- string",
            "        SIM_VERSION             => 2.0          -- real",
            "    )",
            "    port map (",
            "        D               => ${3:D              }, -- in [7:0]",
            "        T               => ${4:T              }, -- in",
            "        TBYTE_IN        => ${5:TBYTE_IN       }, -- in",
            "        RX_BIT_CTRL_IN  => ${6:RX_BIT_CTRL_IN }, -- in [39:0]",
            "        TX_BIT_CTRL_IN  => ${7:TX_BIT_CTRL_IN }, -- in [39:0]",
            "        RX_BIT_CTRL_OUT => ${8:RX_BIT_CTRL_OUT}, -- out [39:0]",
            "        TX_BIT_CTRL_OUT => ${9:TX_BIT_CTRL_OUT}, -- out [39:0]",
            "        RST             => ${10:RST            }, -- in",
            "        CLK             => ${11:CLK            }, -- in",
            "        CE              => ${12:CE             }, -- in",
            "        RST_DLY         => ${13:RST_DLY        }, -- in",
            "        INC             => ${14:INC            }, -- in",
            "        LOAD            => ${15:LOAD           }, -- in",
            "        EN_VTC          => ${16:EN_VTC         }, -- in",
            "        CNTVALUEIN      => ${17:CNTVALUEIN     }, -- in [8:0]",
            "        CNTVALUEOUT     => ${18:CNTVALUEOUT    }, -- out [8:0]",
            "        O               => ${19:O              }, -- out",
            "        T_OUT           => ${20:T_OUT          } -- out",
            "    );",
            ""
        ],
        "description": "Native output serial-parallel IO block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "TX_BITSLICE_TRI": {
        "prefix": "TX_BITSLICE_TRI",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Tx_btslce_tri_${2:0} TX_BITSLICE_TRI",
            "    generic map (",
            "        DATA_WIDTH              => 8,           -- integer",
            "        DELAY_FORMAT            => \"TIME\",     -- string",
            "        DELAY_TYPE              => \"FIXED\",    -- string",
            "        DELAY_VALUE             => 0,           -- integer",
            "        INIT                    => '1',         -- bit:",
            "        IS_CLK_INVERTED         => '0',         -- bit:",
            "        IS_RST_DLY_INVERTED     => '0',         -- bit:",
            "        IS_RST_INVERTED         => '0',         -- bit:",
            "        NATIVE_ODELAY_BYPASS    => \"FALSE\",    -- string",
            "        OUTPUT_PHASE_90         => \"FALSE\",    -- string",
            "        REFCLK_FREQUENCY        => 300.0,       -- real",
            "        UPDATE_MODE             => \"ASYNC\"      -- string",
            "        SIM_DEVICE              => \"ULTRASCALE\" -- string",
            "        SIM_VESION              => 2.0          -- real",
            "    )",
            "    port map (",
            "        BIT_CTRL_IN     => ${3:BIT_CTRL_IN }, -- in [39:0]",
            "        BIT_CTRL_OUT    => ${4:BIT_CTRL_OUT}, -- out [39:0]",
            "        RST             => ${5:RST         }, -- in",
            "        CLK             => ${6:CLK         }, -- in",
            "        CE              => ${7:CE          }, -- in",
            "        RST_DLY         => ${8:RST_DLY     }, -- in",
            "        INC             => ${9:INC         }, -- in",
            "        LOAD            => ${10:LOAD        }, -- in",
            "        EN_VTC          => ${11:EN_VTC      }, -- in",
            "        CNTVALUEIN      => ${12:CNTVALUEIN  }, -- in [8:0]",
            "        CNTVALUEOUT     => ${13:CNTVALUEOUT }, -- out [8:0]",
            "        TRI_OUT         => ${14:TRI_OUT     } -- out",
            "    );",
            ""
        ],
        "description": "Native output tri-state IO control block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "URAM288": {
        "prefix": "URAM288",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Uram288_${2:0} URAM288",
            "    generic map (",
            "        AUTO_SLEEP_LATENCY        => 8,                     -- integer",
            "        AVG_CONS_INACTIVE_CYCLES  => 10,                    -- integer",
            "        BWE_MODE_A                => \"PARITY_INTERLEAVED\", -- string",
            "        BWE_MODE_B                => \"PARITY_INTERLEAVED\", -- string",
            "        CASCADE_ORDER_A           => \"NONE\",               -- string",
            "        CASCADE_ORDER_B           => \"NONE\",               -- string",
            "        EN_AUTO_SLEEP_MODE        => \"FALSE\",              -- string",
            "        EN_ECC_RD_A               => \"FALSE\",              -- string",
            "        EN_ECC_RD_B               => \"FALSE\",              -- string",
            "        EN_ECC_WR_A               => \"FALSE\",              -- string",
            "        EN_ECC_WR_B               => \"FALSE\",              -- string",
            "        IREG_PRE_A                => \"FALSE\",              -- string",
            "        IREG_PRE_B                => \"FALSE\",              -- string",
            "        IS_CLK_INVERTED           => '0',                   -- bit",
            "        IS_EN_A_INVERTED          => '0',                   -- bit",
            "        IS_EN_B_INVERTED          => '0',                   -- bit",
            "        IS_RDB_WR_A_INVERTED      => '0',                   -- bit",
            "        IS_RDB_WR_B_INVERTED      => '0',                   -- bit",
            "        IS_RST_A_INVERTED         => '0',                   -- bit",
            "        IS_RST_B_INVERTED         => '0',                   -- bit",
            "        MATRIX_ID                 => \"NONE\",               -- string",
            "        NUM_UNIQUE_SELF_ADDR_A    => 1,                     -- integer",
            "        NUM_UNIQUE_SELF_ADDR_B    => 1,                     -- integer",
            "        NUM_URAM_IN_MATRIX        => 1,                     -- integer",
            "        OREG_A                    => \"FALSE\",              -- string",
            "        OREG_B                    => \"FALSE\",              -- string",
            "        OREG_ECC_A                => \"FALSE\",              -- string",
            "        OREG_ECC_B                => \"FALSE\",              -- string",
            "        REG_CAS_A                 => \"FALSE\",              -- string",
            "        REG_CAS_B                 => \"FALSE\",              -- string",
            "        RST_MODE_A                => \"SYNC\",               -- string",
            "        RST_MODE_B                => \"SYNC\",               -- string",
            "        SELF_ADDR_A               => \"000\" & X\"00\",        -- [10 downto 0)",
            "        SELF_ADDR_B               => \"000\" & X\"00\",        -- [10 downto 0)",
            "        SELF_MASK_A               => \"111\" & X\"FF\",        -- [10 downto 0)",
            "        SELF_MASK_B               => \"111\" & X\"FF\",        -- [10 downto 0)",
            "        USE_EXT_CE_A              => \"FALSE\",              -- string",
            "        USE_EXT_CE_B              => \"FALSE\"               -- string",
            "    )",
            "    port map (",
            "        DIN_A                     => ${3:DIN_A             }, -- in [71:0]",
            "        ADDR_A                    => ${4:ADDR_A            }, -- in [22:0]",
            "        EN_A                      => ${5:EN_A              }, -- in",
            "        RDB_WR_A                  => ${6:RDB_WR_A          }, -- in",
            "        BWE_A                     => ${7:BWE_A             }, -- in [8:0]",
            "        INJECT_SBITERR_A          => ${8:INJECT_SBITERR_A  }, -- in",
            "        INJECT_DBITERR_A          => ${9:INJECT_DBITERR_A  }, -- in",
            "        OREG_CE_A                 => ${10:OREG_CE_A         }, -- in",
            "        OREG_ECC_CE_A             => ${11:OREG_ECC_CE_A     }, -- in",
            "        RST_A                     => ${12:RST_A             }, -- in",
            "        DOUT_A                    => ${13:DOUT_A            }, -- out [71:0]",
            "        SBITERR_A                 => ${14:SBITERR_A         }, -- out",
            "        DBITERR_A                 => ${15:DBITERR_A         }, -- out",
            "        RDACCESS_A                => ${16:RDACCESS_A        }, -- out",
            "        SLEEP                     => ${17:SLEEP             }, -- in",
            "        CLK                       => ${18:CLK               }, -- in",
            "        DIN_B                     => ${19:DIN_B             }, -- in [71:0]",
            "        ADDR_B                    => ${20:ADDR_B            }, -- in [22:0]",
            "        EN_B                      => ${21:EN_B              }, -- in",
            "        RDB_WR_B                  => ${22:RDB_WR_B          }, -- in",
            "        BWE_B                     => ${23:BWE_B             }, -- in [8:0]",
            "        INJECT_SBITERR_B          => ${24:INJECT_SBITERR_B  }, -- in",
            "        INJECT_DBITERR_B          => ${25:INJECT_DBITERR_B  }, -- in",
            "        OREG_CE_B                 => ${26:OREG_CE_B         }, -- in",
            "        OREG_ECC_CE_B             => ${27:OREG_ECC_CE_B     }, -- in",
            "        RST_B                     => ${28:RST_B             }, -- in",
            "        DOUT_B                    => ${29:DOUT_B            }, -- out [71:0]",
            "        SBITERR_B                 => ${30:SBITERR_B         }, -- out",
            "        DBITERR_B                 => ${31:DBITERR_B         }, -- out",
            "        RDACCESS_B                => ${32:RDACCESS_B        }, -- out",
            "        CAS_IN_ADDR_A             => ${33:CAS_IN_ADDR_A     }, -- in [22:0]",
            "        CAS_IN_ADDR_B             => ${34:CAS_IN_ADDR_B     }, -- in [22:0]",
            "        CAS_IN_BWE_A              => ${35:CAS_IN_BWE_A      }, -- in [8:0]",
            "        CAS_IN_BWE_B              => ${36:CAS_IN_BWE_B      }, -- in [8:0]",
            "        CAS_IN_DBITERR_A          => ${37:CAS_IN_DBITERR_A  }, -- in",
            "        CAS_IN_DBITERR_B          => ${38:CAS_IN_DBITERR_B  }, -- in",
            "        CAS_IN_DIN_A              => ${39:CAS_IN_DIN_A      }, -- in [71:0]",
            "        CAS_IN_DIN_B              => ${40:CAS_IN_DIN_B      }, -- in [71:0]",
            "        CAS_IN_DOUT_A             => ${41:CAS_IN_DOUT_A     }, -- in [71:0]",
            "        CAS_IN_DOUT_B             => ${42:CAS_IN_DOUT_B     }, -- in [71:0]",
            "        CAS_IN_EN_A               => ${43:CAS_IN_EN_A       }, -- in",
            "        CAS_IN_EN_B               => ${44:CAS_IN_EN_B       }, -- in",
            "        CAS_IN_RDACCESS_A         => ${45:CAS_IN_RDACCESS_A }, -- in",
            "        CAS_IN_RDACCESS_B         => ${46:CAS_IN_RDACCESS_B }, -- in",
            "        CAS_IN_RDB_WR_A           => ${47:CAS_IN_RDB_WR_A   }, -- in",
            "        CAS_IN_RDB_WR_B           => ${48:CAS_IN_RDB_WR_B   }, -- in",
            "        CAS_IN_SBITERR_A          => ${49:CAS_IN_SBITERR_A  }, -- in",
            "        CAS_IN_SBITERR_B          => ${50:CAS_IN_SBITERR_B  }, -- in",
            "        CAS_OUT_ADDR_A            => ${51:CAS_OUT_ADDR_A    }, -- out [22:0]",
            "        CAS_OUT_ADDR_B            => ${52:CAS_OUT_ADDR_B    }, -- out [22:0]",
            "        CAS_OUT_BWE_A             => ${53:CAS_OUT_BWE_A     }, -- out [8:0]",
            "        CAS_OUT_BWE_B             => ${54:CAS_OUT_BWE_B     }, -- out [8:0]",
            "        CAS_OUT_DBITERR_A         => ${55:CAS_OUT_DBITERR_A }, -- out",
            "        CAS_OUT_DBITERR_B         => ${56:CAS_OUT_DBITERR_B }, -- out",
            "        CAS_OUT_DIN_A             => ${57:CAS_OUT_DIN_A     }, -- out [71:0]",
            "        CAS_OUT_DIN_B             => ${58:CAS_OUT_DIN_B     }, -- out [71:0]",
            "        CAS_OUT_DOUT_A            => ${59:CAS_OUT_DOUT_A    }, -- out [71:0]",
            "        CAS_OUT_DOUT_B            => ${60:CAS_OUT_DOUT_B    }, -- out [71:0]",
            "        CAS_OUT_EN_A              => ${61:CAS_OUT_EN_A      }, -- out",
            "        CAS_OUT_EN_B              => ${62:CAS_OUT_EN_B      }, -- out",
            "        CAS_OUT_RDACCESS_A        => ${63:CAS_OUT_RDACCESS_A}, -- out",
            "        CAS_OUT_RDACCESS_B        => ${64:CAS_OUT_RDACCESS_B}, -- out",
            "        CAS_OUT_RDB_WR_A          => ${65:CAS_OUT_RDB_WR_A  }, -- out",
            "        CAS_OUT_RDB_WR_B          => ${66:CAS_OUT_RDB_WR_B  }, -- out",
            "        CAS_OUT_SBITERR_A         => ${67:CAS_OUT_SBITERR_A }, -- out",
            "        CAS_OUT_SBITERR_B         => ${68:CAS_OUT_SBITERR_B } -- out",
            "    );",
            ""
        ],
        "description": "288K-bit high-density memory building block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "URAM288E5": {
        "prefix": "URAM288E5",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Uram288e5_${2:0} URAM288E5",
            "    generic map (",
            "        INIT_FILE                   => \"NONE\",              -- string",
            "        BWE_MODE_A                  => \"PARITY_INTERLEAVED\",-- string",
            "        BWE_MODE_B                  => \"PARITY_INTERLEAVED\",-- string",
            "        READ_WIDTH_A                => 72,                   -- integer",
            "        READ_WIDTH_B                => 72,                   -- integer",
            "        WRITE_WIDTH_A               => 72,                   -- integer",
            "        WRITE_WIDTH_B               => 72,                   -- integer",
            "        IREG_PRE_A                  => \"FALSE\",             -- string",
            "        IREG_PRE_B                  => \"FALSE\",             -- string",
            "        OREG_A                      => \"FALSE\",             -- string",
            "        OREG_B                      => \"FALSE\",             -- string",
            "        OREG_ECC_A                  => \"FALSE\",             -- string",
            "        OREG_ECC_B                  => \"FALSE\",             -- string",
            "        REG_CAS_A                   => \"FALSE\",             -- string",
            "        REG_CAS_B                   => \"FALSE\",             -- string",
            "        RST_MODE_A                  => \"SYNC\",              -- string",
            "        RST_MODE_B                  => \"SYNC\",              -- string",
            "        SELF_ADDR_A                 => \"000\" & X\"00\",       -- [10:0]",
            "        SELF_ADDR_B                 => \"000\" & X\"00\",       -- [10:0]",
            "        SELF_MASK_A                 => \"111\" & X\"FF\",       -- [10:0]",
            "        SELF_MASK_B                 => \"111\" & X\"FF\",       -- [10:0]",
            "        USE_EXT_CE_A                => \"FALSE\",             -- string",
            "        USE_EXT_CE_B                => \"FALSE\",             -- string",
            "        CASCADE_ORDER_CTRL_A        => \"NONE\",              -- string",
            "        CASCADE_ORDER_CTRL_B        => \"NONE\",              -- string",
            "        CASCADE_ORDER_DATA_A        => \"NONE\",              -- string",
            "        CASCADE_ORDER_DATA_B        => \"NONE\",              -- string",
            "        AUTO_SLEEP_LATENCY          => 8,                    -- integer",
            "        EN_AUTO_SLEEP_MODE          => \"FALSE\",             -- string",
            "        AVG_CONS_INACTIVE_CYCLES    => 10,                   -- integer",
            "        EN_ECC_RD_A                 => \"FALSE\",             -- string",
            "        EN_ECC_RD_B                 => \"FALSE\",             -- string",
            "        EN_ECC_WR_A                 => \"FALSE\",             -- string",
            "        EN_ECC_WR_B                 => \"FALSE\",             -- string",
            "        MATRIX_ID                   => \"NONE\",              -- string",
            "        NUM_UNIQUE_SELF_ADDR_A      => 1,                    -- integer",
            "        NUM_UNIQUE_SELF_ADDR_B      => 1,                    -- integer",
            "        NUM_URAM_IN_MATRIX          => 1,                    -- integer",
            "        PR_SAVE_DATA                => \"FALSE\",             -- string",
            "        IS_CLK_INVERTED             => '0',                  -- bit",
            "        IS_EN_A_INVERTED            => '0',                  -- bit",
            "        IS_EN_B_INVERTED            => '0',                  -- bit",
            "        IS_RDB_WR_A_INVERTED        => '0',                  -- bit",
            "        IS_RDB_WR_B_INVERTED        => '0',                  -- bit",
            "        IS_RST_A_INVERTED           => '0',                  -- bit",
            "        IS_RST_B_INVERTED           => '0'                  -- bit",
            "    )",
            "    port map (",
            "        DIN_A               => ${3:DIN_A             }, -- in  [71:0]",
            "        ADDR_A              => ${4:ADDR_A            }, -- in  [25:0]",
            "        EN_A                => ${5:EN_A              }, -- in",
            "        RDB_WR_A            => ${6:RDB_WR_A          }, -- in",
            "        BWE_A               => ${7:BWE_A             }, -- in  [8:0]",
            "        INJECT_SBITERR_A    => ${8:INJECT_SBITERR_A  }, -- in",
            "        INJECT_DBITERR_A    => ${9:INJECT_DBITERR_A  }, -- in",
            "        OREG_CE_A           => ${10:OREG_CE_A         }, -- in",
            "        OREG_ECC_CE_A       => ${11:OREG_ECC_CE_A     }, -- in",
            "        RST_A               => ${12:RST_A             }, -- in",
            "        SLEEP               => ${13:SLEEP             }, -- in",
            "        CLK                 => ${14:CLK               }, -- in",
            "        DIN_B               => ${15:DIN_B             }, -- in  [71:0]",
            "        ADDR_B              => ${16:ADDR_B            }, -- in  [25:0]",
            "        EN_B                => ${17:EN_B              }, -- in",
            "        RDB_WR_B            => ${18:RDB_WR_B          }, -- in",
            "        BWE_B               => ${19:BWE_B             }, -- in  [8:0]",
            "        INJECT_SBITERR_B    => ${20:INJECT_SBITERR_B  }, -- in",
            "        INJECT_DBITERR_B    => ${21:INJECT_DBITERR_B  }, -- in",
            "        OREG_CE_B           => ${22:OREG_CE_B         }, -- in",
            "        OREG_ECC_CE_B       => ${23:OREG_ECC_CE_B     }, -- in",
            "        RST_B               => ${24:RST_B             }, -- in",
            "        DOUT_A              => ${25:DOUT_A            }, -- out [71:0]",
            "        SBITERR_A           => ${26:SBITERR_A         }, -- out",
            "        DBITERR_A           => ${27:DBITERR_A         }, -- out",
            "        RDACCESS_A          => ${28:RDACCESS_A        }, -- out",
            "        DOUT_B              => ${29:DOUT_B            }, -- out [71:0]",
            "        SBITERR_B           => ${30:SBITERR_B         }, -- out",
            "        DBITERR_B           => ${31:DBITERR_B         }, -- out",
            "        RDACCESS_B          => ${32:RDACCESS_B        }, -- out",
            "        CAS_IN_ADDR_A       => ${33:CAS_IN_ADDR_A     }, -- in  [25:0]",
            "        CAS_IN_ADDR_B       => ${34:CAS_IN_ADDR_B     }, -- in  [25:0]",
            "        CAS_IN_BWE_A        => ${35:CAS_IN_BWE_A      }, -- in  [8:0]",
            "        CAS_IN_BWE_B        => ${36:CAS_IN_BWE_B      }, -- in  [8:0]",
            "        CAS_IN_DBITERR_A    => ${37:CAS_IN_DBITERR_A  }, -- in",
            "        CAS_IN_DBITERR_B    => ${38:CAS_IN_DBITERR_B  }, -- in",
            "        CAS_IN_DIN_A        => ${39:CAS_IN_DIN_A      }, -- in  [71:0]",
            "        CAS_IN_DIN_B        => ${40:CAS_IN_DIN_B      }, -- in  [71:0]",
            "        CAS_IN_DOUT_A       => ${41:CAS_IN_DOUT_A     }, -- in  [71:0]",
            "        CAS_IN_DOUT_B       => ${42:CAS_IN_DOUT_B     }, -- in  [71:0]",
            "        CAS_IN_EN_A         => ${43:CAS_IN_EN_A       }, -- in",
            "        CAS_IN_EN_B         => ${44:CAS_IN_EN_B       }, -- in",
            "        CAS_IN_RDACCESS_A   => ${45:CAS_IN_RDACCESS_A }, -- in",
            "        CAS_IN_RDACCESS_B   => ${46:CAS_IN_RDACCESS_B }, -- in",
            "        CAS_IN_RDB_WR_A     => ${47:CAS_IN_RDB_WR_A   }, -- in",
            "        CAS_IN_RDB_WR_B     => ${48:CAS_IN_RDB_WR_B   }, -- in",
            "        CAS_IN_SBITERR_A    => ${49:CAS_IN_SBITERR_A  }, -- in",
            "        CAS_IN_SBITERR_B    => ${50:CAS_IN_SBITERR_B  }, -- in",
            "        CAS_OUT_ADDR_A      => ${51:CAS_OUT_ADDR_A    }, -- out [25:0]",
            "        CAS_OUT_ADDR_B      => ${52:CAS_OUT_ADDR_B    }, -- out [25:0]",
            "        CAS_OUT_BWE_A       => ${53:CAS_OUT_BWE_A     }, -- out [8:0]",
            "        CAS_OUT_BWE_B       => ${54:CAS_OUT_BWE_B     }, -- out [8:0]",
            "        CAS_OUT_DBITERR_A   => ${55:CAS_OUT_DBITERR_A }, -- out",
            "        CAS_OUT_DBITERR_B   => ${56:CAS_OUT_DBITERR_B }, -- out",
            "        CAS_OUT_DIN_A       => ${57:CAS_OUT_DIN_A     }, -- out [71:0]",
            "        CAS_OUT_DIN_B       => ${58:CAS_OUT_DIN_B     }, -- out [71:0]",
            "        CAS_OUT_DOUT_A      => ${59:CAS_OUT_DOUT_A    }, -- out [71:0]",
            "        CAS_OUT_DOUT_B      => ${60:CAS_OUT_DOUT_B    }, -- out [71:0]",
            "        CAS_OUT_EN_A        => ${61:CAS_OUT_EN_A      }, -- out",
            "        CAS_OUT_EN_B        => ${62:CAS_OUT_EN_B      }, -- out",
            "        CAS_OUT_RDACCESS_A  => ${63:CAS_OUT_RDACCESS_A}, -- out",
            "        CAS_OUT_RDACCESS_B  => ${64:CAS_OUT_RDACCESS_B}, -- out",
            "        CAS_OUT_RDB_WR_A    => ${65:CAS_OUT_RDB_WR_A  }, -- out",
            "        CAS_OUT_RDB_WR_B    => ${66:CAS_OUT_RDB_WR_B  }, -- out",
            "        CAS_OUT_SBITERR_A   => ${67:CAS_OUT_SBITERR_A }, -- out",
            "        CAS_OUT_SBITERR_B   => ${68:CAS_OUT_SBITERR_B } -- out",
            "    );",
            ""
        ],
        "description": "288K-bit high-density memory building block.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "USR_ACCESSE2": {
        "prefix": "USR_ACCESSE2",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Usr_accsse2_${2:0} USR_ACCESSE2",
            "    port map (",
            "        CFGCLK      => ${3:CFGCLK   }, -- out",
            "        DATA        => ${4:DATA     }, -- out [31:0]",
            "        DATAVALID   => ${5:DATAVALID} -- out",
            "    );",
            ""
        ],
        "description": "Configuration data access",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "XORCY": {
        "prefix": "XORCY",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Xorcy_${2:0} XORCY",
            "    port map (",
            "        CI  => ${3:CI}, -- in",
            "        LI  => ${4:LI}, -- in",
            "        O   => ${5:O } -- out",
            "    );",
            ""
        ],
        "description": "XOR for carry logic with general output.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "XPLL": {
        "prefix": "XPLL",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Xpll_${2:0} XPLL",
            "    generic map (",
            "        CLKIN_PERIOD            => 0.000,   -- real",
            "        REF_JITTER              => 0.010,   -- real",
            "        DIVCLK_DIVIDE           => 1,       -- integer",
            "        CLKFBOUT_MULT           => 42,      -- integer",
            "        CLKFBOUT_PHASE          => 0.000,   -- real",
            "        CLKOUT0_DIVIDE          => 2,       -- integer",
            "        CLKOUT0_DUTY_CYCLE      => 0.500,   -- real",
            "        CLKOUT0_PHASE           => 0.000,   -- real",
            "        CLKOUT0_PHASE_CTRL      => \"00\",   -- std_logic_vector[1:0]",
            "        CLKOUT1_DIVIDE          => 2,       -- integer",
            "        CLKOUT1_DUTY_CYCLE      => 0.500,   -- real",
            "        CLKOUT1_PHASE           => 0.000,   -- real",
            "        CLKOUT1_PHASE_CTRL      => \"00\",   -- std_logic_vector[1:0]",
            "        CLKOUT2_DIVIDE          => 2,       -- integer",
            "        CLKOUT2_DUTY_CYCLE      => 0.500,   -- real",
            "        CLKOUT2_PHASE           => 0.000,   -- real",
            "        CLKOUT2_PHASE_CTRL      => \"00\",   -- std_logic_vector[1:0]",
            "        CLKOUT3_DIVIDE          => 2,       -- integer",
            "        CLKOUT3_DUTY_CYCLE      => 0.500,   -- real",
            "        CLKOUT3_PHASE           => 0.000,   -- real",
            "        CLKOUT3_PHASE_CTRL      => \"00\",   -- std_logic_vector[1:0]",
            "        CLKOUTPHY_DIVIDE        => \"DIV8\", -- string",
            "        DESKEW_DELAY1           => 0,       -- integer",
            "        DESKEW_DELAY2           => 0,       -- integer",
            "        DESKEW_DELAY_EN1        => \"FALSE\",-- string",
            "        DESKEW_DELAY_EN2        => \"FALSE\",-- string",
            "        DESKEW_DELAY_PATH1      => \"FALSE\",-- string",
            "        DESKEW_DELAY_PATH2      => \"FALSE\",-- string",
            "        IS_CLKIN_INVERTED       => '0',     -- bit",
            "        IS_PSEN_INVERTED        => '0',     -- bit",
            "        IS_PSINCDEC_INVERTED    => '0',     -- bit",
            "        IS_PWRDWN_INVERTED      => '0',     -- bit",
            "        IS_RST_INVERTED         => '0'     -- bit",
            "    )",
            "    port map (",
            "        CLKIN1_DESKEW   => ${3:CLKIN1_DESKEW }, -- in",
            "        CLKFB1_DESKEW   => ${4:CLKFB1_DESKEW }, -- in",
            "        CLKFB2_DESKEW   => ${5:CLKFB2_DESKEW }, -- in",
            "        CLKIN2_DESKEW   => ${6:CLKIN2_DESKEW }, -- in",
            "        CLKIN           => ${7:CLKIN         }, -- in",
            "        RST             => ${8:RST           }, -- in",
            "        PWRDWN          => ${9:PWRDWN        }, -- in",
            "        CLKOUTPHYEN     => ${10:CLKOUTPHYEN   }, -- in",
            "        CLKOUT0         => ${11:CLKOUT0       }, -- out",
            "        CLKOUT1         => ${12:CLKOUT1       }, -- out",
            "        CLKOUT2         => ${13:CLKOUT2       }, -- out",
            "        CLKOUT3         => ${14:CLKOUT3       }, -- out",
            "        CLKOUTPHY       => ${15:CLKOUTPHY     }, -- out",
            "        PSCLK           => ${16:PSCLK         }, -- in",
            "        PSEN            => ${17:PSEN          }, -- in",
            "        PSINCDEC        => ${18:PSINCDEC      }, -- in",
            "        PSDONE          => ${19:PSDONE        }, -- out",
            "        DCLK            => ${20:DCLK          }, -- in",
            "        DEN             => ${21:DEN           }, -- in",
            "        DWE             => ${22:DWE           }, -- in",
            "        DADDR           => ${23:DADDR         }, -- in [6:0]",
            "        DI              => ${24:DI            }, -- in [15:0]",
            "        DO              => ${25:DO            }, -- out [15:0]",
            "        DRDY            => ${26:DRDY          }, -- out",
            "        RIU_CLK         => ${27:RIU_CLK       }, -- in",
            "        RIU_NIBBLE_SEL  => ${28:RIU_NIBBLE_SEL}, -- in",
            "        RIU_WR_EN       => ${29:RIU_WR_EN     }, -- in",
            "        RIU_ADDR        => ${30:RIU_ADDR      }, -- in [7:0]",
            "        RIU_WR_DATA     => ${31:RIU_WR_DATA   }, -- in [15:0]",
            "        RIU_RD_DATA     => ${32:RIU_RD_DATA   }, -- out [15:0]",
            "        RIU_VALID       => ${33:RIU_VALID     }, -- out",
            "        LOCKED1_DESKEW  => ${34:LOCKED1_DESKEW}, -- out",
            "        LOCKED2_DESKEW  => ${35:LOCKED2_DESKEW}, -- out",
            "        LOCKED_FB       => ${36:LOCKED_FB     }, -- out",
            "        LOCKED          => ${37:LOCKED        } -- out",
            "    );",
            ""
        ],
        "description": "Phase Locked Loop.",
        "scope": "source.vhdl, vhdl, vhd"
    }
//
    "ZHOLD_DELAY": {
        "prefix": "ZHOLD_DELAY",
        "body": [
            "${1:$TM_FILENAME_BASE}_I_Zhld_Dly_${2:0} ZHOLD_DELAY",
            "    generic map (",
            "        IS_DLYIN_INVERTED   => '0',         -- bit",
            "        ZHOLD_FABRIC        => \"DEFAULT\",  -- string",
            "        ZHOLD_IFF           => \"DEFAULT\"    -- string",
            "    )",
            "    port map (",
            "        DLYFABRIC   => ${3:DLYFABRIC}, -- out",
            "        DLYIFF      => ${4:DLYIFF   }, -- out",
            "        DLYIN       => ${5:DLYIN    } -- in",
            "    );",
            ""
        ],
        "description": "Z-hold for IO.",
        "scope": "source.vhdl, vhdl, vhd"
    }
}
//
